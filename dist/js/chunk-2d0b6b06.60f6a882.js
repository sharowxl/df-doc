(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b6b06"],{"1dda":function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t._self._c;return e("section",{staticClass:"content df-doc"},[t._m(0),e("p",[t._v("用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。")]),t._m(1),e("p",[t._v("基础的表格展示用法。")]),e("demo-block",[e("div",[e("p",[t._v("当"),e("code",[t._v("df-table")]),t._v("元素中注入"),e("code",[t._v("data")]),t._v("对象数组后，在"),e("code",[t._v("df-table-column")]),t._v("中用"),e("code",[t._v("prop")]),t._v("属性来对应对象中的键名即可填入数据，用"),e("code",[t._v("label")]),t._v("属性来定义表格的列名。可以使用"),e("code",[t._v("width")]),t._v("属性来定义列宽。")])]),e("template",{slot:"source"},[e("df-demo0")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("  <template>\n    <df-table\n      :data=\"tableData\"\n      style=\"width: 100%\">\n      <df-table-column\n        prop=\"date\"\n        label=\"日期\"\n        width=\"180\">\n      </df-table-column>\n      <df-table-column\n        prop=\"name\"\n        label=\"姓名\"\n        width=\"180\">\n      </df-table-column>\n      <df-table-column\n        prop=\"address\"\n        label=\"地址\">\n      </df-table-column>\n    </df-table>\n  </template>\n\n  <script>\n    export default {\n      data() {\n        return {\n          tableData: [{\n            date: '2016-05-02',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1518 弄'\n          }, {\n            date: '2016-05-04',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1517 弄'\n          }, {\n            date: '2016-05-01',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1519 弄'\n          }, {\n            date: '2016-05-03',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1516 弄'\n          }]\n        }\n      }\n    }\n  <\/script>\n")])])])],2),t._m(2),e("p",[t._v("大数据表格展示用法。")]),e("demo-block",[e("div",[e("p",[t._v("当"),e("code",[t._v("df-table")]),t._v("元素中注入"),e("code",[t._v("data")]),t._v("对象数组后，在"),e("code",[t._v("df-table-column")]),t._v("中用"),e("code",[t._v("prop")]),t._v("属性来对应对象中的键名即可填入数据，用"),e("code",[t._v("label")]),t._v("属性来定义表格的列名。可以使用"),e("code",[t._v("width")]),t._v("属性来定义列宽。")])]),e("template",{slot:"source"},[e("df-demo1")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('  <template>\n    <df-table\n      useVirtual\n      :data="tableData"\n      height=\'400px\'\n      style="width: 100%">\n      <df-table-column\n        type="index"\n        width="80">\n      </df-table-column>\n      <df-table-column\n        prop="date"\n        label="日期"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="name"\n        label="姓名"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="address"\n        label="地址">\n      </df-table-column>\n    </df-table>\n  </template>\n\n  <script>\n    export default {\n      data() {\n        return {\n          \n          tableData: Array.from({length: 100}, () => ({\n            date: \'2016-05-02\',\n            name: \'李时珍\',\n            address: \'四川省武当山普陀区金沙江路 1518 弄\'\n          }))\n        }\n      }\n    }\n  <\/script>\n')])])])],2),t._m(3),e("p",[t._v("当表格没有数据时，可定制为空提示。")]),e("demo-block",[e("div",[e("p",[t._v("使用"),e("code",[t._v("empty-text")]),t._v("属性可以自定义数据为空时的文本提示内容，也可以通过插槽"),e("code",[t._v('slot="empty"')]),t._v("来定制更加自定义的提示区域。")])]),e("template",{slot:"source"},[e("df-demo2")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <div class="demonstration">自定义文本提示</div>\n    <df-table\n      :data="[]"\n      style="width: 100%"\n      empty-text="这里没有数据了">\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" width="1800" />\n    </df-table>\n    <div class="demonstration">需要图片提示</div>\n    <df-table\n      :data="[]"\n      style="width: 100%"\n      :no-empty-img="false">\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" width="1800" />\n    </df-table>\n    <div class="demonstration">自定义提示区域</div>\n    <df-table\n      :data="[]"\n      style="width: 100%">\n      <template slot="empty">\n        <div class="custom-empty-block">真的没有数据了</div>\n      </template>\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" width="1800" />\n    </df-table>\n  </div>\n</template>\n\n')])])])],2),t._m(4),e("p",[t._v("切换表格某一列的显示和隐藏。")]),e("demo-block",[e("div",[e("p",[t._v("设置"),e("code",[t._v("needHideColumns")]),t._v("属性即可开启列显隐功能，配置"),e("code",[t._v("default-hidden-columns")]),t._v("以设置默认隐藏的列，此属性是一个数组，元素为列对应的"),e("code",[t._v("prop")]),t._v("属性，当某一列的显隐发现变化时，"),e("code",[t._v("df-table")]),t._v("将外派事件 "),e("code",[t._v("hidden-status-change")]),t._v("，携带一个"),e("code",[t._v("Object")]),t._v("类型参数，包括了变化的信息。")])]),e("template",{slot:"source"},[e("df-demo3")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <df-table\n      :data="tableData"\n      need-hide-columns\n      :need-toggle-hidden-button="needToggleHiddenButton"\n      :default-hidden-columns="defaultHiddenColumns"\n      @hidden-status-change="hiddenStatusChange"\n      ref="table"\n      style="width: 100%; margin-bottom: 20px">\n      <df-table-column prop="date" label="日期" width="150" />\n      <df-table-column prop="name" label="姓名" width="150" />\n      <df-table-column prop="gender" label="性别" width="150" />\n      <df-table-column prop="address" label="地址" />\n    </df-table>\n    <df-button @click="showDate">显示日期列</df-button>\n    <df-button @click="hideDate">隐藏日期列</df-button>\n    <df-button @click="toggleName">切换姓名列显隐</df-button>\n    <df-button @click="toggleButton">切换控制按钮显隐</df-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      needToggleHiddenButton: false,\n      defaultHiddenColumns: [\'date\'],\n      tableData: [\n        {\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          gender: \'女\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        },\n        {\n          date: \'2016-05-02\',\n          name: \'李时珍\',\n          gender: \'女\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        },\n        {\n          date: \'2016-05-04\',\n          name: \'李时珍\',\n          gender: \'男\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }\n      ]\n    }\n  },\n  methods: {\n    hiddenStatusChange (hiddenStatus) {\n      console.log(hiddenStatus)\n    },\n    showDate () {\n      this.$refs.table.setColumnShowStatus(\'date\', true)\n    },\n    hideDate () {\n      this.$refs.table.setColumnShowStatus(\'date\', false)\n    },\n    toggleName () {\n      this.$refs.table.toggleColumnShowStatus(\'name\')\n    },\n    toggleButton () {\n      this.needToggleHiddenButton = !this.needToggleHiddenButton\n    }\n  }\n}\n<\/script>\n\n')])])])],2),t._m(5),e("p",[t._v("一般用于最后一列的按钮组操作。")]),e("demo-block",[e("div",[e("p",[t._v("手动添加一个"),e("code",[t._v("df-table-column")]),t._v("，设"),e("code",[t._v("type")]),t._v("属性为"),e("code",[t._v("buttons")]),t._v("即可；传入"),e("code",[t._v("button-type")]),t._v("按钮类型为"),e("code",[t._v("text")]),t._v("或"),e("code",[t._v("icon")]),t._v("，再传入按钮组数组，使用 text 时，传入文字，使用 icon 时，传入图标的类型，按钮组可以根据不同情况传入不同的按钮，具体参考第二个示例；当某一按钮被点击时，将会派出事件"),e("code",[t._v("button-click")]),t._v("，携带按钮的详细信息。支持传入"),e("code",[t._v("hidden-buttons")]),t._v("、"),e("code",[t._v("loading-buttons")]),t._v("或"),e("code",[t._v("disabled-buttons")]),t._v("设置某些按钮的隐藏、禁用或加载，需要注意的是"),e("code",[t._v("hidden-buttons")]),t._v("、"),e("code",[t._v("loading-buttons")]),t._v("或"),e("code",[t._v("disabled-buttons")]),t._v("必须通过 Vue 指定的 "),e("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B"}},[t._v("数组更新检测")]),t._v(" 方法来改变值，否则将不能监听其变化。")])]),e("template",{slot:"source"},[e("df-demo4")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <df-table\n      :data="tableData"\n      style="width: 100%;margin-bottom: 20px"\n      @button-click=\'buttonClick\'>\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" />\n      <df-table-column\n        width=\'200\'\n        type="buttons"\n        button-type=\'text\'\n        :buttons=\'["删除", "创建", "开单"]\'\n        :hidden-buttons=\'hiddenButtons\'\n      />\n    </df-table>\n    <df-button @click=\'hideFirstRowFirstButtons\'>隐藏第一行第一个按钮</df-button>\n    <df-button @click=\'showFirstRowFirstButtons\'>显示第一行第一个按钮</df-button>\n    <df-table\n      :data="tableData"\n      style="width: 100%;margin: 20px 0"\n      @button-click=\'buttonClick\'>\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" />\n      <df-table-column\n        width=\'200\'\n        type="buttons"\n        button-type=\'text\'\n        :set-buttons=\'setButtons\'\n        :loading-buttons=\'loadingButtons\'\n      />\n    </df-table>\n    <df-button @click=\'loadingFirstRowButtons\'>设置第一行的按钮组为 loading</df-button>\n    <df-button @click=\'unLoadingAllButtons\'>清除所有按钮的 loading</df-button>\n    <df-table\n      :data="tableData"\n      style="width: 100%;margin: 20px 0"\n      @button-click=\'buttonClick\'>\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" />\n      <df-table-column\n        width=\'200\'\n        type="buttons"\n        button-type=\'icon\'\n        :buttons=\'["add-square", "reduce-square", "content"]\'\n        :disabled-buttons=\'disabledButtons\'\n      />\n    </df-table>\n    <df-button @click=\'disableFirstRowFirstButtons\'>设置第一行第一个按钮为 disabled</df-button>\n    <df-button @click=\'enableFirstRowFirstButtons\'>清除第一行第一个按钮的 disabled</df-button>\n    <div style="margin-top: 20px" class=\'demonstration\'>文字类型按钮组的按钮展示数量有上限，默认展示 2 个，但是可以通过属性 display-buttons-length 配置，超出部分使用弹出方式展示，弹出的按钮支持属性 hide-on-click 配置</div>\n    <df-table\n      :data="tableData"\n      style="width: 100%;margin-top: 20px"\n      @button-click=\'buttonClick\'\n      border>\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" />\n      <df-table-column\n        width=\'200\'\n        type="buttons"\n        button-type=\'text\'\n        :display-buttons-length=\'3\'\n        :hide-on-click=\'false\'\n        :buttons=\'["删除", "创建", "开单", "编辑", "查看", "更新"]\'\n      />\n    </df-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      tableData: [{\n        date: \'2016-05-02\',\n        name: \'李时珍\',\n        address: \'四川省武当山普陀区金沙江路 1518 弄\'\n      }, {\n        date: \'2016-05-04\',\n        name: \'李时珍\',\n        address: \'四川省武当山普陀区金沙江路 1517 弄\'\n      }, {\n        date: \'2016-05-01\',\n        name: \'李时珍\',\n        address: \'四川省武当山普陀区金沙江路 1519 弄\'\n      }],\n      hiddenButtons: [],\n      loadingButtons: [],\n      disabledButtons: [{buttonIndex: 2, rowIndex: 0}]\n    }\n  },\n  methods: {\n    setButtons (row, rowIndex) {\n      if (rowIndex === 1) return [\'删除\', \'创建\', \'开单\']\n      else return [\'编辑\', \'查看\', \'更新\']\n    },\n    buttonClick (button, buttonIndex, row, rowIndex) {\n      console.log(`第 ${rowIndex + 1} 行的按钮组中的第 ${buttonIndex + 1} 个按钮被点击了，这个按钮名称是 ${button}，这一行的信息是`, row)\n    },\n    hideFirstRowFirstButtons () {\n      this.hiddenButtons.push({buttonIndex: 0, rowIndex: 0})\n    },\n    showFirstRowFirstButtons () {\n      const index = this.hiddenButtons.findIndex(hiddenButton => hiddenButton.buttonIndex === 0 && hiddenButton.rowIndex === 0)\n      this.hiddenButtons.splice(index, 1)\n    },\n    loadingFirstRowButtons () {\n      this.loadingButtons.push({buttonIndex: 0, rowIndex: 0}, {buttonIndex: 1, rowIndex: 0}, {buttonIndex: 2, rowIndex: 0})\n    },\n    unLoadingAllButtons () {\n      this.loadingButtons.splice(0, this.loadingButtons.length)\n    },\n    disableFirstRowFirstButtons () {\n      this.disabledButtons.push({buttonIndex: 0, rowIndex: 0})\n    },\n    enableFirstRowFirstButtons () {\n      const index = this.disabledButtons.findIndex(disabledButton => disabledButton.buttonIndex === 0 && disabledButton.rowIndex === 0)\n      this.disabledButtons.splice(index, 1)\n    }\n  }\n}\n<\/script>\n')])])])],2),t._m(6),e("p",[t._v("弹起行的更多操作框。")]),e("demo-block",[e("div",[e("p",[t._v("手动添加一个"),e("code",[t._v("df-table-column")]),t._v("，设"),e("code",[t._v("type")]),t._v("属性为"),e("code",[t._v("operation")]),t._v("即可；需要传入"),e("code",[t._v("operations")]),t._v("操作项，操作组可以根据不同情况传入不同的操作，具体参考第二个示例；当某一操作被触发时，将会派出事件"),e("code",[t._v("operation-click")]),t._v("，携带操作的详细信息。支持传入"),e("code",[t._v("hidden-operations")]),t._v("、"),e("code",[t._v("loading-operations")]),t._v("或"),e("code",[t._v("disabled-operations")]),t._v("设置某些按钮的隐藏、禁用或加载，需要注意的是"),e("code",[t._v("hidden-operations")]),t._v("、"),e("code",[t._v("loading-operations")]),t._v("或"),e("code",[t._v("disabled-operations")]),t._v("必须通过 Vue 指定的 "),e("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B"}},[t._v("数组更新检测")]),t._v(" 方法来改变值，否则将不能监听其变化。")])]),e("template",{slot:"source"},[e("df-demo5")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <df-table\n      :data="tableData"\n      style="width: 100%;margin-bottom: 20px"\n      @operation-click="operationClick">\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" />\n      <df-table-column\n        type=\'operation\'\n        :operations=\'["删除", "创建", "开单"]\'\n        width=\'55\'\n        :hidden-operations=\'hiddenOperations\'\n      ></df-table-column>\n    </df-table>\n    <df-button @click.stop=\'hideFirstRowFirstOperation\'>隐藏第一行第一个操作</df-button>\n    <df-button @click.stop=\'showFirstRowFirstOperation\'>显示第一行第一个操作</df-button>\n    <df-table\n      :data="tableData"\n      style="width: 100%;margin: 20px 0"\n      @operation-click="operationClick">\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" />\n      <df-table-column\n        type=\'operation\'\n        :set-operations=\'setOperations\'\n        width=\'55\'\n        :loading-operations=\'loadingOperations\'\n      ></df-table-column>\n    </df-table>\n    <df-button @click.stop=\'loadingFirstRowOperations\'>设置第一行的操作组为 loading</df-button>\n    <df-button @click.stop=\'unLoadingAllOperations\'>清除所有操作的 loading</df-button>\n    <df-table\n      :data="tableData"\n      style="width: 100%;margin: 20px 0"\n      @operation-click="operationClick">\n      <df-table-column prop="date" label="日期" width="180" />\n      <df-table-column prop="name" label="姓名" width="180" />\n      <df-table-column prop="address" label="地址" />\n      <df-table-column\n        type=\'operation\'\n        :operations=\'["删除", "创建", "开单"]\'\n        width=\'55\'\n        :disabled-operations=\'disabledOperations\'\n      ></df-table-column>\n    </df-table>\n    <df-button @click.stop=\'disableFirstRowFirstOperation\'>设置第一行第一个操作为 disabled</df-button>\n    <df-button @click.stop=\'enableFirstRowFirstOperation\'>清除第一行第一个操作的 disabled</df-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      tableData: [{\n        date: \'2016-05-02\',\n        name: \'李时珍\',\n        address: \'四川省武当山普陀区金沙江路 1518 弄\'\n      }, {\n        date: \'2016-05-04\',\n        name: \'李时珍\',\n        address: \'四川省武当山普陀区金沙江路 1517 弄\'\n      }, {\n        date: \'2016-05-01\',\n        name: \'李时珍\',\n        address: \'四川省武当山普陀区金沙江路 1519 弄\'\n      }],\n      hiddenOperations: [],\n      loadingOperations: [],\n      disabledOperations: [{operationIndex: 2, rowIndex: 0}]\n    }\n  },\n  methods: {\n    setOperations (row, rowIndex) {\n      if (rowIndex === 1) return [\'删除\', \'创建\', \'开单\']\n      else return [\'编辑\', \'查看\', \'更新\']\n    },\n    operationClick (operation, operationIndex, row, rowIndex) {\n      console.log(`第 ${rowIndex + 1} 行的弹出操作组中的第 ${operationIndex + 1} 个操作被点击了，这个操作名称是 ${operation}，这一行的信息是`, row)\n    },\n    hideFirstRowFirstOperation () {\n      this.hiddenOperations.push({operationIndex: 0, rowIndex: 0})\n    },\n    showFirstRowFirstOperation () {\n      const index = this.hiddenOperations.findIndex(hiddenOperation => hiddenOperation.operationIndex === 0 && hiddenOperation.rowIndex === 0)\n      this.hiddenOperations.splice(index, 1)\n    },\n    loadingFirstRowOperations () {\n      this.loadingOperations.push({operationIndex: 0, rowIndex: 0}, {operationIndex: 1, rowIndex: 0}, {operationIndex: 2, rowIndex: 0})\n    },\n    unLoadingAllOperations () {\n      this.loadingOperations.splice(0, this.loadingOperations.length)\n    },\n    disableFirstRowFirstOperation () {\n      this.disabledOperations.push({operationIndex: 0, rowIndex: 0})\n    },\n    enableFirstRowFirstOperation () {\n      const index = this.disabledOperations.findIndex(disabledOperation => disabledOperation.operationIndex === 0 && disabledOperation.rowIndex === 0)\n      this.disabledOperations.splice(index, 1)\n    }\n  }\n}\n<\/script>\n\n\n')])])])],2),t._m(7),e("demo-block",[e("div",[e("p",[t._v("因为table表格的 "),e("code",[t._v("宽度")]),t._v(" 是自适应的,所以若要插入按钮,请使用小号的按钮,或者文字按钮，用法参考 demo。")])]),e("template",{slot:"source"},[e("df-demo6")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <df-table\n    :data="tableData"\n    style="width: 100%">\n    <df-table-column\n      label="日期"\n      width="180">\n      <template slot-scope="scope">\n        <span>{{ scope.row.date }}</span>\n      </template>\n    </df-table-column>\n    <df-table-column\n      label="姓名"\n      width="180">\n      <template slot-scope="scope">\n        <span>{{ scope.row.name }}</span>\n      </template>\n    </df-table-column>\n    <df-table-column label="操作">\n      <template slot-scope="scope">\n        <df-button @click="handleClick(scope.row)" type="text" size="small">查看</df-button>\n        <df-button type="text" size="small"@click="handleDelete">删除</df-button>\n      </template>\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }, {\n          date: \'2016-05-04\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1517 弄\'\n        }, {\n          date: \'2016-05-01\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1519 弄\'\n        }, {\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1516 弄\'\n        }]\n      }\n    },\n    methods: {\n      handleClick(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    }\n  }\n<\/script>\n')])])])],2),t._m(8),e("p",[t._v("Table 组件提供了三种尺寸，可以在不同场景下选择合适的按钮尺寸。")]),e("demo-block",[e("div",[e("p",[t._v("额外的尺寸："),e("code",[t._v("medium")]),t._v("、"),e("code",[t._v("small")]),t._v("、"),e("code",[t._v("mini")]),t._v("，通过设置"),e("code",[t._v("size")]),t._v("属性来配置它们。")])]),e("template",{slot:"source"},[e("df-demo7")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <df-radio-group v-model="labelSize" size="small">\n      <df-radio-button label="medium"></df-radio-button>\n      <df-radio-button label="small"></df-radio-button>\n      <df-radio-button label="mini"></df-radio-button>\n    </df-radio-group>\n    <div style="margin: 20px;"></div>\n    <df-table :size="labelSize" :data="tableData" style="width: 100%">\n      <df-table-column\n        prop="date"\n        label="日期"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="name"\n        label="姓名"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="address"\n        label="地址">\n      </df-table-column>\n    </df-table>\n  </div>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        labelSize: \'small\',\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }, {\n          date: \'2016-05-04\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1517 弄\'\n        }, {\n          date: \'2016-05-01\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1519 弄\'\n        }, {\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1516 弄\'\n        }]\n      }\n    }\n  }\n<\/script>\n')])])])],2),t._m(9),e("p",[t._v("为了更容易区分出不同行的数据，表格斑马线是默认启用的，但是可以通过配置来取消使用。")]),e("demo-block",[e("div",[e("p",[e("code",[t._v("stripe")]),t._v("属性可以创建带斑马纹的表格。它接受一个"),e("code",[t._v("Boolean")]),t._v("，默认为"),e("code",[t._v("true")]),t._v("，设置为"),e("code",[t._v("false")]),t._v("以取消使用。")])]),e("template",{slot:"source"},[e("df-demo8")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    :stripe=\"false\"\n    style=\"width: 100%\">\n    <df-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(10),e("demo-block",[e("div",[e("p",[t._v("默认情况下，Table 组件是具有竖直方向的边框的，如果不需要，可以使用"),e("code",[t._v("border")]),t._v("属性，它接受一个"),e("code",[t._v("Boolean")]),t._v("，设置为"),e("code",[t._v("false")]),t._v("即可启用。")])]),e("template",{slot:"source"},[e("df-demo9")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    :border=\"false\"\n    style=\"width: 100%\">\n    <df-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(11),e("p",[t._v("可将表格内容 highlight 显示，方便区分「成功、信息、警告、危险」等内容。")]),e("demo-block",[e("div",[e("p",[t._v("可以通过指定 Table 组件的 "),e("code",[t._v("row-class-name")]),t._v(" 属性来为 Table 中的某一行添加 class，表明该行处于某种状态，注意这种情况下需要取消表格的斑马线配置，否则斑马线将会覆盖表现效果。")])]),e("template",{slot:"source"},[e("df-demo10")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :row-class-name=\"tableRowClassName\"\n    :stripe=\"false\">\n    <df-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<style>\n  .df-table .warning-row {\n    background: oldlace;\n  }\n\n  .df-table .success-row {\n    background: #f0f9eb;\n  }\n</style>\n\n<script>\n  export default {\n    methods: {\n      tableRowClassName({row, rowIndex}) {\n        if (rowIndex === 1) {\n          return 'warning-row';\n        } else if (rowIndex === 3) {\n          return 'success-row';\n        }\n        return '';\n      }\n    },\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(12),e("p",[t._v("纵向内容过多时，可选择固定表头。")]),e("demo-block",[e("div",[e("p",[t._v("只要在"),e("code",[t._v("df-table")]),t._v("元素中定义了"),e("code",[t._v("height")]),t._v("属性，即可实现固定表头的表格，而不需要额外的代码。")])]),e("template",{slot:"source"},[e("df-demo11")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    height=\"250\"\n    border\n    style=\"width: 100%\">\n    <df-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(13),e("p",[t._v("横向内容过多时，可选择固定列。")]),e("demo-block",[e("div",[e("p",[t._v("固定列需要使用"),e("code",[t._v("fixed")]),t._v("属性，它接受 Boolean 值或者"),e("code",[t._v("left")]),t._v(" "),e("code",[t._v("right")]),t._v("，表示左边固定还是右边固定。")])]),e("template",{slot:"source"},[e("df-demo12")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <df-table\n    :data="tableData"\n    border\n    style="width: 100%">\n    <df-table-column\n      fixed\n      prop="date"\n      label="日期"\n      width="150">\n    </df-table-column>\n    <df-table-column\n      prop="name"\n      label="姓名"\n      width="120">\n    </df-table-column>\n    <df-table-column\n      prop="province"\n      label="省份"\n      width="120">\n    </df-table-column>\n    <df-table-column\n      prop="city"\n      label="市区"\n      width="120">\n    </df-table-column>\n    <df-table-column\n      prop="address"\n      label="地址"\n      width="300">\n    </df-table-column>\n    <df-table-column\n      prop="zip"\n      label="邮编"\n      width="120">\n    </df-table-column>\n    <df-table-column\n      fixed="right"\n      label="操作"\n      width="100">\n      <template slot-scope="scope">\n        <df-button @click="handleClick(scope.row)" type="text" size="small">查看</df-button>\n        <df-button type="text" size="small">编辑</df-button>\n      </template>\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    methods: {\n      handleClick(row) {\n        console.log(row);\n      }\n    },\n\n    data() {\n      return {\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'李时珍\',\n          province: \'上海\',\n          city: \'普陀区\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\',\n          zip: 200333\n        }, {\n          date: \'2016-05-04\',\n          name: \'李时珍\',\n          province: \'上海\',\n          city: \'普陀区\',\n          address: \'四川省武当山普陀区金沙江路 1517 弄\',\n          zip: 200333\n        }, {\n          date: \'2016-05-01\',\n          name: \'李时珍\',\n          province: \'上海\',\n          city: \'普陀区\',\n          address: \'四川省武当山普陀区金沙江路 1519 弄\',\n          zip: 200333\n        }, {\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          province: \'上海\',\n          city: \'普陀区\',\n          address: \'四川省武当山普陀区金沙江路 1516 弄\',\n          zip: 200333\n        }]\n      }\n    }\n  }\n<\/script>\n')])])])],2),t._m(14),e("p",[t._v("横纵内容过多时，可选择固定列和表头。")]),e("demo-block",[e("div",[e("p",[t._v("固定列和表头可以同时使用，只需要将上述两个属性分别设置好即可。")])]),e("template",{slot:"source"},[e("df-demo13")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    height=\"250\">\n    <df-table-column\n      fixed\n      prop=\"date\"\n      label=\"日期\"\n      width=\"150\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"120\">\n    </df-table-column>\n    <df-table-column\n      prop=\"province\"\n      label=\"省份\"\n      width=\"120\">\n    </df-table-column>\n    <df-table-column\n      prop=\"city\"\n      label=\"市区\"\n      width=\"120\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </df-table-column>\n    <df-table-column\n      prop=\"zip\"\n      label=\"邮编\"\n      width=\"120\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(15),e("p",[t._v("当数据量动态变化时，可以为 Table 设置一个最大高度。")]),e("demo-block",[e("div",[e("p",[t._v("通过设置"),e("code",[t._v("max-height")]),t._v("属性为 Table 指定最大高度。此时若表格所需的高度大于最大高度，则会显示一个滚动条。")])]),e("template",{slot:"source"},[e("df-demo14")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    max-height=\"250\">\n    <df-table-column\n      fixed\n      prop=\"date\"\n      label=\"日期\"\n      width=\"150\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"120\">\n    </df-table-column>\n    <df-table-column\n      prop=\"province\"\n      label=\"省份\"\n      width=\"120\">\n    </df-table-column>\n    <df-table-column\n      prop=\"city\"\n      label=\"市区\"\n      width=\"120\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\"\n      width=\"300\">\n    </df-table-column>\n    <df-table-column\n      prop=\"zip\"\n      label=\"邮编\"\n      width=\"120\">\n    </df-table-column>\n    <df-table-column\n      fixed=\"right\"\n      label=\"操作\"\n      width=\"120\">\n      <template slot-scope=\"scope\">\n        <df-button\n          @click.native.prevent=\"deleteRow(scope.$index, tableData)\"\n          type=\"text\"\n          size=\"small\">\n          移除\n        </df-button>\n      </template>\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    methods: {\n      deleteRow(index, rows) {\n        rows.splice(index, 1);\n      }\n    },\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(16),e("p",[t._v("数据结构比较复杂的时候，可使用多级表头来展现数据的层次关系。")]),e("demo-block",[e("div",[e("p",[t._v("只需要在 df-table-column 里面嵌套 df-table-column，就可以实现多级表头。")])]),e("template",{slot:"source"},[e("df-demo15")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\">\n    <df-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"150\">\n    </df-table-column>\n    <df-table-column label=\"配送信息\">\n      <df-table-column\n        prop=\"name\"\n        label=\"姓名\"\n        width=\"120\">\n      </df-table-column>\n      <df-table-column label=\"地址\">\n        <df-table-column\n          prop=\"province\"\n          label=\"省份\"\n          width=\"120\">\n        </df-table-column>\n        <df-table-column\n          prop=\"city\"\n          label=\"市区\"\n          width=\"120\">\n        </df-table-column>\n        <df-table-column\n          prop=\"address\"\n          label=\"地址\"\n          width=\"300\">\n        </df-table-column>\n        <df-table-column\n          prop=\"zip\"\n          label=\"邮编\"\n          width=\"120\">\n        </df-table-column>\n      </df-table-column>\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(17),e("p",[t._v("选择单行数据时使用色块表示。")]),e("demo-block",[e("div",[e("p",[t._v("Table 组件提供了单选的支持，只需要配置"),e("code",[t._v("highlight-current-row")]),t._v("属性即可实现单选。之后由"),e("code",[t._v("current-change")]),t._v("事件来管理选中时触发的事件，它会传入"),e("code",[t._v("currentRow")]),t._v("，"),e("code",[t._v("oldCurrentRow")]),t._v("。如果需要显示索引，可以增加一列"),e("code",[t._v("df-table-column")]),t._v("，设置"),e("code",[t._v("type")]),t._v("属性为"),e("code",[t._v("index")]),t._v("即可显示从 1 开始的索引号。")])]),e("template",{slot:"source"},[e("df-demo16")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <df-table\n      ref="singleTable"\n      :data="tableData"\n      highlight-current-row\n      @current-change="handleCurrentChange"\n      style="width: 100%">\n      <df-table-column\n        type="index"\n        width="50">\n      </df-table-column>\n      <df-table-column\n        property="date"\n        label="日期"\n        width="120">\n      </df-table-column>\n      <df-table-column\n        property="name"\n        label="姓名"\n        width="120">\n      </df-table-column>\n      <df-table-column\n        property="address"\n        label="地址">\n      </df-table-column>\n    </df-table>\n    <div style="margin-top: 20px">\n      <df-button @click="setCurrent(tableData[1])">选中第二行</df-button>\n      <df-button @click="setCurrent()">取消选择</df-button>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }, {\n          date: \'2016-05-04\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1517 弄\'\n        }, {\n          date: \'2016-05-01\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1519 弄\'\n        }, {\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1516 弄\'\n        }],\n        currentRow: null\n      }\n    },\n\n    methods: {\n      setCurrent(row) {\n        this.$refs.singleTable.setCurrentRow(row);\n      },\n      handleCurrentChange(val) {\n        this.currentRow = val;\n      }\n    }\n  }\n<\/script>\n')])])])],2),t._m(18),e("p",[t._v("选择多行数据时使用 Checkbox。")]),e("demo-block",[e("div",[e("p",[t._v("实现多选非常简单: 手动添加一个"),e("code",[t._v("df-table-column")]),t._v("，设"),e("code",[t._v("type")]),t._v("属性为"),e("code",[t._v("selection")]),t._v("即可；默认情况下若内容过多会折行显示，若需要单行显示可以使用"),e("code",[t._v("show-overflow-tooltip")]),t._v("属性，它接受一个"),e("code",[t._v("Boolean")]),t._v("，为"),e("code",[t._v("true")]),t._v("时多余的内容会在 hover 时以 tooltip 的形式显示出来。")])]),e("template",{slot:"source"},[e("df-demo17")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <div>\n    <df-table\n      ref=\"multipleTable\"\n      :data=\"tableData\"\n      tooltip-effect=\"dark\"\n      style=\"width: 100%\"\n      @selection-change=\"handleSelectionChange\">\n      <df-table-column\n        type=\"selection\"\n        width=\"55\">\n      </df-table-column>\n      <df-table-column\n        label=\"日期\"\n        width=\"120\">\n        <template slot-scope=\"scope\">{{ scope.row.date }}</template>\n      </df-table-column>\n      <df-table-column\n        prop=\"name\"\n        label=\"姓名\"\n        width=\"120\">\n      </df-table-column>\n      <df-table-column\n        prop=\"address\"\n        label=\"地址\"\n        show-overflow-tooltip>\n      </df-table-column>\n    </df-table>\n    <div style=\"margin-top: 20px\">\n      <df-button @click=\"toggleSelection([tableData[1], tableData[2]])\">切换第二、第三行的选中状态</df-button>\n      <df-button @click=\"toggleSelection()\">取消选择</df-button>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }],\n        multipleSelection: []\n      }\n    },\n\n    methods: {\n      toggleSelection(rows) {\n        if (rows) {\n          rows.forEach(row => {\n            this.$refs.multipleTable.toggleRowSelection(row);\n          });\n        } else {\n          this.$refs.multipleTable.clearSelection();\n        }\n      },\n      handleSelectionChange(val) {\n        this.multipleSelection = val;\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(19),e("p",[t._v("选择单列数据时使用 Checkbox。")]),e("demo-block",[e("div",[e("p",[t._v("传入"),e("code",[t._v("columnOptions")]),t._v("，配置"),e("code",[t._v("multipleConfig")]),t._v("以启用表格单列多选。当某一列的任一项的选中状态发生变化时，会派出事件 "),e("code",[t._v("item-checked-changed")]),t._v("，携带四个参数，分别是变化处的列的prop、变化处的行的下标、变化后的值和变化处的行信息。")])]),e("template",{slot:"source"},[e("df-demo18")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <div>\n    <df-table\n      ref=\"multipleTable\"\n      :data=\"tableData\"\n      :columnOptions=\"columnOptions\"\n      @item-checked-changed=\"itemCheckedChanged\"\n      style=\"width: 100%\">\n      <df-table-column prop=\"date\" label=\"日期\" width=\"180\" />\n      <df-table-column prop=\"name\" label=\"姓名\" width=\"180\" />\n      <df-table-column prop=\"age\" label=\"年龄\" width=\"180\" />\n      <df-table-column prop=\"address\" label=\"地址\" />\n    </df-table>\n    <div style=\"margin-top: 20px\">\n      <df-button @click=\"getCheckedItems('date')\">获取日期列已选择项</df-button>\n      <df-button @click=\"getCheckedItems('name')\">获取姓名列已选择项</df-button>\n      <df-button @click=\"getCheckedItems('address')\">获取地址列已选择项</df-button>\n      <br><br>\n      <df-button @click=\"setItemChecked('date', tableData[1])\">选择日期列的第二项</df-button>\n      <df-button @click=\"setAllItemsChecked('name')\">选择姓名列的所有项</df-button>\n      <df-button @click=\"removeAllItemsChecked('address')\">取消选择地址列的所有项</df-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      columnOptions: {\n        multipleConfig: {\n          multipleColumns: [\n            {\n              columnProp: 'date',\n              disableRowsIndex: [2]\n            },\n            'name',\n            'age',\n            {\n              columnProp: 'address'\n            }\n          ]\n        }\n      },\n      tableData: [\n        {\n          date: '2016-05-01',\n          name: '李时珍',\n          age: '20岁',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        },\n        {\n          date: '2016-05-02',\n          name: '李时珍',\n          age: '12岁',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        },\n        {\n          date: '2016-05-03',\n          name: '李时珍',\n          age: '34岁',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        },\n        {\n          date: '2016-05-04',\n          name: '李时珍',\n          age: '27岁',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }\n      ]\n    }\n  },\n  methods: {\n    itemCheckedChanged (columnProp, index, value, rowData) {\n      console.log(`${columnProp} 列的第 ${index + 1} 项的 checkbox 选中状态切换到了 ${value}, 切换处的行数据是`, rowData)\n    },\n    getCheckedItems (columnProp) {\n      console.log(this.$refs.multipleTable.getCheckedItems(columnProp))\n    },\n    setItemChecked (columnProp, row) {\n      this.$refs.multipleTable.setItemChecked(columnProp, row, true)\n    },\n    setAllItemsChecked (columnProp) {\n      this.$refs.multipleTable.setAllItemsChecked(columnProp)\n    },\n    removeAllItemsChecked (columnProp) {\n      this.$refs.multipleTable.removeAllItemsChecked(columnProp)\n    }\n  }\n}\n<\/script>\n")])])])],2),t._m(20),e("p",[t._v("对表格进行排序，可快速查找或对比数据。")]),e("demo-block",[e("div",[e("p",[t._v("在列中设置"),e("code",[t._v("sortable")]),t._v("属性即可实现以该列为基准的排序，接受一个"),e("code",[t._v("Boolean")]),t._v("，默认为"),e("code",[t._v("false")]),t._v("。可以通过 Table 的"),e("code",[t._v("default-sort")]),t._v("属性设置默认的排序列和排序顺序。可以使用"),e("code",[t._v("sort-method")]),t._v("或者"),e("code",[t._v("sort-by")]),t._v("使用自定义的排序规则。如果需要后端排序，需将"),e("code",[t._v("sortable")]),t._v("设置为"),e("code",[t._v("custom")]),t._v("，同时在 Table 上监听"),e("code",[t._v("sort-change")]),t._v("事件，在事件回调中可以获取当前排序的字段名和排序顺序，从而向接口请求排序后的表格数据。在本例中，我们还使用了"),e("code",[t._v("formatter")]),t._v("属性，它用于格式化指定列的值，接受一个"),e("code",[t._v("Function")]),t._v("，会传入两个参数："),e("code",[t._v("row")]),t._v("和"),e("code",[t._v("column")]),t._v("，可以根据自己的需求进行处理。")])]),e("template",{slot:"source"},[e("df-demo19")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <df-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(21),e("p",[t._v("对表格进行筛选，可快速查找到自己想看的数据。")]),e("demo-block",[e("div",[e("p",[t._v("在列中设置"),e("code",[t._v("filters")]),t._v(" "),e("code",[t._v("filter-method")]),t._v("属性即可开启该列的筛选，filters 是一个数组，"),e("code",[t._v("filter-method")]),t._v("是一个方法，它用于决定某些数据是否显示，会传入三个参数："),e("code",[t._v("value")]),t._v(", "),e("code",[t._v("row")]),t._v(" 和 "),e("code",[t._v("column")]),t._v("。也可以通过配置属性"),e("code",[t._v("use-input-filter")]),t._v("来启用 input 框模式的筛选，参见下面"),e("code",[t._v("地址")]),t._v("列的筛选示例。")])]),e("template",{slot:"source"},[e("df-demo20")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <div>\n    <df-button @click=\"resetDateFilter\">清除日期过滤器</df-button>\n    <df-button @click=\"clearFilter\">清除所有过滤器</df-button>\n    <df-table\n      ref=\"filterTable\"\n      :data=\"tableData\"\n      style=\"width: 100%\">\n      <df-table-column\n        prop=\"date\"\n        label=\"日期\"\n        sortable\n        width=\"180\"\n        column-key=\"date\"\n        :filters=\"[{text: '2016-05-01', value: '2016-05-01'}, {text: '2016-05-02', value: '2016-05-02'}, {text: '2016-05-03', value: '2016-05-03'}, {text: '2016-05-04', value: '2016-05-04'}]\"\n        :filter-method=\"filterHandler\"\n      >\n      </df-table-column>\n      <df-table-column\n        prop=\"name\"\n        label=\"姓名\"\n        width=\"180\">\n      </df-table-column>\n      <df-table-column\n        prop=\"address\"\n        label=\"地址\"\n        :filter-method=\"filterAddress\"\n        use-input-filter\n        >\n      </df-table-column>\n      <df-table-column\n        prop=\"tag\"\n        label=\"标签\"\n        width=\"100\"\n        :filters=\"[{ text: '家', value: '家' }, { text: '公司', value: '公司' }]\"\n        :filter-method=\"filterTag\"\n        filter-placement=\"bottom-end\">\n        <template slot-scope=\"scope\">\n          <df-tag\n            :type=\"scope.row.tag === '家' ? 'primary' : 'success'\"\n            disable-transitions>{{scope.row.tag}}</df-tag>\n        </template>\n      </df-table-column>\n    </df-table>\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1 弄',\n          tag: '家'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 2 弄',\n          tag: '公司'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 3 弄',\n          tag: '家'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 4 弄',\n          tag: '公司'\n        }]\n      }\n    },\n    methods: {\n      resetDateFilter () {\n        this.$refs.filterTable.clearFilter('date')\n      },\n      clearFilter () {\n        this.$refs.filterTable.clearFilter()\n      },\n      filterTag (value, row) {\n        return row.tag === value\n      },\n      filterAddress (value, row, column) {\n        const property = column.property\n        return row[property].includes(value)\n      },\n      filterHandler (value, row, column) {\n        const property = column.property\n        return row[property] === value\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(22),e("p",[t._v("自定义列的显示内容，可组合其他组件使用。")]),e("demo-block",[e("div",[e("p",[t._v("通过 "),e("code",[t._v("Scoped slot")]),t._v(" 可以获取到 row, column, $index 和 store（table 内部的状态管理）的数据，用法参考 demo。")])]),e("template",{slot:"source"},[e("df-demo21")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <df-table\n    :data="tableData"\n    style="width: 100%">\n    <df-table-column\n      label="日期"\n      width="180">\n      <template slot-scope="scope">\n        <i class="df-icon-time-c-o"></i>\n        <span style="margin-left: 10px">{{ scope.row.date }}</span>\n      </template>\n    </df-table-column>\n    <df-table-column\n      label="姓名"\n      width="180">\n      <template slot-scope="scope">\n        <df-popover trigger="hover" placement="top">\n          <p>姓名: {{ scope.row.name }}</p>\n          <p>住址: {{ scope.row.address }}</p>\n          <div slot="reference" class="name-wrapper">\n            <df-tag size="medium">{{ scope.row.name }}</df-tag>\n          </div>\n        </df-popover>\n      </template>\n    </df-table-column>\n    <df-table-column label="操作">\n      <template slot-scope="scope">\n        <df-button\n          size="mini"\n          @click="handleEdit(scope.$index, scope.row)">编辑</df-button>\n        <df-button\n          size="mini"\n          type="danger"\n          @click="handleDelete(scope.$index, scope.row)">删除</df-button>\n      </template>\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }, {\n          date: \'2016-05-04\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1517 弄\'\n        }, {\n          date: \'2016-05-01\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1519 弄\'\n        }, {\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1516 弄\'\n        }]\n      }\n    },\n    methods: {\n      handleEdit(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    }\n  }\n<\/script>\n')])])])],2),t._m(23),e("p",[t._v("当行内容过多并且不想显示横向滚动条时，可以使用 Table 展开行功能。")]),e("demo-block",[e("div",[e("p",[t._v('通过设置 type="expand" 和 '),e("code",[t._v("Scoped slot")]),t._v(" 可以开启展开行功能，"),e("code",[t._v("df-table-column")]),t._v(" 的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 "),e("code",[t._v("Scoped slot")]),t._v(" 相同。")])]),e("template",{slot:"source"},[e("df-demo22")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\">\n    <df-table-column type=\"expand\">\n      <template slot-scope=\"props\">\n        <df-form label-position=\"left\" inline class=\"demo-table-expand\">\n          <df-form-item label=\"商品名称\">\n            <span>{{ props.row.name }}</span>\n          </df-form-item>\n          <df-form-item label=\"所属店铺\">\n            <span>{{ props.row.shop }}</span>\n          </df-form-item>\n          <df-form-item label=\"商品 ID\">\n            <span>{{ props.row.id }}</span>\n          </df-form-item>\n          <df-form-item label=\"店铺 ID\">\n            <span>{{ props.row.shopId }}</span>\n          </df-form-item>\n          <df-form-item label=\"商品分类\">\n            <span>{{ props.row.category }}</span>\n          </df-form-item>\n          <df-form-item label=\"店铺地址\">\n            <span>{{ props.row.address }}</span>\n          </df-form-item>\n          <df-form-item label=\"商品描述\">\n            <span>{{ props.row.desc }}</span>\n          </df-form-item>\n        </df-form>\n      </template>\n    </df-table-column>\n    <df-table-column\n      label=\"商品 ID\"\n      prop=\"id\">\n    </df-table-column>\n    <df-table-column\n      label=\"商品名称\"\n      prop=\"name\">\n    </df-table-column>\n    <df-table-column\n      label=\"描述\"\n      prop=\"desc\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<style>\n  .demo-table-expand {\n    font-size: 0;\n  }\n  .demo-table-expand label {\n    width: 90px;\n    color: #99a9bf;\n  }\n  .demo-table-expand .df-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 50%;\n  }\n</style>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: '12987122',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987123',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987125',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987126',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }]\n      }\n    }\n  }\n<\/script>\n")])])])],2),t._m(24),t._m(25),e("demo-block",[e("div",[e("p",[t._v("通过设置 expand column 的"),e("code",[t._v("hide-expand-icon")]),t._v("属性, 来控制某些行的展开图标隐藏, 这个属性是一个函数, 自带三个参数, 行数据, 列数据和行下标, 通过判断这些参数并最终返回"),e("code",[t._v("true")]),t._v("来控制某些行的展开图标隐藏。")])]),e("template",{slot:"source"},[e("df-demo23")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\">\n    <df-table-column type=\"expand\" :hide-expand-icon=\"hideExpandIcon\">\n      <template slot-scope=\"props\">\n        <df-form label-position=\"left\" inline class=\"demo-table-expand\">\n          <df-form-item label=\"商品名称\">\n            <span>{{ props.row.name }}</span>\n          </df-form-item>\n          <df-form-item label=\"所属店铺\">\n            <span>{{ props.row.shop }}</span>\n          </df-form-item>\n          <df-form-item label=\"商品 ID\">\n            <span>{{ props.row.id }}</span>\n          </df-form-item>\n          <df-form-item label=\"店铺 ID\">\n            <span>{{ props.row.shopId }}</span>\n          </df-form-item>\n          <df-form-item label=\"商品分类\">\n            <span>{{ props.row.category }}</span>\n          </df-form-item>\n          <df-form-item label=\"店铺地址\">\n            <span>{{ props.row.address }}</span>\n          </df-form-item>\n          <df-form-item label=\"商品描述\">\n            <span>{{ props.row.desc }}</span>\n          </df-form-item>\n        </df-form>\n      </template>\n    </df-table-column>\n    <df-table-column\n      label=\"商品 ID\"\n      prop=\"id\">\n    </df-table-column>\n    <df-table-column\n      label=\"商品名称\"\n      prop=\"name\">\n    </df-table-column>\n    <df-table-column\n      label=\"描述\"\n      prop=\"desc\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<style>\n  .demo-table-expand {\n    font-size: 0;\n  }\n  .demo-table-expand label {\n    width: 90px;\n    color: #99a9bf;\n  }\n  .demo-table-expand .df-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 50%;\n  }\n</style>\n\n<script>\nexport default {\n  data () {\n    return {\n      tableData: [{\n        id: '12987122',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987123',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987125',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987126',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }]\n    }\n  },\n  methods: {\n    hideExpandIcon (row, column, rowIndex) {\n      if (rowIndex === 2) return true\n    }\n  }\n}\n<\/script>\n")])])])],2),t._m(26),e("demo-block",[e("div",[e("p",[t._v("支持树类型的数据的显示。当 row 中包含 "),e("code",[t._v("children")]),t._v(" 字段时，被视为树形数据。渲染树形数据时，必须要指定 "),e("code",[t._v("row-key")]),t._v("。支持子节点数据异步加载。设置 Table 的 "),e("code",[t._v("lazy")]),t._v(" 属性为 true 与加载函数 "),e("code",[t._v("load")]),t._v(" 。通过指定 row 中的 "),e("code",[t._v("hasChildren")]),t._v(" 字段来指定哪些行是包含子节点。"),e("code",[t._v("children")]),t._v(" 与 "),e("code",[t._v("hasChildren")]),t._v(" 都可以通过 "),e("code",[t._v("tree-props")]),t._v(" 配置。")])]),e("template",{slot:"source"},[e("df-demo24")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <div>\n    <df-table\n      :data=\"tableData\"\n      style=\"width: 100%;margin-bottom: 20px;\"\n      row-key=\"id\"\n      border\n      use-tree\n      default-expand-all\n      :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\">\n      <df-table-column\n        prop=\"date\"\n        label=\"日期\"\n        sortable\n        width=\"180\">\n      </df-table-column>\n      <df-table-column\n        prop=\"name\"\n        label=\"姓名\"\n        sortable\n        width=\"180\">\n      </df-table-column>\n      <df-table-column\n        prop=\"address\"\n        label=\"地址\">\n      </df-table-column>\n    </df-table>\n\n    <df-table\n      :data=\"tableData1\"\n      style=\"width: 100%\"\n      row-key=\"id\"\n      border\n      use-tree\n      lazy\n      :load=\"load\"\n      :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\">\n      <df-table-column\n        prop=\"date\"\n        label=\"日期\"\n        width=\"180\">\n      </df-table-column>\n      <df-table-column\n        prop=\"name\"\n        label=\"姓名\"\n        width=\"180\">\n      </df-table-column>\n      <df-table-column\n        prop=\"address\"\n        label=\"地址\">\n      </df-table-column>\n    </df-table>\n  </div>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: 1,\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          id: 2,\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          id: 3,\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          children: [{\n              id: 31,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }, {\n              id: 32,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n          }]\n        }, {\n          id: 4,\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }],\n        tableData1: [{\n          id: 1,\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          id: 2,\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          id: 3,\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          hasChildren: true\n        }, {\n          id: 4,\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      load(tree, treeNode, resolve) {\n        setTimeout(() => {\n          resolve([\n            {\n              id: 31,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }, {\n              id: 32,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }\n          ])\n        }, 1000)\n      }\n    },\n  }\n<\/script>\n")])])])],2),t._m(27),e("p",[t._v("表头支持自定义。")]),e("demo-block",[e("div",[e("p",[t._v("通过设置 "),e("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD"}},[t._v("Scoped slot")]),t._v(" 来自定义表头。")])]),e("template",{slot:"source"},[e("df-demo25")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <df-table\n    :data="tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))"\n    style="width: 100%">\n    <df-table-column\n      label="Date"\n      prop="date">\n    </df-table-column>\n    <df-table-column\n      label="Name"\n      prop="name">\n    </df-table-column>\n    <df-table-column\n      align="right">\n      <template slot="header" slot-scope="scope">\n        <df-input\n          v-model="search"\n          size="mini"\n          placeholder="输入关键字搜索"/>\n      </template>\n      <template slot-scope="scope">\n        <df-button\n          size="mini"\n          @click="handleEdit(scope.$index, scope.row)">Edit</df-button>\n        <df-button\n          size="mini"\n          type="danger"\n          @click="handleDelete(scope.$index, scope.row)">Delete</df-button>\n      </template>\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }, {\n          date: \'2016-05-04\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1517 弄\'\n        }, {\n          date: \'2016-05-01\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1519 弄\'\n        }, {\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          address: \'四川省武当山普陀区金沙江路 1516 弄\'\n        }],\n        search: \'\'\n      }\n    },\n    methods: {\n      handleEdit(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    },\n  }\n<\/script>\n')])])])],2),t._m(28),e("p",[t._v("若表格展示的是各类数字，可以在表尾显示各列的合计。")]),e("demo-block",[e("div",[e("p",[t._v("将"),e("code",[t._v("show-summary")]),t._v("设置为"),e("code",[t._v("true")]),t._v("就会在表格尾部展示合计行。默认情况下，对于合计行，第一列不进行数据求合操作，而是显示「合计」二字（可通过"),e("code",[t._v("sum-text")]),t._v("配置），其余列会将本列所有数值进行求合操作，并显示出来。当然，你也可以定义自己的合计逻辑。使用"),e("code",[t._v("summary-method")]),t._v("并传入一个方法，返回一个数组，这个数组中的各项就会显示在合计行的各列中，具体可以参考本例中的第二个表格。你也可以使用自定义合计行插槽，来定制合计行的要展示的内容，具体可以参考本例中的第三个表格。")])]),e("template",{slot:"source"},[e("df-demo26")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <df-table\n      :data="tableData"\n      border\n      show-summary\n      style="width: 100%">\n      <df-table-column\n        prop="id"\n        label="ID"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="name"\n        label="姓名">\n      </df-table-column>\n      <df-table-column\n        prop="amount1"\n        sortable\n        label="数值 1">\n      </df-table-column>\n      <df-table-column\n        prop="amount2"\n        sortable\n        label="数值 2">\n      </df-table-column>\n      <df-table-column\n        prop="amount3"\n        sortable\n        label="数值 3">\n      </df-table-column>\n    </df-table>\n\n    <df-table\n      :data="tableData"\n      border\n      height="200"\n      :summary-method="getSummaries"\n      show-summary\n      style="width: 100%; margin-top: 20px">\n      <df-table-column\n        prop="id"\n        label="ID"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="name"\n        label="姓名">\n      </df-table-column>\n      <df-table-column\n        prop="amount1"\n        label="数值 1（元）">\n      </df-table-column>\n      <df-table-column\n        prop="amount2"\n        label="数值 2（元）">\n      </df-table-column>\n      <df-table-column\n        prop="amount3"\n        label="数值 3（元）">\n      </df-table-column>\n    </df-table>\n\n    <df-table\n      :data="tableData"\n      border\n      show-summary\n      style="width: 100%; margin-top: 20px">\n      <df-table-column\n        prop="id"\n        label="ID"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="name"\n        label="姓名">\n      </df-table-column>\n      <df-table-column\n        prop="amount1"\n        sortable\n        label="数值 1">\n      </df-table-column>\n      <df-table-column\n        prop="amount2"\n        sortable\n        label="数值 2">\n      </df-table-column>\n      <df-table-column\n        prop="amount3"\n        sortable\n        label="数值 3">\n      </df-table-column>\n      <div slot="customSummary" class="custom-summary">自定义求和（在这里进行任何布局）</div>\n    </df-table>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: \'12987122\',\n          name: \'李时珍\',\n          amount1: \'234\',\n          amount2: \'3.2\',\n          amount3: 10\n        }, {\n          id: \'12987123\',\n          name: \'李时珍\',\n          amount1: \'165\',\n          amount2: \'4.43\',\n          amount3: 12\n        }, {\n          id: \'12987124\',\n          name: \'李时珍\',\n          amount1: \'324\',\n          amount2: \'1.9\',\n          amount3: 9\n        }, {\n          id: \'12987125\',\n          name: \'李时珍\',\n          amount1: \'621\',\n          amount2: \'2.2\',\n          amount3: 17\n        }, {\n          id: \'12987126\',\n          name: \'李时珍\',\n          amount1: \'539\',\n          amount2: \'4.1\',\n          amount3: 15\n        }]\n      };\n    },\n    methods: {\n      getSummaries(param) {\n        const { columns, data } = param;\n        const sums = [];\n        columns.forEach((column, index) => {\n          if (index === 0) {\n            sums[index] = \'总价\';\n            return;\n          }\n          const values = data.map(item => Number(item[column.property]));\n          if (!values.every(value => isNaN(value))) {\n            sums[index] = values.reduce((prev, curr) => {\n              const value = Number(curr);\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0);\n            sums[index] += \' 元\';\n          } else {\n            sums[index] = \'N/A\';\n          }\n        });\n\n        return sums;\n      }\n    }\n  };\n<\/script>\n')])])])],2),t._m(29),e("p",[t._v("多行或多列共用一个数据时，可以合并行或列。")]),e("demo-block",[e("div",[e("p",[t._v("通过给"),e("code",[t._v("table")]),t._v("传入"),e("code",[t._v("span-method")]),t._v("方法可以实现合并行或列，方法的参数是一个对象，里面包含当前行"),e("code",[t._v("row")]),t._v("、当前列"),e("code",[t._v("column")]),t._v("、当前行号"),e("code",[t._v("rowIndex")]),t._v("、当前列号"),e("code",[t._v("columnIndex")]),t._v("四个属性。该函数可以返回一个包含两个元素的数组，第一个元素代表"),e("code",[t._v("rowspan")]),t._v("，第二个元素代表"),e("code",[t._v("colspan")]),t._v("。 也可以返回一个键名为"),e("code",[t._v("rowspan")]),t._v("和"),e("code",[t._v("colspan")]),t._v("的对象。")])]),e("template",{slot:"source"},[e("df-demo27")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <df-table\n      :data="tableData"\n      :span-method="arraySpanMethod"\n      border\n      style="width: 100%">\n      <df-table-column\n        prop="id"\n        label="ID"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="name"\n        label="姓名">\n      </df-table-column>\n      <df-table-column\n        prop="amount1"\n        sortable\n        label="数值 1">\n      </df-table-column>\n      <df-table-column\n        prop="amount2"\n        sortable\n        label="数值 2">\n      </df-table-column>\n      <df-table-column\n        prop="amount3"\n        sortable\n        label="数值 3">\n      </df-table-column>\n    </df-table>\n\n    <df-table\n      :data="tableData"\n      :span-method="objectSpanMethod"\n      border\n      style="width: 100%; margin-top: 20px">\n      <df-table-column\n        prop="id"\n        label="ID"\n        width="180">\n      </df-table-column>\n      <df-table-column\n        prop="name"\n        label="姓名">\n      </df-table-column>\n      <df-table-column\n        prop="amount1"\n        label="数值 1（元）">\n      </df-table-column>\n      <df-table-column\n        prop="amount2"\n        label="数值 2（元）">\n      </df-table-column>\n      <df-table-column\n        prop="amount3"\n        label="数值 3（元）">\n      </df-table-column>\n    </df-table>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: \'12987122\',\n          name: \'李时珍\',\n          amount1: \'234\',\n          amount2: \'3.2\',\n          amount3: 10\n        }, {\n          id: \'12987123\',\n          name: \'李时珍\',\n          amount1: \'165\',\n          amount2: \'4.43\',\n          amount3: 12\n        }, {\n          id: \'12987124\',\n          name: \'李时珍\',\n          amount1: \'324\',\n          amount2: \'1.9\',\n          amount3: 9\n        }, {\n          id: \'12987125\',\n          name: \'李时珍\',\n          amount1: \'621\',\n          amount2: \'2.2\',\n          amount3: 17\n        }, {\n          id: \'12987126\',\n          name: \'李时珍\',\n          amount1: \'539\',\n          amount2: \'4.1\',\n          amount3: 15\n        }]\n      };\n    },\n    methods: {\n      arraySpanMethod({ row, column, rowIndex, columnIndex }) {\n        if (rowIndex % 2 === 0) {\n          if (columnIndex === 0) {\n            return [1, 2];\n          } else if (columnIndex === 1) {\n            return [0, 0];\n          }\n        }\n      },\n\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n        if (columnIndex === 0) {\n          if (rowIndex % 2 === 0) {\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n      }\n    }\n  };\n<\/script>\n')])])])],2),t._m(30),t._m(31),e("demo-block",[e("div",[e("p",[t._v("通过给 "),e("code",[t._v("type=index")]),t._v(" 的列传入 "),e("code",[t._v("index")]),t._v(" 属性，可以自定义索引。该属性传入数字时，将作为索引的起始值。也可以传入一个方法，它提供当前行的行号（从 "),e("code",[t._v("0")]),t._v(" 开始）作为参数，返回值将作为索引展示。")])]),e("template",{slot:"source"},[e("df-demo28")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-table\n    :data=\"tableData\"\n    style=\"width: 100%\">\n    <df-table-column\n      type=\"index\"\n      :index=\"indexMethod\">\n    </df-table-column>\n    <df-table-column\n      prop=\"date\"\n      label=\"日期\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      width=\"180\">\n    </df-table-column>\n    <df-table-column\n      prop=\"address\"\n      label=\"地址\">\n    </df-table-column>\n  </df-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333,\n          tag: '家'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1517 弄',\n          zip: 200333,\n          tag: '公司'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          zip: 200333,\n          tag: '家'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1516 弄',\n          zip: 200333,\n          tag: '公司'\n        }],\n      }\n    },\n    methods: {\n      indexMethod(index) {\n        return index * 2;\n      }\n    }\n  };\n<\/script>\n")])])])],2),t._m(32),e("p",[t._v("使用两个表格拼接成一个表格, 应对特殊业务需求, 一般来讲左边表格负责奇数行, 右边表格负责偶数行, 需要兼顾好左右表格之间的关系, 且某一个表格滚动时, 另一个表格也需要同步滚动同样的距离。")]),e("demo-block",[e("div",[e("p",[t._v("对于固定高度的需求, 外壳需要设定一个高度css样式, 内层的"),e("code",[t._v("table")]),t._v("需要设置属性"),e("code",[t._v("height")]),t._v("为"),e("code",[t._v("100%")]),t._v(", 同时, 需求一般会要求只能显示一个滚动条, 所以我们需要隐藏左边表格的滚动条, 左边的表格设定属性"),e("code",[t._v("hide-scroll-bar")]),t._v("即可。另外, 当两侧表格高度不一致时, 需求一般要求补齐缺少的行高, 所以右侧的表格需要设定属性"),e("code",[t._v("supplement-row-height")]),t._v(", 生效情况是右边的表格数据少于左边的表格数据时。")])]),e("template",{slot:"source"},[e("df-demo29")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div style="display: flex; height: 200px">\n    \x3c!-- 左侧表格 --\x3e\n    <df-table\n      :data="leftTableData"\n      hide-scroll-bar\n      style="width: 50%"\n      :column-options="columnOptions"\n      @switch-to-editing-slot="leftSwitchToEditingSlot"\n      border\n      @button-click="leftButtonClick"\n      height="100%"\n      @table-body-scroll="leftTableBodyScroll"\n      ref="leftTable">\n      <df-table-column\n        label="序号"\n        prop="index"\n        width="50">\n      </df-table-column>\n      <df-table-column\n        prop="yaoPinMc"\n        label="药品名称"\n        width="80">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.yaoPinMc" :ref="`left-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="jiLiang"\n        label="剂量"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.jiLiang" :ref="`left-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="danWei"\n        label="单位"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.danWei" :ref="`left-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="biaoZhunJia"\n        label="标准价"\n        width="70">\n      </df-table-column>\n      <df-table-column\n        prop="yiBaoDengJi"\n        label="医保等级">\n      </df-table-column>\n      <df-table-column\n        width="80"\n        type="buttons"\n        button-type="icon"\n        :buttons=\'["remove-circle", "add-circle", "down-circle"]\'>\n      </df-table-column>\n    </df-table>\n    \x3c!-- 右侧表格 --\x3e\n    <df-table\n      :data="rightTableData"\n      :supplement-row-height="rightTableData.length < leftTableData.length"\n      style="width: 50%"\n      :column-options="columnOptions"\n      @switch-to-editing-slot="rightSwitchToEditingSlot"\n      border\n      @button-click="rightButtonClick"\n      height="100%"\n      @table-body-scroll="rightTableBodyScroll"\n      ref="rightTable">\n      <df-table-column\n        label="序号"\n        prop="index"\n        width="50">\n      </df-table-column>\n      <df-table-column\n        prop="yaoPinMc"\n        label="药品名称"\n        width="80">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.yaoPinMc" :ref="`right-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="jiLiang"\n        label="剂量"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.jiLiang" :ref="`right-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="danWei"\n        label="单位"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.danWei" :ref="`right-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="biaoZhunJia"\n        label="标准价"\n        width="70">\n      </df-table-column>\n      <df-table-column\n        prop="yiBaoDengJi"\n        label="医保等级">\n      </df-table-column>\n      <df-table-column\n        width="80"\n        type="buttons"\n        button-type="icon"\n        :buttons=\'["remove-circle", "add-circle", "down-circle"]\'>\n      </df-table-column>\n    </df-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      columnOptions: {\n        editConfig: {\n          trigger: \'click\',\n          mode: \'slot\',\n          editableColumns: [\n            \'yaoPinMc\',\n            \'jiLiang\',\n            \'danWei\'\n          ]\n        }\n      },\n      tableData: new Array(10).fill().map((row, rowIndex) => ({\n        yaoPinMc: `人参${rowIndex + 1}`,\n        jiLiang: 1,\n        danWei: \'g\',\n        biaoZhunJia: \'0.2011\',\n        shuLiang: 0,\n        yiBaoDengJi: \'二级\'\n      }))\n    }\n  },\n  computed: {\n    leftTableData () {\n      return this.tableData\n        .filter((row, rowIndex) => rowIndex % 2 === 0)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 1,\n            ...row\n          }\n        })\n    },\n    rightTableData () {\n      return this.tableData.filter((row, rowIndex) => rowIndex % 2 === 1)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 2,\n            ...row\n          }\n        })\n    }\n  },\n  methods: {\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2)\n    },\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2 + 1)\n    },\n    buttonClick (button, rowIndex) {\n      switch (button) {\n        case \'remove-circle\':\n          this.tableData.splice(rowIndex, 1)\n          break\n        case \'add-circle\':\n          this.tableData.push({\n            yaoPinMc: \'\',\n            jiLiang: 1,\n            danWei: \'g\',\n            biaoZhunJia: \'0.2011\',\n            shuLiang: 0,\n            yiBaoDengJi: \'二级\'\n          })\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\n          if (this.tableData.length % 2 === 0) {\n            const addedRowIndex = (this.tableData.length - 2) / 2\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          } else {\n            const addedRowIndex = (this.tableData.length - 1) / 2\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          }\n          break\n        case \'down-circle\':\n          if (rowIndex === this.tableData.length - 1) return\n          const currentRow = this.tableData[rowIndex]\n          const nextRow = this.tableData[rowIndex + 1]\n          this.tableData.splice(rowIndex, 1, nextRow)\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\n          break\n        default:\n          break\n      }\n    },\n    leftTableBodyScroll (scrollTop) {\n      this.$refs.rightTable.setTableBodyScrollTop(scrollTop)\n    },\n    rightTableBodyScroll (scrollTop) {\n      this.$refs.leftTable.setTableBodyScrollTop(scrollTop)\n    },\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.rightTable.restoreAllEditingSlot()\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: \'row\', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === \'click\' && this.$nextTick(() => {\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    },\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.leftTable.restoreAllEditingSlot()\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: \'row\', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === \'click\' && this.$nextTick(() => {\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    }\n  }\n}\n<\/script>\n')])])])],2),t._m(33),e("p",[t._v("高度不要求固定, 即不需要滚动条, 总高度随着数据的增加自由伸展高度。")]),e("demo-block",[e("div",[e("p",[t._v("去除外壳的高度css样式和内层"),e("code",[t._v("table")]),t._v("的"),e("code",[t._v("height")]),t._v("属性即可, 相应的, 所有的关联滚动逻辑也可以去除。")])]),e("template",{slot:"source"},[e("df-demo30")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div style="display: flex">\n    \x3c!-- 左侧表格 --\x3e\n    <df-table\n      :data="leftTableData"\n      style="width: 50%"\n      :column-options="columnOptions"\n      @switch-to-editing-slot="leftSwitchToEditingSlot"\n      border\n      @button-click="leftButtonClick"\n      ref="leftTable">\n      <df-table-column\n        label="序号"\n        prop="index"\n        width="50">\n      </df-table-column>\n      <df-table-column\n        prop="yaoPinMc"\n        label="药品名称"\n        width="80">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.yaoPinMc" :ref="`left-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="jiLiang"\n        label="剂量"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.jiLiang" :ref="`left-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="danWei"\n        label="单位"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.danWei" :ref="`left-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="biaoZhunJia"\n        label="标准价"\n        width="70">\n      </df-table-column>\n      <df-table-column\n        prop="yiBaoDengJi"\n        label="医保等级">\n      </df-table-column>\n      <df-table-column\n        width="80"\n        type="buttons"\n        button-type="icon"\n        :buttons=\'["remove-circle", "add-circle", "down-circle"]\'>\n      </df-table-column>\n    </df-table>\n    \x3c!-- 右侧表格 --\x3e\n    <df-table\n      :data="rightTableData"\n      :supplement-row-height="rightTableData.length < leftTableData.length"\n      style="width: 50%"\n      :column-options="columnOptions"\n      @switch-to-editing-slot="rightSwitchToEditingSlot"\n      border\n      @button-click="rightButtonClick"\n      ref="rightTable">\n      <df-table-column\n        label="序号"\n        prop="index"\n        width="50">\n      </df-table-column>\n      <df-table-column\n        prop="yaoPinMc"\n        label="药品名称"\n        width="80">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.yaoPinMc" :ref="`right-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="jiLiang"\n        label="剂量"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.jiLiang" :ref="`right-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="danWei"\n        label="单位"\n        width="50">\n        <div slot="editing" slot-scope="scope">\n          <df-input v-model="scope.row.danWei" :ref="`right-${scope.column.property}-${scope.$index}`" />\n        </div>\n      </df-table-column>\n      <df-table-column\n        prop="biaoZhunJia"\n        label="标准价"\n        width="70">\n      </df-table-column>\n      <df-table-column\n        prop="yiBaoDengJi"\n        label="医保等级">\n      </df-table-column>\n      <df-table-column\n        width="80"\n        type="buttons"\n        button-type="icon"\n        :buttons=\'["remove-circle", "add-circle", "down-circle"]\'>\n      </df-table-column>\n    </df-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      columnOptions: {\n        editConfig: {\n          trigger: \'click\',\n          mode: \'slot\',\n          editableColumns: [\n            \'yaoPinMc\',\n            \'jiLiang\',\n            \'danWei\'\n          ]\n        }\n      },\n      tableData: new Array(10).fill().map((row, rowIndex) => ({\n        yaoPinMc: `人参${rowIndex + 1}`,\n        jiLiang: 1,\n        danWei: \'g\',\n        biaoZhunJia: \'0.2011\',\n        shuLiang: 0,\n        yiBaoDengJi: \'二级\'\n      }))\n    }\n  },\n  computed: {\n    leftTableData () {\n      return this.tableData\n        .filter((row, rowIndex) => rowIndex % 2 === 0)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 1,\n            ...row\n          }\n        })\n    },\n    rightTableData () {\n      return this.tableData.filter((row, rowIndex) => rowIndex % 2 === 1)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 2,\n            ...row\n          }\n        })\n    }\n  },\n  methods: {\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2)\n    },\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2 + 1)\n    },\n    buttonClick (button, rowIndex) {\n      switch (button) {\n        case \'remove-circle\':\n          this.tableData.splice(rowIndex, 1)\n          break\n        case \'add-circle\':\n          this.tableData.push({\n            yaoPinMc: \'\',\n            jiLiang: 1,\n            danWei: \'g\',\n            biaoZhunJia: \'0.2011\',\n            shuLiang: 0,\n            yiBaoDengJi: \'二级\'\n          })\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\n          if (this.tableData.length % 2 === 0) {\n            const addedRowIndex = (this.tableData.length - 2) / 2\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          } else {\n            const addedRowIndex = (this.tableData.length - 1) / 2\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          }\n          break\n        case \'down-circle\':\n          if (rowIndex === this.tableData.length - 1) return\n          const currentRow = this.tableData[rowIndex]\n          const nextRow = this.tableData[rowIndex + 1]\n          this.tableData.splice(rowIndex, 1, nextRow)\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\n          break\n        default:\n          break\n      }\n    },\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.rightTable.restoreAllEditingSlot()\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: \'row\', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === \'click\' && this.$nextTick(() => {\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    },\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.leftTable.restoreAllEditingSlot()\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: \'row\', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === \'click\' && this.$nextTick(() => {\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    }\n  }\n}\n<\/script>\n')])])])],2),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),t._m(47)],1)},d=[function(){var t=this,e=t._self._c;return e("h2",{attrs:{id:"table-biao-ge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-biao-ge"}},[t._v("¶")]),t._v(" Table 表格")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"ji-chu-biao-ge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-biao-ge"}},[t._v("¶")]),t._v(" 基础表格")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"da-shu-ju-biao-ge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#da-shu-ju-biao-ge"}},[t._v("¶")]),t._v(" 大数据表格")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"kong-shu-ju-ti-shi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kong-shu-ju-ti-shi"}},[t._v("¶")]),t._v(" 空数据提示")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"lie-xian-yin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lie-xian-yin"}},[t._v("¶")]),t._v(" 列显隐")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"an-niu-zu-cao-zuo-lie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#an-niu-zu-cao-zuo-lie"}},[t._v("¶")]),t._v(" 按钮组操作列")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"xing-geng-duo-cao-zuo-dan-chu-shi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xing-geng-duo-cao-zuo-dan-chu-shi"}},[t._v("¶")]),t._v(" 行更多操作（弹出式）")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"dai-an-niu-de-biao-ge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dai-an-niu-de-biao-ge"}},[t._v("¶")]),t._v(" 带按钮的表格")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"biao-ge-da-xiao"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biao-ge-da-xiao"}},[t._v("¶")]),t._v(" 表格大小")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"qu-xiao-ban-ma-wen-biao-ge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qu-xiao-ban-ma-wen-biao-ge"}},[t._v("¶")]),t._v(" 取消斑马纹表格")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"bu-dai-bian-kuang-biao-ge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bu-dai-bian-kuang-biao-ge"}},[t._v("¶")]),t._v(" 不带边框表格")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"dai-zhuang-tai-biao-ge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dai-zhuang-tai-biao-ge"}},[t._v("¶")]),t._v(" 带状态表格")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"gu-ding-biao-tou"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gu-ding-biao-tou"}},[t._v("¶")]),t._v(" 固定表头")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"gu-ding-lie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gu-ding-lie"}},[t._v("¶")]),t._v(" 固定列")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"gu-ding-lie-he-biao-tou"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gu-ding-lie-he-biao-tou"}},[t._v("¶")]),t._v(" 固定列和表头")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"liu-ti-gao-du"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liu-ti-gao-du"}},[t._v("¶")]),t._v(" 流体高度")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"duo-ji-biao-tou"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#duo-ji-biao-tou"}},[t._v("¶")]),t._v(" 多级表头")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"dan-xuan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dan-xuan"}},[t._v("¶")]),t._v(" 单选")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"duo-xuan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#duo-xuan"}},[t._v("¶")]),t._v(" 多选")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"dan-lie-duo-xuan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dan-lie-duo-xuan"}},[t._v("¶")]),t._v(" 单列多选")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"pai-xu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pai-xu"}},[t._v("¶")]),t._v(" 排序")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"shai-xuan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shai-xuan"}},[t._v("¶")]),t._v(" 筛选")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"zi-ding-yi-lie-mo-ban"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zi-ding-yi-lie-mo-ban"}},[t._v("¶")]),t._v(" 自定义列模板")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"zhan-kai-xing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zhan-kai-xing"}},[t._v("¶")]),t._v(" 展开行")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"zhan-kai-xing-yin-cang-mou-xie-zhan-kai-tu-biao"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zhan-kai-xing-yin-cang-mou-xie-zhan-kai-tu-biao"}},[t._v("¶")]),t._v(" 展开行(隐藏某些展开图标)")])},function(){var t=this,e=t._self._c;return e("p",[t._v("通过"),e("code",[t._v("hide-expand-icon")]),t._v("回调函数控制某些展开功能的显隐。")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"shu-xing-shu-ju-yu-lan-jia-zai"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shu-xing-shu-ju-yu-lan-jia-zai"}},[t._v("¶")]),t._v(" 树形数据与懒加载")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"zi-ding-yi-biao-tou"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zi-ding-yi-biao-tou"}},[t._v("¶")]),t._v(" 自定义表头")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"biao-wei-he-ji-xing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biao-wei-he-ji-xing"}},[t._v("¶")]),t._v(" 表尾合计行")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"he-bing-xing-huo-lie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#he-bing-xing-huo-lie"}},[t._v("¶")]),t._v(" 合并行或列")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"zi-ding-yi-suo-yin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zi-ding-yi-suo-yin"}},[t._v("¶")]),t._v(" 自定义索引")])},function(){var t=this,e=t._self._c;return e("p",[t._v("自定义 "),e("code",[t._v("type=index")]),t._v(" 列的行号。")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"shuang-lie-biao-ge-gu-ding-gao-du"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shuang-lie-biao-ge-gu-ding-gao-du"}},[t._v("¶")]),t._v(" 双列表格(固定高度)")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"shuang-lie-biao-ge-bu-gu-ding-gao-du"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shuang-lie-biao-ge-bu-gu-ding-gao-du"}},[t._v("¶")]),t._v(" 双列表格(不固定高度)")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"table-attributes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-attributes"}},[t._v("¶")]),t._v(" Table Attributes")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),e("th",[t._v("说明")]),e("th",[t._v("类型")]),e("th",[t._v("可选值")]),e("th",[t._v("默认值")])])]),e("tbody",[e("tr",[e("td",[t._v("data")]),e("td",[t._v("显示的数据")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("height")]),e("td",[t._v("Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。")]),e("td",[t._v("string/number")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("max-height")]),e("td",[t._v("Table 的最大高度。合法的值为数字或者单位为 px 的高度。")]),e("td",[t._v("string/number")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("stripe")]),e("td",[t._v("是否为斑马纹 table")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("border")]),e("td",[t._v("是否带有纵向边框")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("size")]),e("td",[t._v("Table 的尺寸")]),e("td",[t._v("string")]),e("td",[t._v("medium / small / mini")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("fit")]),e("td",[t._v("列的宽度是否自撑开")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("show-header")]),e("td",[t._v("是否显示表头")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("highlight-current-row")]),e("td",[t._v("是否要高亮当前行")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("current-row-key")]),e("td",[t._v("当前行的 key，只写属性")]),e("td",[t._v("String,Number")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("row-class-name")]),e("td",[t._v("行的 className 的回调方法，也可以使用字符串为所有行设置一个固定的 className。")]),e("td",[t._v("Function({row, rowIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("row-style")]),e("td",[t._v("行的 style 的回调方法，也可以使用一个固定的 Object 为所有行设置一样的 Style。")]),e("td",[t._v("Function({row, rowIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("cell-class-name")]),e("td",[t._v("单元格的 className 的回调方法，也可以使用字符串为所有单元格设置一个固定的 className。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("cell-style")]),e("td",[t._v("单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有单元格设置一样的 Style。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-row-class-name")]),e("td",[t._v("表头行的 className 的回调方法，也可以使用字符串为所有表头行设置一个固定的 className。")]),e("td",[t._v("Function({row, rowIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-row-style")]),e("td",[t._v("表头行的 style 的回调方法，也可以使用一个固定的 Object 为所有表头行设置一样的 Style。")]),e("td",[t._v("Function({row, rowIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-cell-class-name")]),e("td",[t._v("表头单元格的 className 的回调方法，也可以使用字符串为所有表头单元格设置一个固定的 className。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-cell-style")]),e("td",[t._v("表头单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有表头单元格设置一样的 Style。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("row-key")]),e("td",[t._v("行数据的 Key，用来优化 Table 的渲染；在使用 reserve-selection 功能与显示树形数据时，该属性是必填的。类型为 String 时，支持多层访问："),e("code",[t._v("user.info.id")]),t._v("，但不支持 "),e("code",[t._v("user.info[0].id")]),t._v("，此种情况请使用 "),e("code",[t._v("Function")]),t._v("。")]),e("td",[t._v("Function(row)/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("empty-text")]),e("td",[t._v("空数据时显示的文本内容，也可以通过 "),e("code",[t._v('slot="empty"')]),t._v(" 设置")]),e("td",[t._v("String")]),e("td",[t._v("—")]),e("td",[t._v("暂无数据")])]),e("tr",[e("td",[t._v("no-empty-img")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 空数据时不信啊是图片提示")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("default-expand-all")]),e("td",[t._v("是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("expand-row-keys")]),e("td",[t._v("可以通过该属性设置 Table 目前的展开行，需要设置 row-key 属性才能使用，该属性为展开行的 keys 数组。")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td")]),e("tr",[e("td",[t._v("default-sort")]),e("td",[t._v("默认的排序列的 prop 和顺序。它的"),e("code",[t._v("prop")]),t._v("属性指定默认的排序的列，"),e("code",[t._v("order")]),t._v("指定默认排序的顺序")]),e("td",[t._v("Object")]),e("td",[e("code",[t._v("order")]),t._v(": ascending, descending")]),e("td",[t._v("如果只指定了"),e("code",[t._v("prop")]),t._v(", 没有指定"),e("code",[t._v("order")]),t._v(", 则默认顺序是ascending")])]),e("tr",[e("td",[t._v("tooltip-effect")]),e("td",[t._v("tooltip "),e("code",[t._v("effect")]),t._v(" 属性")]),e("td",[t._v("String")]),e("td",[t._v("dark/light")]),e("td")]),e("tr",[e("td",[t._v("show-summary")]),e("td",[t._v("是否在表尾显示合计行")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("sum-text")]),e("td",[t._v("合计行第一列的文本")]),e("td",[t._v("String")]),e("td",[t._v("—")]),e("td",[t._v("合计")])]),e("tr",[e("td",[t._v("summary-method")]),e("td",[t._v("自定义的合计计算方法")]),e("td",[t._v("Function({ columns, data })")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("span-method")]),e("td",[t._v("合并行或列的计算方法")]),e("td",[t._v("Function({ row, column, rowIndex, columnIndex })")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("select-on-indeterminate")]),e("td",[t._v("在多选表格中，当仅有部分行被选中时，点击表头的多选框时的行为。若为 true，则选中所有行；若为 false，则取消选择所有行")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("indent")]),e("td",[t._v("展示树形数据时，树节点的缩进")]),e("td",[t._v("Number")]),e("td",[t._v("—")]),e("td",[t._v("16")])]),e("tr",[e("td",[t._v("lazy")]),e("td",[t._v("是否懒加载子节点数据")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("load")]),e("td",[t._v("加载子节点数据的函数，lazy 为 true 时生效，函数第二个参数包含了节点的层级信息")]),e("td",[t._v("Function(row, treeNode, resolve)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("tree-props")]),e("td",[t._v("渲染嵌套数据的配置选项")]),e("td",[t._v("Object")]),e("td",[t._v("—")]),e("td",[t._v("{ hasChildren: 'hasChildren', children: 'children' }")])]),e("tr",[e("td",[t._v("need-hide-columns")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 是否需要开启列显隐功能")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("need-toggle-hidden-button")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 开启列显隐功能后是否需要开启显隐控制按钮")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("default-hidden-columns")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 开启列显隐功能后默认隐藏的列")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("tooltip-attrs")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 配置 column 的 show-overflow-tooltip 之后，通过此属性设置 tooltip 的 attributes，请参考 tooltip 的 "),e("a",{attrs:{href:"#/component/tooltip"}},[t._v("attributes")])]),e("td",[t._v("Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("use-tree")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 使用树表格")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"table-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-events"}},[t._v("¶")]),t._v(" Table Events")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名")]),e("th",[t._v("说明")]),e("th",[t._v("参数")])])]),e("tbody",[e("tr",[e("td",[t._v("select")]),e("td",[t._v("当用户手动勾选数据行的 Checkbox 时触发的事件")]),e("td",[t._v("selection, row")])]),e("tr",[e("td",[t._v("select-all")]),e("td",[t._v("当用户手动勾选全选 Checkbox 时触发的事件")]),e("td",[t._v("selection")])]),e("tr",[e("td",[t._v("selection-change")]),e("td",[t._v("当选择项发生变化时会触发该事件")]),e("td",[t._v("selection")])]),e("tr",[e("td",[t._v("cell-mouse-enter")]),e("td",[t._v("当单元格 hover 进入时会触发该事件")]),e("td",[t._v("row, column, cell, event")])]),e("tr",[e("td",[t._v("cell-mouse-leave")]),e("td",[t._v("当单元格 hover 退出时会触发该事件")]),e("td",[t._v("row, column, cell, event")])]),e("tr",[e("td",[t._v("cell-click")]),e("td",[t._v("当某个单元格被点击时会触发该事件")]),e("td",[t._v("row, column, cell, event, rowIndex")])]),e("tr",[e("td",[t._v("cell-dblclick")]),e("td",[t._v("当某个单元格被双击击时会触发该事件")]),e("td",[t._v("row, column, cell, event")])]),e("tr",[e("td",[t._v("row-click")]),e("td",[t._v("当某一行被点击时会触发该事件")]),e("td",[t._v("row, column, event, rowIndex")])]),e("tr",[e("td",[t._v("row-contextmenu")]),e("td",[t._v("当某一行被鼠标右键点击时会触发该事件")]),e("td",[t._v("row, column, event")])]),e("tr",[e("td",[t._v("row-dblclick")]),e("td",[t._v("当某一行被双击时会触发该事件")]),e("td",[t._v("row, column, event")])]),e("tr",[e("td",[t._v("header-click")]),e("td",[t._v("当某一列的表头被点击时会触发该事件")]),e("td",[t._v("column, event")])]),e("tr",[e("td",[t._v("header-contextmenu")]),e("td",[t._v("当某一列的表头被鼠标右键点击时触发该事件")]),e("td",[t._v("column, event")])]),e("tr",[e("td",[t._v("sort-change")]),e("td",[t._v("当表格的排序条件发生变化的时候会触发该事件")]),e("td",[t._v("{ column, prop, order }")])]),e("tr",[e("td",[t._v("filter-change")]),e("td",[t._v("当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的 key 是 column 的 columnKey，对应的 value 为用户选择的筛选条件的数组。")]),e("td",[t._v("filters")])]),e("tr",[e("td",[t._v("current-change")]),e("td",[t._v("当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的 highlight-current-row 属性，参数为：当前选中的 row、上一次选中的 row、row 的切换方式（click: 点击切换、set: 主动调用 setCurrentRow 方法切换、auto: 数据更新时自动切换）")]),e("td",[t._v("currentRow, oldCurrentRow, changeMode")])]),e("tr",[e("td",[t._v("header-dragend")]),e("td",[t._v("当拖动表头改变了列的宽度的时候会触发该事件")]),e("td",[t._v("newWidth, oldWidth, column, event")])]),e("tr",[e("td",[t._v("expand-change")]),e("td",[t._v("当用户对某一行展开或者关闭的时候会触发该事件（展开行时，回调的第二个参数为 expandedRows；树形表格时第二参数为 expanded）")]),e("td",[t._v("row, (expandedRows | expanded)")])]),e("tr",[e("td",[t._v("hidden-status-change")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 当列显隐时触发")]),e("td",[t._v("{ currentHiddenColumns, currentDisplayedColumns }")])]),e("tr",[e("td",[t._v("edit-disabled")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 开启表格编辑时，想要编辑被禁用的单元格后触发（参数：禁用处的列信息、禁用处的行下标、禁用处的行信息）")]),e("td",[t._v("newVal, rowIndex, row, column")])]),e("tr",[e("td",[t._v("item-checked-changed")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 开启表格单列多选时时，任一checkbox 的选中状态发生变化时触发（参数：变化处的列的prop、变化处的行的下标、变化后的值和变化处的行信息）")]),e("td",[t._v("columnProp, rowIndex, value, row")])]),e("tr",[e("td",[t._v("operation-click")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 使用表格行更多操作时，触发任一操作后触发（参数：操作名称、操作在操作组中的下标、操作处的行和操作处的行下标）")]),e("td",[t._v("operation, operationIndex, row, rowIndex")])]),e("tr",[e("td",[t._v("operation-dblclick")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 使用表格行更多操作时，双击任一操作后触发（参数：操作名称、操作在操作组中的下标、操作处的行和操作处的行下标）")]),e("td",[t._v("operation, operationIndex, row, rowIndex")])]),e("tr",[e("td",[t._v("button-click")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 使用表格按钮组操作列时，点击按钮组里的按钮时触发（参数：按钮名称、按钮在按钮组中的下标、按钮处的行和按钮处的行下标）")]),e("td",[t._v("button, buttonIndex, row, rowIndex")])]),e("tr",[e("td",[t._v("button-dblclick")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 使用表格按钮组操作列时，双击按钮组里的按钮时触发（参数：按钮名称、按钮在按钮组中的下标、按钮处的行和按钮处的行下标）")]),e("td",[t._v("button, buttonIndex, row, rowIndex")])]),e("tr",[e("td",[t._v("table-body-scroll")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 当表格列表发生滚动时触发（参数：竖向滚动坐标和横向滚动坐标）")]),e("td",[t._v("scrollTop, scrollLeft")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"table-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-methods"}},[t._v("¶")]),t._v(" Table Methods")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("方法名")]),e("th",[t._v("说明")]),e("th",[t._v("参数")])])]),e("tbody",[e("tr",[e("td",[t._v("clearSelection")]),e("td",[t._v("用于多选表格，清空用户的选择")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("toggleRowSelection")]),e("td",[t._v("用于多选表格，切换某一行的选中状态，如果使用了第二个参数，则是设置这一行选中与否（selected 为 true 则选中）")]),e("td",[t._v("row, selected")])]),e("tr",[e("td",[t._v("toggleAllSelection")]),e("td",[t._v("用于多选表格，切换所有行的选中状态")]),e("td",[t._v("selected（想要切换至的目标状态, 必须是 boolean 类型）")])]),e("tr",[e("td",[t._v("toggleRowExpansion")]),e("td",[t._v("用于可展开表格与树形表格，切换某一行的展开状态，如果使用了第二个参数，则是设置这一行展开与否（expanded 为 true 则展开）")]),e("td",[t._v("row, expanded")])]),e("tr",[e("td",[t._v("setCurrentRow")]),e("td",[t._v("用于单选表格，设定某一行为选中行，如果调用时不加参数，则会取消目前高亮行的选中状态。")]),e("td",[t._v("row")])]),e("tr",[e("td",[t._v("clearSort")]),e("td",[t._v("用于清空排序条件，数据会恢复成未排序的状态")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("clearFilter")]),e("td",[t._v("不传入参数时用于清空所有过滤条件，数据会恢复成未过滤的状态，也可传入由columnKey组成的数组以清除指定列的过滤条件")]),e("td",[t._v("columnKey")])]),e("tr",[e("td",[t._v("doLayout")]),e("td",[t._v("对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换为显示时，可能需要调用此方法")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sort")]),e("td",[t._v("手动对 Table 进行排序。参数"),e("code",[t._v("prop")]),t._v("属性指定排序列，"),e("code",[t._v("order")]),t._v("指定排序顺序。")]),e("td",[t._v("prop: string, order: string")])]),e("tr",[e("td",[t._v("openAllTree")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于可展开表格与树形表格，展开所有的树")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("closeAllTree")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于可展开表格与树形表格，关闭所有的树")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("getCheckedItems")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于获取单列多选中某一列的已选择项")]),e("td",[t._v("columnProp")])]),e("tr",[e("td",[t._v("setItemChecked")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于单列多选中设置某一列的某一行处的选择状态")]),e("td",[t._v("columnProp, row, value")])]),e("tr",[e("td",[t._v("setAllItemsChecked")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于单列多选中设置某一列的选择状态")]),e("td",[t._v("columnProp")])]),e("tr",[e("td",[t._v("removeAllItemsChecked")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于单列多选中移除某一列的选择状态")]),e("td",[t._v("columnProp")])]),e("tr",[e("td",[t._v("setColumnShowStatus")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于列显隐中设置某一列的显隐状态")]),e("td",[t._v("columnProp, showStatus")])]),e("tr",[e("td",[t._v("toggleColumnShowStatus")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于列显隐中切换某一列的显隐状态")]),e("td",[t._v("columnProp")])]),e("tr",[e("td",[t._v("setColumnShowList")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 用于列显隐中设置当前显示列的数组")]),e("td",[t._v("array[columnProp, columnProp, ...]")])]),e("tr",[e("td",[t._v("getCurrentRowOffsetTop")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 获取单选行的位置距离表格顶端的距离，如果想要滚动至此距离，你也可以直接使用下面的 scrollToCurrentRow 方法")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("scrollToCurrentRow")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 滚动至单选行所在位置")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("scrollToRowIndex")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 滚动至行下标所在位置")]),e("td",[t._v("rowIndex")])]),e("tr",[e("td",[t._v("getTreeRowKeysByLevel")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 获取树表某一层级的rowKeys")]),e("td",[t._v("层级")])]),e("tr",[e("td",[t._v("setTableBodyScrollTop")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置表格的竖向滚动坐标")]),e("td",[t._v("scrollTop")])]),e("tr",[e("td",[t._v("setTableBodyScrollLeft")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置表格的横向滚动坐标")]),e("td",[t._v("scrollLeft")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"table-slot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-slot"}},[t._v("¶")]),t._v(" Table Slot")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),e("th",[t._v("说明")])])]),e("tbody",[e("tr",[e("td",[t._v("empty")]),e("td",[t._v("自定义空数据展示内容。")])]),e("tr",[e("td",[t._v("append")]),e("td",[t._v("插入至表格最后一行之后的内容，如果需要对表格的内容进行无限滚动操作，可能需要用到这个 slot。若表格有合计行，该 slot 会位于合计行之上。")])]),e("tr",[e("td",[t._v("customSummary")]),e("td",[t._v("开启合计行之后，自定义合计行内容。")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"table-column-attributes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-column-attributes"}},[t._v("¶")]),t._v(" Table-column Attributes")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),e("th",[t._v("说明")]),e("th",[t._v("类型")]),e("th",[t._v("可选值")]),e("th",[t._v("默认值")])])]),e("tbody",[e("tr",[e("td",[t._v("type")]),e("td",[t._v("对应列的类型。如果设置了 "),e("code",[t._v("selection")]),t._v(" 则显示多选框；如果设置了 "),e("code",[t._v("operation")]),t._v(" 则显示更多操作；如果设置了 "),e("code",[t._v("index")]),t._v(" 则显示该行的索引（从 1 开始计算）；如果设置了 "),e("code",[t._v("expand")]),t._v(" 则显示为一个可展开的按钮；如果设置了 "),e("code",[t._v("buttons")]),t._v(" 则显示为一组按钮组")]),e("td",[t._v("string")]),e("td",[t._v("selection/operation/index/expand/buttons")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("index")]),e("td",[t._v("如果设置了 "),e("code",[t._v("type=index")]),t._v("，可以通过传递 "),e("code",[t._v("index")]),t._v(" 属性来自定义索引")]),e("td",[t._v("number, Function(index)")]),e("td",[t._v("-")]),e("td",[t._v("-")])]),e("tr",[e("td",[t._v("column-key")]),e("td",[t._v("column 的 key，如果需要使用 filter-change 事件，则需要此属性标识是哪个 column 的筛选条件")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("label")]),e("td",[t._v("显示的标题")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("prop")]),e("td",[t._v("对应列内容的字段名，也可以使用 property 属性")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("width")]),e("td",[t._v("对应列的宽度")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("min-width")]),e("td",[t._v("对应列的最小宽度，与 width 的区别是 width 是固定的，min-width 会把剩余宽度按比例分配给设置了 min-width 的列")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("fixed")]),e("td",[t._v("列是否固定在左侧或者右侧，true 表示固定在左侧")]),e("td",[t._v("string, boolean")]),e("td",[t._v("true, left, right")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("render-header")]),e("td",[t._v("列标题 Label 区域渲染使用的 Function")]),e("td",[t._v("Function(h, { column, $index })")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sortable")]),e("td",[t._v("对应列是否可以排序，如果设置为 'custom'，则代表用户希望远程排序，需要监听 Table 的 sort-change 事件")]),e("td",[t._v("boolean, string")]),e("td",[t._v("true, false, 'custom'")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("sort-method")]),e("td",[t._v("对数据进行排序的时候使用的方法，仅当 sortable 设置为 true 的时候有效，需返回一个数字，和 Array.sort 表现一致")]),e("td",[t._v("Function(a, b)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sort-by")]),e("td",[t._v("指定数据按照哪个属性进行排序，仅当 sortable 设置为 true 且没有设置 sort-method 的时候有效。如果 sort-by 为数组，则先按照第 1 个属性排序，如果第 1 个相等，再按照第 2 个排序，以此类推")]),e("td",[t._v("String/Array/Function(row, index)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sort-orders")]),e("td",[t._v("数据在排序时所使用排序策略的轮转顺序，仅当 sortable 为 true 时有效。需传入一个数组，随着用户点击表头，该列依次按照数组中元素的顺序进行排序")]),e("td",[t._v("array")]),e("td",[t._v("数组中的元素需为以下三者之一："),e("code",[t._v("ascending")]),t._v(" 表示升序，"),e("code",[t._v("descending")]),t._v(" 表示降序，"),e("code",[t._v("null")]),t._v(" 表示还原为原始顺序")]),e("td",[t._v("['ascending', 'descending', null]")])]),e("tr",[e("td",[t._v("resizable")]),e("td",[t._v("对应列是否可以通过拖动改变宽度（需要在 df-table 上设置 border 属性为真）")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("formatter")]),e("td",[t._v("用来格式化内容")]),e("td",[t._v("Function(cellValue, row, column, index)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("show-overflow-tooltip")]),e("td",[t._v("当内容过长被隐藏时显示 tooltip")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("align")]),e("td",[t._v("对齐方式")]),e("td",[t._v("String")]),e("td",[t._v("left/center/right")]),e("td",[t._v("left")])]),e("tr",[e("td",[t._v("header-align")]),e("td",[t._v("表头对齐方式，若不设置该项，则使用表格的对齐方式")]),e("td",[t._v("String")]),e("td",[t._v("left/center/right")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("class-name")]),e("td",[t._v("列的 className")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("label-class-name")]),e("td",[t._v("当前列标题的自定义类名")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("selectable")]),e("td",[t._v("仅对 type=selection 的列有效，类型为 Function，Function 的返回值用来决定这一行的 CheckBox 是否可以勾选")]),e("td",[t._v("Function(row, index)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("reserve-selection")]),e("td",[t._v("仅对 type=selection 的列有效，类型为 Boolean，为 true 则会在数据更新之后保留之前选中的数据（需指定 "),e("code",[t._v("row-key")]),t._v("）")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("filters")]),e("td",[t._v("数据过滤的选项，数组格式，数组中的元素需要有 text 和 value 属性。")]),e("td",[t._v("Array[{ text, value }]")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("filter-placement")]),e("td",[t._v("过滤弹出框的定位")]),e("td",[t._v("String")]),e("td",[t._v("与 Tooltip 的 "),e("code",[t._v("placement")]),t._v(" 属性相同")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("filter-multiple")]),e("td",[t._v("数据过滤的选项是否多选")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("filter-method")]),e("td",[t._v("数据过滤使用的方法，如果是多选的筛选项，对每一条数据会执行多次，任意一次返回 true 就会显示。")]),e("td",[t._v("Function(value, row, column)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("filtered-value")]),e("td",[t._v("选中的数据过滤项，如果需要自定义表头过滤的渲染方式，可能会需要此属性。")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("use-input-filter")]),e("td",[t._v("是否使用 input 框模式的筛选。")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("set-operations")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 动态配置按钮组操作列的按钮组名称，当此项存在时，operations 属性将置为无效")]),e("td",[t._v("Function(row, rowIndex)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("operations")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 动态配置弹出式操作列的按钮组")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("hidden-operations")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置弹出操作列的操作隐藏")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("loading-operations")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置弹出操作列的操作 loading 状态")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("disabled-operations")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置弹出操作列的操作 disabled 状态")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("hide-on-click")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 是否在弹出操作列点击操作项后隐藏弹出框")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("button-type")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 按钮组操作列的按钮类型")]),e("td",[t._v("String")]),e("td",[t._v("text/icon")]),e("td",[t._v("text")])]),e("tr",[e("td",[t._v("set-buttons")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 动态配置按钮组操作列的按钮组名称，当此项存在时，buttons 属性将置为无效")]),e("td",[t._v("Function(row, rowIndex)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("buttons")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 按钮组操作列的按钮组名称")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("display-buttons-length")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置按钮组操作列的按钮展示数量")]),e("td",[t._v("Number")]),e("td",[t._v("—")]),e("td",[t._v("2")])]),e("tr",[e("td",[t._v("hidden-buttons")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置按钮组操作列的按钮隐藏")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("loading-buttons")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置按钮组操作列的按钮 loading 状态")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("disabled-buttons")]),e("td",[t._v("/"),e("em",[t._v("新增")]),t._v("/ 设置按钮组操作列的按钮 disabled 状态")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"table-column-scoped-slot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-column-scoped-slot"}},[t._v("¶")]),t._v(" Table-column Scoped Slot")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),e("th",[t._v("说明")])])]),e("tbody",[e("tr",[e("td",[t._v("—")]),e("td",[t._v("自定义列的内容，参数为 { row, column, $index }")])]),e("tr",[e("td",[t._v("header")]),e("td",[t._v("自定义表头的内容. 参数为 { column, $index }")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"columnoptions.multipleconfig-dan-lie-duo-xuan-can-shu-gui-ze"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#columnoptions.multipleconfig-dan-lie-duo-xuan-can-shu-gui-ze"}},[t._v("¶")]),t._v(" columnOptions.multipleConfig 单列多选 参数规则")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),e("th",[t._v("说明")]),e("th",[t._v("类型")]),e("th",[t._v("可选值")]),e("th",[t._v("默认值")])])]),e("tbody",[e("tr",[e("td",[t._v("multipleColumns")]),e("td",[t._v("多选列选项")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("item")]),e("td",[t._v("/"),e("em",[t._v("代号")]),t._v("/ 这里用 item 表示 multipleColumns 的每一项")]),e("td",[t._v("object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("item > columnProp")]),e("td",[t._v("多选列的 prop")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("item > disableRowsIndex")]),e("td",[t._v("多选列中禁止选择的行的下标，如果你想禁用此列的某一行处的选择功能，把行下标放进去即可")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("—")])])])])}],o=n("5530"),l=(n("a630"),n("3ca3"),n("99af"),n("14d9"),n("c740"),n("a434"),n("b0c0"),n("4160"),n("d3b7"),n("159b"),n("caad"),n("2532"),n("4de4"),n("ac1f"),n("841c"),n("d81d"),n("a9e3"),n("a623"),n("13d5"),n("cb29"),{name:"component-doc",components:{"df-demo0":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo1":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{useVirtual:"",data:t.tableData,height:"400px"}},[n("df-table-column",{attrs:{type:"index",width:"80"}}),t._v(" "),n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},e=[],n={data:function(){return{tableData:Array.from({length:100},(function(){return{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"}}))}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo2":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("div",{staticClass:"demonstration"},[t._v("自定义文本提示")]),t._v(" "),n("df-table",{staticStyle:{width:"100%"},attrs:{data:[],"empty-text":"这里没有数据了"}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址",width:"1800"}})],1),t._v(" "),n("div",{staticClass:"demonstration"},[t._v("需要图片提示")]),t._v(" "),n("df-table",{staticStyle:{width:"100%"},attrs:{data:[],"no-empty-img":!1}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址",width:"1800"}})],1),t._v(" "),n("div",{staticClass:"demonstration"},[t._v("自定义提示区域")]),t._v(" "),n("df-table",{staticStyle:{width:"100%"},attrs:{data:[]}},[n("template",{slot:"empty"},[n("div",{staticClass:"custom-empty-block"},[t._v("真的没有数据了")])]),t._v(" "),n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址",width:"1800"}})],2)],1)]],2)},e=[],n={};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo3":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{ref:"table",staticStyle:{width:"100%","margin-bottom":"20px"},attrs:{data:t.tableData,"need-hide-columns":"","need-toggle-hidden-button":t.needToggleHiddenButton,"default-hidden-columns":t.defaultHiddenColumns},on:{"hidden-status-change":t.hiddenStatusChange}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"150"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"150"}}),t._v(" "),n("df-table-column",{attrs:{prop:"gender",label:"性别",width:"150"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1),t._v(" "),n("df-button",{on:{click:t.showDate}},[t._v("显示日期列")]),t._v(" "),n("df-button",{on:{click:t.hideDate}},[t._v("隐藏日期列")]),t._v(" "),n("df-button",{on:{click:t.toggleName}},[t._v("切换姓名列显隐")]),t._v(" "),n("df-button",{on:{click:t.toggleButton}},[t._v("切换控制按钮显隐")])],1)]],2)},e=[],n={data:function(){return{needToggleHiddenButton:!1,defaultHiddenColumns:["date"],tableData:[{date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-02",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",gender:"男",address:"四川省武当山普陀区金沙江路 1518 弄"}]}},methods:{hiddenStatusChange:function(t){console.log(t)},showDate:function(){this.$refs.table.setColumnShowStatus("date",!0)},hideDate:function(){this.$refs.table.setColumnShowStatus("date",!1)},toggleName:function(){this.$refs.table.toggleColumnShowStatus("name")},toggleButton:function(){this.needToggleHiddenButton=!this.needToggleHiddenButton}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo4":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{staticStyle:{width:"100%","margin-bottom":"20px"},attrs:{data:t.tableData},on:{"button-click":t.buttonClick}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{width:"200",type:"buttons","button-type":"text",buttons:["删除","创建","开单"],"hidden-buttons":t.hiddenButtons}})],1),t._v(" "),n("df-button",{on:{click:t.hideFirstRowFirstButtons}},[t._v("隐藏第一行第一个按钮")]),t._v(" "),n("df-button",{on:{click:t.showFirstRowFirstButtons}},[t._v("显示第一行第一个按钮")]),t._v(" "),n("df-table",{staticStyle:{width:"100%",margin:"20px 0"},attrs:{data:t.tableData},on:{"button-click":t.buttonClick}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{width:"200",type:"buttons","button-type":"text","set-buttons":t.setButtons,"loading-buttons":t.loadingButtons}})],1),t._v(" "),n("df-button",{on:{click:t.loadingFirstRowButtons}},[t._v("设置第一行的按钮组为 loading")]),t._v(" "),n("df-button",{on:{click:t.unLoadingAllButtons}},[t._v("清除所有按钮的 loading")]),t._v(" "),n("df-table",{staticStyle:{width:"100%",margin:"20px 0"},attrs:{data:t.tableData},on:{"button-click":t.buttonClick}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{width:"200",type:"buttons","button-type":"icon",buttons:["add-square","reduce-square","content"],"disabled-buttons":t.disabledButtons}})],1),t._v(" "),n("df-button",{on:{click:t.disableFirstRowFirstButtons}},[t._v("设置第一行第一个按钮为 disabled")]),t._v(" "),n("df-button",{on:{click:t.enableFirstRowFirstButtons}},[t._v("清除第一行第一个按钮的 disabled")]),t._v(" "),n("div",{staticClass:"demonstration",staticStyle:{"margin-top":"20px"}},[t._v("文字类型按钮组的按钮展示数量有上限，默认展示 2 个，但是可以通过属性 display-buttons-length 配置，超出部分使用弹出方式展示，弹出的按钮支持属性 hide-on-click 配置")]),t._v(" "),n("df-table",{staticStyle:{width:"100%","margin-top":"20px"},attrs:{data:t.tableData,border:""},on:{"button-click":t.buttonClick}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{width:"200",type:"buttons","button-type":"text","display-buttons-length":3,"hide-on-click":!1,buttons:["删除","创建","开单","编辑","查看","更新"]}})],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"}],hiddenButtons:[],loadingButtons:[],disabledButtons:[{buttonIndex:2,rowIndex:0}]}},methods:{setButtons:function(t,e){return 1===e?["删除","创建","开单"]:["编辑","查看","更新"]},buttonClick:function(t,e,n,a){console.log("第 ".concat(a+1," 行的按钮组中的第 ").concat(e+1," 个按钮被点击了，这个按钮名称是 ").concat(t,"，这一行的信息是"),n)},hideFirstRowFirstButtons:function(){this.hiddenButtons.push({buttonIndex:0,rowIndex:0})},showFirstRowFirstButtons:function(){var t=this.hiddenButtons.findIndex((function(t){return 0===t.buttonIndex&&0===t.rowIndex}));this.hiddenButtons.splice(t,1)},loadingFirstRowButtons:function(){this.loadingButtons.push({buttonIndex:0,rowIndex:0},{buttonIndex:1,rowIndex:0},{buttonIndex:2,rowIndex:0})},unLoadingAllButtons:function(){this.loadingButtons.splice(0,this.loadingButtons.length)},disableFirstRowFirstButtons:function(){this.disabledButtons.push({buttonIndex:0,rowIndex:0})},enableFirstRowFirstButtons:function(){var t=this.disabledButtons.findIndex((function(t){return 0===t.buttonIndex&&0===t.rowIndex}));this.disabledButtons.splice(t,1)}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo5":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{staticStyle:{width:"100%","margin-bottom":"20px"},attrs:{data:t.tableData},on:{"operation-click":t.operationClick}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{type:"operation",operations:["删除","创建","开单"],width:"55","hidden-operations":t.hiddenOperations}})],1),t._v(" "),n("df-button",{on:{click:function(e){return e.stopPropagation(),t.hideFirstRowFirstOperation.apply(null,arguments)}}},[t._v("隐藏第一行第一个操作")]),t._v(" "),n("df-button",{on:{click:function(e){return e.stopPropagation(),t.showFirstRowFirstOperation.apply(null,arguments)}}},[t._v("显示第一行第一个操作")]),t._v(" "),n("df-table",{staticStyle:{width:"100%",margin:"20px 0"},attrs:{data:t.tableData},on:{"operation-click":t.operationClick}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{type:"operation","set-operations":t.setOperations,width:"55","loading-operations":t.loadingOperations}})],1),t._v(" "),n("df-button",{on:{click:function(e){return e.stopPropagation(),t.loadingFirstRowOperations.apply(null,arguments)}}},[t._v("设置第一行的操作组为 loading")]),t._v(" "),n("df-button",{on:{click:function(e){return e.stopPropagation(),t.unLoadingAllOperations.apply(null,arguments)}}},[t._v("清除所有操作的 loading")]),t._v(" "),n("df-table",{staticStyle:{width:"100%",margin:"20px 0"},attrs:{data:t.tableData},on:{"operation-click":t.operationClick}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{type:"operation",operations:["删除","创建","开单"],width:"55","disabled-operations":t.disabledOperations}})],1),t._v(" "),n("df-button",{on:{click:function(e){return e.stopPropagation(),t.disableFirstRowFirstOperation.apply(null,arguments)}}},[t._v("设置第一行第一个操作为 disabled")]),t._v(" "),n("df-button",{on:{click:function(e){return e.stopPropagation(),t.enableFirstRowFirstOperation.apply(null,arguments)}}},[t._v("清除第一行第一个操作的 disabled")])],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"}],hiddenOperations:[],loadingOperations:[],disabledOperations:[{operationIndex:2,rowIndex:0}]}},methods:{setOperations:function(t,e){return 1===e?["删除","创建","开单"]:["编辑","查看","更新"]},operationClick:function(t,e,n,a){console.log("第 ".concat(a+1," 行的弹出操作组中的第 ").concat(e+1," 个操作被点击了，这个操作名称是 ").concat(t,"，这一行的信息是"),n)},hideFirstRowFirstOperation:function(){this.hiddenOperations.push({operationIndex:0,rowIndex:0})},showFirstRowFirstOperation:function(){var t=this.hiddenOperations.findIndex((function(t){return 0===t.operationIndex&&0===t.rowIndex}));this.hiddenOperations.splice(t,1)},loadingFirstRowOperations:function(){this.loadingOperations.push({operationIndex:0,rowIndex:0},{operationIndex:1,rowIndex:0},{operationIndex:2,rowIndex:0})},unLoadingAllOperations:function(){this.loadingOperations.splice(0,this.loadingOperations.length)},disableFirstRowFirstOperation:function(){this.disabledOperations.push({operationIndex:0,rowIndex:0})},enableFirstRowFirstOperation:function(){var t=this.disabledOperations.findIndex((function(t){return 0===t.operationIndex&&0===t.rowIndex}));this.disabledOperations.splice(t,1)}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo6":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{label:"日期",width:"180"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("span",[t._v(t._s(e.row.date))])]}}])}),t._v(" "),n("df-table-column",{attrs:{label:"姓名",width:"180"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("span",[t._v(t._s(e.row.name))])]}}])}),t._v(" "),n("df-table-column",{attrs:{label:"操作"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-button",{attrs:{type:"text",size:"small"},on:{click:function(n){return t.handleClick(e.row)}}},[t._v("查看")]),t._v(" "),n("df-button",{attrs:{type:"text",size:"small"},on:{click:t.handleDelete}},[t._v("删除")])]}}])})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}},methods:{handleClick:function(t,e){console.log(t,e)},handleDelete:function(t,e){console.log(t,e)}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo7":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-radio-group",{attrs:{size:"small"},model:{value:t.labelSize,callback:function(e){t.labelSize=e},expression:"labelSize"}},[n("df-radio-button",{attrs:{label:"medium"}}),t._v(" "),n("df-radio-button",{attrs:{label:"small"}}),t._v(" "),n("df-radio-button",{attrs:{label:"mini"}})],1),t._v(" "),n("div",{staticStyle:{margin:"20px"}}),t._v(" "),n("df-table",{staticStyle:{width:"100%"},attrs:{size:t.labelSize,data:t.tableData}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)],1)]],2)},e=[],n={data:function(){return{labelSize:"small",tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo8":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,stripe:!1}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo9":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,border:!1}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo10":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,"row-class-name":t.tableRowClassName,stripe:!1}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},e=[],n={methods:{tableRowClassName:function(t){t.row;var e=t.rowIndex;return 1===e?"warning-row":3===e?"success-row":""}},data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo11":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,height:"250",border:""}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-08",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-06",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-07",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo12":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,border:""}},[n("df-table-column",{attrs:{fixed:"",prop:"date",label:"日期",width:"150"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"province",label:"省份",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"city",label:"市区",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址",width:"300"}}),t._v(" "),n("df-table-column",{attrs:{prop:"zip",label:"邮编",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{fixed:"right",label:"操作",width:"100"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-button",{attrs:{type:"text",size:"small"},on:{click:function(n){return t.handleClick(e.row)}}},[t._v("查看")]),t._v(" "),n("df-button",{attrs:{type:"text",size:"small"}},[t._v("编辑")])]}}])})],1)]],2)},e=[],n={methods:{handleClick:function(t){console.log(t)}},data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-04",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1517 弄",zip:200333},{date:"2016-05-01",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1519 弄",zip:200333},{date:"2016-05-03",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1516 弄",zip:200333}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo13":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,height:"250"}},[n("df-table-column",{attrs:{fixed:"",prop:"date",label:"日期",width:"150"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"province",label:"省份",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"city",label:"市区",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}}),t._v(" "),n("df-table-column",{attrs:{prop:"zip",label:"邮编",width:"120"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-03",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-02",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-04",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-01",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-08",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-06",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-07",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo14":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,"max-height":"250"}},[n("df-table-column",{attrs:{fixed:"",prop:"date",label:"日期",width:"150"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"province",label:"省份",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"city",label:"市区",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址",width:"300"}}),t._v(" "),n("df-table-column",{attrs:{prop:"zip",label:"邮编",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{fixed:"right",label:"操作",width:"120"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(n){return n.preventDefault(),t.deleteRow(e.$index,t.tableData)}}},[t._v("\n          移除\n        ")])]}}])})],1)]],2)},e=[],n={methods:{deleteRow:function(t,e){e.splice(t,1)}},data:function(){return{tableData:[{date:"2016-05-03",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-02",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-04",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-01",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-08",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-06",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-07",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo15":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"150"}}),t._v(" "),n("df-table-column",{attrs:{label:"配送信息"}},[n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{label:"地址"}},[n("df-table-column",{attrs:{prop:"province",label:"省份",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"city",label:"市区",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址",width:"300"}}),t._v(" "),n("df-table-column",{attrs:{prop:"zip",label:"邮编",width:"120"}})],1)],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-03",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-02",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-04",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-01",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-08",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-06",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333},{date:"2016-05-07",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo16":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{ref:"singleTable",staticStyle:{width:"100%"},attrs:{data:t.tableData,"highlight-current-row":""},on:{"current-change":t.handleCurrentChange}},[n("df-table-column",{attrs:{type:"index",width:"50"}}),t._v(" "),n("df-table-column",{attrs:{property:"date",label:"日期",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{property:"name",label:"姓名",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{property:"address",label:"地址"}})],1),t._v(" "),n("div",{staticStyle:{"margin-top":"20px"}},[n("df-button",{on:{click:function(e){return t.setCurrent(t.tableData[1])}}},[t._v("选中第二行")]),t._v(" "),n("df-button",{on:{click:function(e){return t.setCurrent()}}},[t._v("取消选择")])],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}],currentRow:null}},methods:{setCurrent:function(t){this.$refs.singleTable.setCurrentRow(t)},handleCurrentChange:function(t){this.currentRow=t}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo17":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{ref:"multipleTable",staticStyle:{width:"100%"},attrs:{data:t.tableData,"tooltip-effect":"dark"},on:{"selection-change":t.handleSelectionChange}},[n("df-table-column",{attrs:{type:"selection",width:"55"}}),t._v(" "),n("df-table-column",{attrs:{label:"日期",width:"120"},scopedSlots:t._u([{key:"default",fn:function(e){return[t._v(t._s(e.row.date))]}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"120"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址","show-overflow-tooltip":""}})],1),t._v(" "),n("div",{staticStyle:{"margin-top":"20px"}},[n("df-button",{on:{click:function(e){return t.toggleSelection([t.tableData[1],t.tableData[2]])}}},[t._v("切换第二、第三行的选中状态")]),t._v(" "),n("df-button",{on:{click:function(e){return t.toggleSelection()}}},[t._v("取消选择")])],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-08",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-06",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-07",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"}],multipleSelection:[]}},methods:{toggleSelection:function(t){var e=this;t?t.forEach((function(t){e.$refs.multipleTable.toggleRowSelection(t)})):this.$refs.multipleTable.clearSelection()},handleSelectionChange:function(t){this.multipleSelection=t}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo18":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{ref:"multipleTable",staticStyle:{width:"100%"},attrs:{data:t.tableData,columnOptions:t.columnOptions},on:{"item-checked-changed":t.itemCheckedChanged}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"age",label:"年龄",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1),t._v(" "),n("div",{staticStyle:{"margin-top":"20px"}},[n("df-button",{on:{click:function(e){return t.getCheckedItems("date")}}},[t._v("获取日期列已选择项")]),t._v(" "),n("df-button",{on:{click:function(e){return t.getCheckedItems("name")}}},[t._v("获取姓名列已选择项")]),t._v(" "),n("df-button",{on:{click:function(e){return t.getCheckedItems("address")}}},[t._v("获取地址列已选择项")]),t._v(" "),n("br"),n("br"),t._v(" "),n("df-button",{on:{click:function(e){return t.setItemChecked("date",t.tableData[1])}}},[t._v("选择日期列的第二项")]),t._v(" "),n("df-button",{on:{click:function(e){return t.setAllItemsChecked("name")}}},[t._v("选择姓名列的所有项")]),t._v(" "),n("df-button",{on:{click:function(e){return t.removeAllItemsChecked("address")}}},[t._v("取消选择地址列的所有项")])],1)],1)]],2)},e=[],n={data:function(){return{columnOptions:{multipleConfig:{multipleColumns:[{columnProp:"date",disableRowsIndex:[2]},"name","age",{columnProp:"address"}]}},tableData:[{date:"2016-05-01",name:"李时珍",age:"20岁",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-02",name:"李时珍",age:"12岁",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-03",name:"李时珍",age:"34岁",address:"四川省武当山普陀区金沙江路 1516 弄"},{date:"2016-05-04",name:"李时珍",age:"27岁",address:"四川省武当山普陀区金沙江路 1517 弄"}]}},methods:{itemCheckedChanged:function(t,e,n,a){console.log("".concat(t," 列的第 ").concat(e+1," 项的 checkbox 选中状态切换到了 ").concat(n,", 切换处的行数据是"),a)},getCheckedItems:function(t){console.log(this.$refs.multipleTable.getCheckedItems(t))},setItemChecked:function(t,e){this.$refs.multipleTable.setItemChecked(t,e,!0)},setAllItemsChecked:function(t){this.$refs.multipleTable.setAllItemsChecked(t)},removeAllItemsChecked:function(t){this.$refs.multipleTable.removeAllItemsChecked(t)}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo19":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,"default-sort":{prop:"date",order:"descending"}}},[n("df-table-column",{attrs:{prop:"date",label:"日期",sortable:"",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",sortable:"",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址",formatter:t.formatter}})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}},methods:{formatter:function(t,e){return t.address}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo20":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-button",{on:{click:t.resetDateFilter}},[t._v("清除日期过滤器")]),t._v(" "),n("df-button",{on:{click:t.clearFilter}},[t._v("清除所有过滤器")]),t._v(" "),n("df-table",{ref:"filterTable",staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{prop:"date",label:"日期",sortable:"",width:"180","column-key":"date",filters:[{text:"2016-05-01",value:"2016-05-01"},{text:"2016-05-02",value:"2016-05-02"},{text:"2016-05-03",value:"2016-05-03"},{text:"2016-05-04",value:"2016-05-04"}],"filter-method":t.filterHandler}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址","filter-method":t.filterAddress,"use-input-filter":""}}),t._v(" "),n("df-table-column",{attrs:{prop:"tag",label:"标签",width:"100",filters:[{text:"家",value:"家"},{text:"公司",value:"公司"}],"filter-method":t.filterTag,"filter-placement":"bottom-end"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-tag",{attrs:{type:"家"===e.row.tag?"primary":"success","disable-transitions":""}},[t._v(t._s(e.row.tag))])]}}])})],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1 弄",tag:"家"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 2 弄",tag:"公司"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 3 弄",tag:"家"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 4 弄",tag:"公司"}]}},methods:{resetDateFilter:function(){this.$refs.filterTable.clearFilter("date")},clearFilter:function(){this.$refs.filterTable.clearFilter()},filterTag:function(t,e){return e.tag===t},filterAddress:function(t,e,n){var a=n.property;return e[a].includes(t)},filterHandler:function(t,e,n){var a=n.property;return e[a]===t}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo21":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{label:"日期",width:"180"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("i",{staticClass:"df-icon-time-c-o"}),t._v(" "),n("span",{staticStyle:{"margin-left":"10px"}},[t._v(t._s(e.row.date))])]}}])}),t._v(" "),n("df-table-column",{attrs:{label:"姓名",width:"180"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-popover",{attrs:{trigger:"hover",placement:"top"}},[n("p",[t._v("姓名: "+t._s(e.row.name))]),t._v(" "),n("p",[t._v("住址: "+t._s(e.row.address))]),t._v(" "),n("div",{staticClass:"name-wrapper",attrs:{slot:"reference"},slot:"reference"},[n("df-tag",{attrs:{size:"medium"}},[t._v(t._s(e.row.name))])],1)])]}}])}),t._v(" "),n("df-table-column",{attrs:{label:"操作"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-button",{attrs:{size:"mini"},on:{click:function(n){return t.handleEdit(e.$index,e.row)}}},[t._v("编辑")]),t._v(" "),n("df-button",{attrs:{size:"mini",type:"danger"},on:{click:function(n){return t.handleDelete(e.$index,e.row)}}},[t._v("删除")])]}}])})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}},methods:{handleEdit:function(t,e){console.log(t,e)},handleDelete:function(t,e){console.log(t,e)}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo22":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{type:"expand"},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-form",{staticClass:"demo-table-expand",attrs:{"label-position":"left",inline:""}},[n("df-form-item",{attrs:{label:"商品名称"}},[n("span",[t._v(t._s(e.row.name))])]),t._v(" "),n("df-form-item",{attrs:{label:"所属店铺"}},[n("span",[t._v(t._s(e.row.shop))])]),t._v(" "),n("df-form-item",{attrs:{label:"商品 ID"}},[n("span",[t._v(t._s(e.row.id))])]),t._v(" "),n("df-form-item",{attrs:{label:"店铺 ID"}},[n("span",[t._v(t._s(e.row.shopId))])]),t._v(" "),n("df-form-item",{attrs:{label:"商品分类"}},[n("span",[t._v(t._s(e.row.category))])]),t._v(" "),n("df-form-item",{attrs:{label:"店铺地址"}},[n("span",[t._v(t._s(e.row.address))])]),t._v(" "),n("df-form-item",{attrs:{label:"商品描述"}},[n("span",[t._v(t._s(e.row.desc))])])],1)]}}])}),t._v(" "),n("df-table-column",{attrs:{label:"商品 ID",prop:"id"}}),t._v(" "),n("df-table-column",{attrs:{label:"商品名称",prop:"name"}}),t._v(" "),n("df-table-column",{attrs:{label:"描述",prop:"desc"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{id:"12987122",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"},{id:"12987123",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"},{id:"12987125",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"},{id:"12987126",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"}]}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo23":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{type:"expand","hide-expand-icon":t.hideExpandIcon},scopedSlots:t._u([{key:"default",fn:function(e){return[n("df-form",{staticClass:"demo-table-expand",attrs:{"label-position":"left",inline:""}},[n("df-form-item",{attrs:{label:"商品名称"}},[n("span",[t._v(t._s(e.row.name))])]),t._v(" "),n("df-form-item",{attrs:{label:"所属店铺"}},[n("span",[t._v(t._s(e.row.shop))])]),t._v(" "),n("df-form-item",{attrs:{label:"商品 ID"}},[n("span",[t._v(t._s(e.row.id))])]),t._v(" "),n("df-form-item",{attrs:{label:"店铺 ID"}},[n("span",[t._v(t._s(e.row.shopId))])]),t._v(" "),n("df-form-item",{attrs:{label:"商品分类"}},[n("span",[t._v(t._s(e.row.category))])]),t._v(" "),n("df-form-item",{attrs:{label:"店铺地址"}},[n("span",[t._v(t._s(e.row.address))])]),t._v(" "),n("df-form-item",{attrs:{label:"商品描述"}},[n("span",[t._v(t._s(e.row.desc))])])],1)]}}])}),t._v(" "),n("df-table-column",{attrs:{label:"商品 ID",prop:"id"}}),t._v(" "),n("df-table-column",{attrs:{label:"商品名称",prop:"name"}}),t._v(" "),n("df-table-column",{attrs:{label:"描述",prop:"desc"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{id:"12987122",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"},{id:"12987123",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"},{id:"12987125",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"},{id:"12987126",name:"好滋好味鸡蛋仔",category:"江浙小吃、小吃零食",desc:"荷兰优质淡奶，奶香浓而不腻",address:"上海市普陀区真北路",shop:"李时珍夫妻店",shopId:"10333"}]}},methods:{hideExpandIcon:function(t,e,n){if(2===n)return!0}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo24":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{staticStyle:{width:"100%","margin-bottom":"20px"},attrs:{data:t.tableData,"row-key":"id",border:"","use-tree":"","default-expand-all":"","tree-props":{children:"children",hasChildren:"hasChildren"}}},[n("df-table-column",{attrs:{prop:"date",label:"日期",sortable:"",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",sortable:"",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1),t._v(" "),n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData1,"row-key":"id",border:"","use-tree":"",lazy:"",load:t.load,"tree-props":{children:"children",hasChildren:"hasChildren"}}},[n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{id:1,date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{id:2,date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{id:3,date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄",children:[{id:31,date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{id:32,date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"}]},{id:4,date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}],tableData1:[{id:1,date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{id:2,date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{id:3,date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄",hasChildren:!0},{id:4,date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}]}},methods:{load:function(t,e,n){setTimeout((function(){n([{id:31,date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{id:32,date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"}])}),1e3)}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo25":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData.filter((function(e){return!t.search||e.name.toLowerCase().includes(t.search.toLowerCase())}))}},[n("df-table-column",{attrs:{label:"Date",prop:"date"}}),t._v(" "),n("df-table-column",{attrs:{label:"Name",prop:"name"}}),t._v(" "),n("df-table-column",{attrs:{align:"right"},scopedSlots:t._u([{key:"header",fn:function(e){return[n("df-input",{attrs:{size:"mini",placeholder:"输入关键字搜索"},model:{value:t.search,callback:function(e){t.search=e},expression:"search"}})]}},{key:"default",fn:function(e){return[n("df-button",{attrs:{size:"mini"},on:{click:function(n){return t.handleEdit(e.$index,e.row)}}},[t._v("Edit")]),t._v(" "),n("df-button",{attrs:{size:"mini",type:"danger"},on:{click:function(n){return t.handleDelete(e.$index,e.row)}}},[t._v("Delete")])]}}])})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",address:"四川省武当山普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"李时珍",address:"四川省武当山普陀区金沙江路 1517 弄"},{date:"2016-05-01",name:"李时珍",address:"四川省武当山普陀区金沙江路 1519 弄"},{date:"2016-05-03",name:"李时珍",address:"四川省武当山普陀区金沙江路 1516 弄"}],search:""}},methods:{handleEdit:function(t,e){console.log(t,e)},handleDelete:function(t,e){console.log(t,e)}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo26":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,border:"","show-summary":""}},[n("df-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount1",sortable:"",label:"数值 1"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount2",sortable:"",label:"数值 2"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount3",sortable:"",label:"数值 3"}})],1),t._v(" "),n("df-table",{staticStyle:{width:"100%","margin-top":"20px"},attrs:{data:t.tableData,border:"",height:"200","summary-method":t.getSummaries,"show-summary":""}},[n("df-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount1",label:"数值 1（元）"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount2",label:"数值 2（元）"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount3",label:"数值 3（元）"}})],1),t._v(" "),n("df-table",{staticStyle:{width:"100%","margin-top":"20px"},attrs:{data:t.tableData,border:"","show-summary":""}},[n("df-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount1",sortable:"",label:"数值 1"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount2",sortable:"",label:"数值 2"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount3",sortable:"",label:"数值 3"}}),t._v(" "),n("div",{staticClass:"custom-summary",attrs:{slot:"customSummary"},slot:"customSummary"},[t._v("自定义求和（在这里进行任何布局）")])],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{id:"12987122",name:"李时珍",amount1:"234",amount2:"3.2",amount3:10},{id:"12987123",name:"李时珍",amount1:"165",amount2:"4.43",amount3:12},{id:"12987124",name:"李时珍",amount1:"324",amount2:"1.9",amount3:9},{id:"12987125",name:"李时珍",amount1:"621",amount2:"2.2",amount3:17},{id:"12987126",name:"李时珍",amount1:"539",amount2:"4.1",amount3:15}]}},methods:{getSummaries:function(t){var e=t.columns,n=t.data,a=[];return e.forEach((function(t,e){if(0!==e){var d=n.map((function(e){return Number(e[t.property])}));d.every((function(t){return isNaN(t)}))?a[e]="N/A":(a[e]=d.reduce((function(t,e){var n=Number(e);return isNaN(n)?t:t+e}),0),a[e]+=" 元")}else a[e]="总价"})),a}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo27":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,"span-method":t.arraySpanMethod,border:""}},[n("df-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount1",sortable:"",label:"数值 1"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount2",sortable:"",label:"数值 2"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount3",sortable:"",label:"数值 3"}})],1),t._v(" "),n("df-table",{staticStyle:{width:"100%","margin-top":"20px"},attrs:{data:t.tableData,"span-method":t.objectSpanMethod,border:""}},[n("df-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount1",label:"数值 1（元）"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount2",label:"数值 2（元）"}}),t._v(" "),n("df-table-column",{attrs:{prop:"amount3",label:"数值 3（元）"}})],1)],1)]],2)},e=[],n={data:function(){return{tableData:[{id:"12987122",name:"李时珍",amount1:"234",amount2:"3.2",amount3:10},{id:"12987123",name:"李时珍",amount1:"165",amount2:"4.43",amount3:12},{id:"12987124",name:"李时珍",amount1:"324",amount2:"1.9",amount3:9},{id:"12987125",name:"李时珍",amount1:"621",amount2:"2.2",amount3:17},{id:"12987126",name:"李时珍",amount1:"539",amount2:"4.1",amount3:15}]}},methods:{arraySpanMethod:function(t){t.row,t.column;var e=t.rowIndex,n=t.columnIndex;if(e%2===0){if(0===n)return[1,2];if(1===n)return[0,0]}},objectSpanMethod:function(t){t.row,t.column;var e=t.rowIndex,n=t.columnIndex;if(0===n)return e%2===0?{rowspan:2,colspan:1}:{rowspan:0,colspan:0}}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo28":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[n("df-table-column",{attrs:{type:"index",index:t.indexMethod}}),t._v(" "),n("df-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"name",label:"姓名",width:"180"}}),t._v(" "),n("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},e=[],n={data:function(){return{tableData:[{date:"2016-05-02",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1518 弄",zip:200333,tag:"家"},{date:"2016-05-04",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1517 弄",zip:200333,tag:"公司"},{date:"2016-05-01",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1519 弄",zip:200333,tag:"家"},{date:"2016-05-03",name:"李时珍",province:"上海",city:"普陀区",address:"四川省武当山普陀区金沙江路 1516 弄",zip:200333,tag:"公司"}]}},methods:{indexMethod:function(t){return 2*t}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo29":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",{staticStyle:{display:"flex",height:"200px"}},[n("df-table",{ref:"leftTable",staticStyle:{width:"50%"},attrs:{data:t.leftTableData,"hide-scroll-bar":"","column-options":t.columnOptions,border:"",height:"100%"},on:{"switch-to-editing-slot":t.leftSwitchToEditingSlot,"button-click":t.leftButtonClick,"table-body-scroll":t.leftTableBodyScroll}},[n("df-table-column",{attrs:{label:"序号",prop:"index",width:"50"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yaoPinMc",label:"药品名称",width:"80"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"left-"+e.column.property+"-"+e.$index,model:{value:e.row.yaoPinMc,callback:function(n){t.$set(e.row,"yaoPinMc",n)},expression:"scope.row.yaoPinMc"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"jiLiang",label:"剂量",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"left-"+e.column.property+"-"+e.$index,model:{value:e.row.jiLiang,callback:function(n){t.$set(e.row,"jiLiang",n)},expression:"scope.row.jiLiang"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"danWei",label:"单位",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"left-"+e.column.property+"-"+e.$index,model:{value:e.row.danWei,callback:function(n){t.$set(e.row,"danWei",n)},expression:"scope.row.danWei"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"biaoZhunJia",label:"标准价",width:"70"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yiBaoDengJi",label:"医保等级"}}),t._v(" "),n("df-table-column",{attrs:{width:"80",type:"buttons","button-type":"icon",buttons:["remove-circle","add-circle","down-circle"]}})],1),t._v(" "),n("df-table",{ref:"rightTable",staticStyle:{width:"50%"},attrs:{data:t.rightTableData,"supplement-row-height":t.rightTableData.length<t.leftTableData.length,"column-options":t.columnOptions,border:"",height:"100%"},on:{"switch-to-editing-slot":t.rightSwitchToEditingSlot,"button-click":t.rightButtonClick,"table-body-scroll":t.rightTableBodyScroll}},[n("df-table-column",{attrs:{label:"序号",prop:"index",width:"50"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yaoPinMc",label:"药品名称",width:"80"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"right-"+e.column.property+"-"+e.$index,model:{value:e.row.yaoPinMc,callback:function(n){t.$set(e.row,"yaoPinMc",n)},expression:"scope.row.yaoPinMc"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"jiLiang",label:"剂量",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"right-"+e.column.property+"-"+e.$index,model:{value:e.row.jiLiang,callback:function(n){t.$set(e.row,"jiLiang",n)},expression:"scope.row.jiLiang"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"danWei",label:"单位",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"right-"+e.column.property+"-"+e.$index,model:{value:e.row.danWei,callback:function(n){t.$set(e.row,"danWei",n)},expression:"scope.row.danWei"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"biaoZhunJia",label:"标准价",width:"70"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yiBaoDengJi",label:"医保等级"}}),t._v(" "),n("df-table-column",{attrs:{width:"80",type:"buttons","button-type":"icon",buttons:["remove-circle","add-circle","down-circle"]}})],1)],1)]],2)},e=[],n={data:function(){return{columnOptions:{editConfig:{trigger:"click",mode:"slot",editableColumns:["yaoPinMc","jiLiang","danWei"]}},tableData:new Array(10).fill().map((function(t,e){return{yaoPinMc:"人参".concat(e+1),jiLiang:1,danWei:"g",biaoZhunJia:"0.2011",shuLiang:0,yiBaoDengJi:"二级"}}))}},computed:{leftTableData:function(){return this.tableData.filter((function(t,e){return e%2===0})).map((function(t,e){return Object(o["a"])({index:2*e+1},t)}))},rightTableData:function(){return this.tableData.filter((function(t,e){return e%2===1})).map((function(t,e){return Object(o["a"])({index:2*e+2},t)}))}},methods:{leftButtonClick:function(t,e,n,a){this.buttonClick(t,2*a)},rightButtonClick:function(t,e,n,a){this.buttonClick(t,2*a+1)},buttonClick:function(t,e){var n=this;switch(t){case"remove-circle":this.tableData.splice(e,1);break;case"add-circle":if(this.tableData.push({yaoPinMc:"",jiLiang:1,danWei:"g",biaoZhunJia:"0.2011",shuLiang:0,yiBaoDengJi:"二级"}),this.tableData.length%2===0){var a=(this.tableData.length-2)/2;this.$refs.rightTable.addRowEditingSlot(a),this.$nextTick((function(){n.$refs["right-yaoPinMc-".concat(a)].focus()}))}else{var d=(this.tableData.length-1)/2;this.$refs.leftTable.addRowEditingSlot(d),this.$nextTick((function(){n.$refs["left-yaoPinMc-".concat(d)].focus()}))}break;case"down-circle":if(e===this.tableData.length-1)return;var o=this.tableData[e],l=this.tableData[e+1];this.tableData.splice(e,1,l),this.tableData.splice(e+1,1,o);break;default:break}},leftTableBodyScroll:function(t){this.$refs.rightTable.setTableBodyScrollTop(t)},rightTableBodyScroll:function(t){this.$refs.leftTable.setTableBodyScrollTop(t)},leftSwitchToEditingSlot:function(t,e,n,a){var d=this;this.$refs.rightTable.restoreAllEditingSlot(),this.$refs.leftTable.addRowEditingSlot(e),this.$refs.leftTable.restoreAllEditingSlot({excludeMode:"row",excludeRowIndex:e}),"click"===a&&this.$nextTick((function(){d.$refs["left-".concat(t,"-").concat(e)].focus()}))},rightSwitchToEditingSlot:function(t,e,n,a){var d=this;this.$refs.leftTable.restoreAllEditingSlot(),this.$refs.rightTable.addRowEditingSlot(e),this.$refs.rightTable.restoreAllEditingSlot({excludeMode:"row",excludeRowIndex:e}),"click"===a&&this.$nextTick((function(){d.$refs["right-".concat(t,"-").concat(e)].focus()}))}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}(),"df-demo30":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",{staticStyle:{display:"flex"}},[n("df-table",{ref:"leftTable",staticStyle:{width:"50%"},attrs:{data:t.leftTableData,"column-options":t.columnOptions,border:""},on:{"switch-to-editing-slot":t.leftSwitchToEditingSlot,"button-click":t.leftButtonClick}},[n("df-table-column",{attrs:{label:"序号",prop:"index",width:"50"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yaoPinMc",label:"药品名称",width:"80"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"left-"+e.column.property+"-"+e.$index,model:{value:e.row.yaoPinMc,callback:function(n){t.$set(e.row,"yaoPinMc",n)},expression:"scope.row.yaoPinMc"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"jiLiang",label:"剂量",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"left-"+e.column.property+"-"+e.$index,model:{value:e.row.jiLiang,callback:function(n){t.$set(e.row,"jiLiang",n)},expression:"scope.row.jiLiang"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"danWei",label:"单位",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"left-"+e.column.property+"-"+e.$index,model:{value:e.row.danWei,callback:function(n){t.$set(e.row,"danWei",n)},expression:"scope.row.danWei"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"biaoZhunJia",label:"标准价",width:"70"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yiBaoDengJi",label:"医保等级"}}),t._v(" "),n("df-table-column",{attrs:{width:"80",type:"buttons","button-type":"icon",buttons:["remove-circle","add-circle","down-circle"]}})],1),t._v(" "),n("df-table",{ref:"rightTable",staticStyle:{width:"50%"},attrs:{data:t.rightTableData,"supplement-row-height":t.rightTableData.length<t.leftTableData.length,"column-options":t.columnOptions,border:""},on:{"switch-to-editing-slot":t.rightSwitchToEditingSlot,"button-click":t.rightButtonClick}},[n("df-table-column",{attrs:{label:"序号",prop:"index",width:"50"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yaoPinMc",label:"药品名称",width:"80"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"right-"+e.column.property+"-"+e.$index,model:{value:e.row.yaoPinMc,callback:function(n){t.$set(e.row,"yaoPinMc",n)},expression:"scope.row.yaoPinMc"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"jiLiang",label:"剂量",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"right-"+e.column.property+"-"+e.$index,model:{value:e.row.jiLiang,callback:function(n){t.$set(e.row,"jiLiang",n)},expression:"scope.row.jiLiang"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"danWei",label:"单位",width:"50"},scopedSlots:t._u([{key:"editing",fn:function(e){return n("div",{},[n("df-input",{ref:"right-"+e.column.property+"-"+e.$index,model:{value:e.row.danWei,callback:function(n){t.$set(e.row,"danWei",n)},expression:"scope.row.danWei"}})],1)}}])}),t._v(" "),n("df-table-column",{attrs:{prop:"biaoZhunJia",label:"标准价",width:"70"}}),t._v(" "),n("df-table-column",{attrs:{prop:"yiBaoDengJi",label:"医保等级"}}),t._v(" "),n("df-table-column",{attrs:{width:"80",type:"buttons","button-type":"icon",buttons:["remove-circle","add-circle","down-circle"]}})],1)],1)]],2)},e=[],n={data:function(){return{columnOptions:{editConfig:{trigger:"click",mode:"slot",editableColumns:["yaoPinMc","jiLiang","danWei"]}},tableData:new Array(10).fill().map((function(t,e){return{yaoPinMc:"人参".concat(e+1),jiLiang:1,danWei:"g",biaoZhunJia:"0.2011",shuLiang:0,yiBaoDengJi:"二级"}}))}},computed:{leftTableData:function(){return this.tableData.filter((function(t,e){return e%2===0})).map((function(t,e){return Object(o["a"])({index:2*e+1},t)}))},rightTableData:function(){return this.tableData.filter((function(t,e){return e%2===1})).map((function(t,e){return Object(o["a"])({index:2*e+2},t)}))}},methods:{leftButtonClick:function(t,e,n,a){this.buttonClick(t,2*a)},rightButtonClick:function(t,e,n,a){this.buttonClick(t,2*a+1)},buttonClick:function(t,e){var n=this;switch(t){case"remove-circle":this.tableData.splice(e,1);break;case"add-circle":if(this.tableData.push({yaoPinMc:"",jiLiang:1,danWei:"g",biaoZhunJia:"0.2011",shuLiang:0,yiBaoDengJi:"二级"}),this.tableData.length%2===0){var a=(this.tableData.length-2)/2;this.$refs.rightTable.addRowEditingSlot(a),this.$nextTick((function(){n.$refs["right-yaoPinMc-".concat(a)].focus()}))}else{var d=(this.tableData.length-1)/2;this.$refs.leftTable.addRowEditingSlot(d),this.$nextTick((function(){n.$refs["left-yaoPinMc-".concat(d)].focus()}))}break;case"down-circle":if(e===this.tableData.length-1)return;var o=this.tableData[e],l=this.tableData[e+1];this.tableData.splice(e,1,l),this.tableData.splice(e+1,1,o);break;default:break}},leftSwitchToEditingSlot:function(t,e,n,a){var d=this;this.$refs.rightTable.restoreAllEditingSlot(),this.$refs.leftTable.addRowEditingSlot(e),this.$refs.leftTable.restoreAllEditingSlot({excludeMode:"row",excludeRowIndex:e}),"click"===a&&this.$nextTick((function(){d.$refs["left-".concat(t,"-").concat(e)].focus()}))},rightSwitchToEditingSlot:function(t,e,n,a){var d=this;this.$refs.leftTable.restoreAllEditingSlot(),this.$refs.rightTable.addRowEditingSlot(e),this.$refs.rightTable.restoreAllEditingSlot({excludeMode:"row",excludeRowIndex:e}),"click"===a&&this.$nextTick((function(){d.$refs["right-".concat(t,"-").concat(e)].focus()}))}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}()}}),r=l,i=n("2877"),s=Object(i["a"])(r,a,d,!1,null,null,null);e["default"]=s.exports}}]);
//# sourceMappingURL=chunk-2d0b6b06.60f6a882.js.map