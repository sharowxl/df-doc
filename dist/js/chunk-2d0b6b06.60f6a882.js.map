{"version":3,"sources":["webpack:///./src/docs-ui/data/table.md","webpack:///src/docs-ui/data/table.md","webpack:///./src/docs-ui/data/table.md?19cf","webpack:///./src/docs-ui/data/table.md?1cec"],"names":["render","_vm","this","_c","_self","staticClass","_m","_v","slot","pre","attrs","staticRenderFns","name","components","_h","$createElement","staticStyle","tableData","democomponentExport","data","date","address","_objectSpread","Array","from","length","ref","needToggleHiddenButton","defaultHiddenColumns","on","hiddenStatusChange","showDate","hideDate","toggleName","toggleButton","gender","methods","hiddenStatus","console","log","$refs","table","setColumnShowStatus","toggleColumnShowStatus","buttonClick","hiddenButtons","hideFirstRowFirstButtons","showFirstRowFirstButtons","setButtons","loadingButtons","loadingFirstRowButtons","unLoadingAllButtons","disabledButtons","disableFirstRowFirstButtons","enableFirstRowFirstButtons","buttonIndex","rowIndex","row","button","concat","push","index","findIndex","hiddenButton","splice","disabledButton","operationClick","hiddenOperations","$event","stopPropagation","hideFirstRowFirstOperation","apply","arguments","showFirstRowFirstOperation","setOperations","loadingOperations","loadingFirstRowOperations","unLoadingAllOperations","disabledOperations","disableFirstRowFirstOperation","enableFirstRowFirstOperation","operationIndex","operation","hiddenOperation","disabledOperation","scopedSlots","_u","key","fn","scope","_s","handleClick","handleDelete","model","value","labelSize","callback","$$v","expression","tableRowClassName","_ref","province","city","zip","nativeOn","preventDefault","deleteRow","$index","rows","handleCurrentChange","setCurrent","currentRow","singleTable","setCurrentRow","val","handleSelectionChange","toggleSelection","multipleSelection","_this","forEach","multipleTable","toggleRowSelection","clearSelection","columnOptions","itemCheckedChanged","getCheckedItems","setItemChecked","setAllItemsChecked","removeAllItemsChecked","multipleConfig","multipleColumns","columnProp","disableRowsIndex","age","rowData","prop","order","formatter","column","resetDateFilter","clearFilter","text","filterHandler","filterAddress","filterTag","tag","filterTable","property","includes","handleEdit","props","shop","id","shopId","category","desc","hideExpandIcon","children","hasChildren","tableData1","load","tree","treeNode","resolve","setTimeout","filter","search","toLowerCase","getSummaries","amount1","amount2","amount3","param","columns","sums","values","map","item","Number","every","isNaN","reduce","prev","curr","arraySpanMethod","objectSpanMethod","_ref2","columnIndex","_ref3","rowspan","colspan","indexMethod","leftTableData","leftSwitchToEditingSlot","leftButtonClick","leftTableBodyScroll","yaoPinMc","$set","jiLiang","danWei","rightTableData","rightSwitchToEditingSlot","rightButtonClick","rightTableBodyScroll","editConfig","trigger","mode","editableColumns","fill","biaoZhunJia","shuLiang","yiBaoDengJi","computed","_this2","addedRowIndex","rightTable","addRowEditingSlot","$nextTick","focus","leftTable","nextRow","scrollTop","setTableBodyScrollTop","triggerType","_this3","restoreAllEditingSlot","excludeMode","excludeRowIndex","_this4","_this5","_this6","_this7","component"],"mappings":"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","file":"js/chunk-2d0b6b06.60f6a882.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"content df-doc\"},[_vm._m(0),_c('p',[_vm._v(\"用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。\")]),_vm._m(1),_c('p',[_vm._v(\"基础的表格展示用法。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"当\"),_c('code',[_vm._v(\"df-table\")]),_vm._v(\"元素中注入\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"对象数组后，在\"),_c('code',[_vm._v(\"df-table-column\")]),_vm._v(\"中用\"),_c('code',[_vm._v(\"prop\")]),_vm._v(\"属性来对应对象中的键名即可填入数据，用\"),_c('code',[_vm._v(\"label\")]),_vm._v(\"属性来定义表格的列名。可以使用\"),_c('code',[_vm._v(\"width\")]),_vm._v(\"属性来定义列宽。\")])]),_c('template',{slot:\"source\"},[_c('df-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"  <template>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%\\\">\\n      <df-table-column\\n        prop=\\\"date\\\"\\n        label=\\\"日期\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"地址\\\">\\n      </df-table-column>\\n    </df-table>\\n  </template>\\n\\n  <script>\\n    export default {\\n      data() {\\n        return {\\n          tableData: [{\\n            date: '2016-05-02',\\n            name: '李时珍',\\n            address: '四川省武当山普陀区金沙江路 1518 弄'\\n          }, {\\n            date: '2016-05-04',\\n            name: '李时珍',\\n            address: '四川省武当山普陀区金沙江路 1517 弄'\\n          }, {\\n            date: '2016-05-01',\\n            name: '李时珍',\\n            address: '四川省武当山普陀区金沙江路 1519 弄'\\n          }, {\\n            date: '2016-05-03',\\n            name: '李时珍',\\n            address: '四川省武当山普陀区金沙江路 1516 弄'\\n          }]\\n        }\\n      }\\n    }\\n  </script>\\n\")])])])],2),_vm._m(2),_c('p',[_vm._v(\"大数据表格展示用法。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"当\"),_c('code',[_vm._v(\"df-table\")]),_vm._v(\"元素中注入\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"对象数组后，在\"),_c('code',[_vm._v(\"df-table-column\")]),_vm._v(\"中用\"),_c('code',[_vm._v(\"prop\")]),_vm._v(\"属性来对应对象中的键名即可填入数据，用\"),_c('code',[_vm._v(\"label\")]),_vm._v(\"属性来定义表格的列名。可以使用\"),_c('code',[_vm._v(\"width\")]),_vm._v(\"属性来定义列宽。\")])]),_c('template',{slot:\"source\"},[_c('df-demo1')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"  <template>\\n    <df-table\\n      useVirtual\\n      :data=\\\"tableData\\\"\\n      height='400px'\\n      style=\\\"width: 100%\\\">\\n      <df-table-column\\n        type=\\\"index\\\"\\n        width=\\\"80\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"date\\\"\\n        label=\\\"日期\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"地址\\\">\\n      </df-table-column>\\n    </df-table>\\n  </template>\\n\\n  <script>\\n    export default {\\n      data() {\\n        return {\\n          \\n          tableData: Array.from({length: 100}, () => ({\\n            date: '2016-05-02',\\n            name: '李时珍',\\n            address: '四川省武当山普陀区金沙江路 1518 弄'\\n          }))\\n        }\\n      }\\n    }\\n  </script>\\n\")])])])],2),_vm._m(3),_c('p',[_vm._v(\"当表格没有数据时，可定制为空提示。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"使用\"),_c('code',[_vm._v(\"empty-text\")]),_vm._v(\"属性可以自定义数据为空时的文本提示内容，也可以通过插槽\"),_c('code',[_vm._v(\"slot=\\\"empty\\\"\")]),_vm._v(\"来定制更加自定义的提示区域。\")])]),_c('template',{slot:\"source\"},[_c('df-demo2')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <div class=\\\"demonstration\\\">自定义文本提示</div>\\n    <df-table\\n      :data=\\\"[]\\\"\\n      style=\\\"width: 100%\\\"\\n      empty-text=\\\"这里没有数据了\\\">\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" width=\\\"1800\\\" />\\n    </df-table>\\n    <div class=\\\"demonstration\\\">需要图片提示</div>\\n    <df-table\\n      :data=\\\"[]\\\"\\n      style=\\\"width: 100%\\\"\\n      :no-empty-img=\\\"false\\\">\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" width=\\\"1800\\\" />\\n    </df-table>\\n    <div class=\\\"demonstration\\\">自定义提示区域</div>\\n    <df-table\\n      :data=\\\"[]\\\"\\n      style=\\\"width: 100%\\\">\\n      <template slot=\\\"empty\\\">\\n        <div class=\\\"custom-empty-block\\\">真的没有数据了</div>\\n      </template>\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" width=\\\"1800\\\" />\\n    </df-table>\\n  </div>\\n</template>\\n\\n\")])])])],2),_vm._m(4),_c('p',[_vm._v(\"切换表格某一列的显示和隐藏。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"设置\"),_c('code',[_vm._v(\"needHideColumns\")]),_vm._v(\"属性即可开启列显隐功能，配置\"),_c('code',[_vm._v(\"default-hidden-columns\")]),_vm._v(\"以设置默认隐藏的列，此属性是一个数组，元素为列对应的\"),_c('code',[_vm._v(\"prop\")]),_vm._v(\"属性，当某一列的显隐发现变化时，\"),_c('code',[_vm._v(\"df-table\")]),_vm._v(\"将外派事件 \"),_c('code',[_vm._v(\"hidden-status-change\")]),_vm._v(\"，携带一个\"),_c('code',[_vm._v(\"Object\")]),_vm._v(\"类型参数，包括了变化的信息。\")])]),_c('template',{slot:\"source\"},[_c('df-demo3')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      need-hide-columns\\n      :need-toggle-hidden-button=\\\"needToggleHiddenButton\\\"\\n      :default-hidden-columns=\\\"defaultHiddenColumns\\\"\\n      @hidden-status-change=\\\"hiddenStatusChange\\\"\\n      ref=\\\"table\\\"\\n      style=\\\"width: 100%; margin-bottom: 20px\\\">\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"150\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"150\\\" />\\n      <df-table-column prop=\\\"gender\\\" label=\\\"性别\\\" width=\\\"150\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n    </df-table>\\n    <df-button @click=\\\"showDate\\\">显示日期列</df-button>\\n    <df-button @click=\\\"hideDate\\\">隐藏日期列</df-button>\\n    <df-button @click=\\\"toggleName\\\">切换姓名列显隐</df-button>\\n    <df-button @click=\\\"toggleButton\\\">切换控制按钮显隐</df-button>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      needToggleHiddenButton: false,\\n      defaultHiddenColumns: ['date'],\\n      tableData: [\\n        {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          gender: '女',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        },\\n        {\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          gender: '女',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        },\\n        {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          gender: '男',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }\\n      ]\\n    }\\n  },\\n  methods: {\\n    hiddenStatusChange (hiddenStatus) {\\n      console.log(hiddenStatus)\\n    },\\n    showDate () {\\n      this.$refs.table.setColumnShowStatus('date', true)\\n    },\\n    hideDate () {\\n      this.$refs.table.setColumnShowStatus('date', false)\\n    },\\n    toggleName () {\\n      this.$refs.table.toggleColumnShowStatus('name')\\n    },\\n    toggleButton () {\\n      this.needToggleHiddenButton = !this.needToggleHiddenButton\\n    }\\n  }\\n}\\n</script>\\n\\n\")])])])],2),_vm._m(5),_c('p',[_vm._v(\"一般用于最后一列的按钮组操作。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"手动添加一个\"),_c('code',[_vm._v(\"df-table-column\")]),_vm._v(\"，设\"),_c('code',[_vm._v(\"type\")]),_vm._v(\"属性为\"),_c('code',[_vm._v(\"buttons\")]),_vm._v(\"即可；传入\"),_c('code',[_vm._v(\"button-type\")]),_vm._v(\"按钮类型为\"),_c('code',[_vm._v(\"text\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"icon\")]),_vm._v(\"，再传入按钮组数组，使用 text 时，传入文字，使用 icon 时，传入图标的类型，按钮组可以根据不同情况传入不同的按钮，具体参考第二个示例；当某一按钮被点击时，将会派出事件\"),_c('code',[_vm._v(\"button-click\")]),_vm._v(\"，携带按钮的详细信息。支持传入\"),_c('code',[_vm._v(\"hidden-buttons\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"loading-buttons\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"disabled-buttons\")]),_vm._v(\"设置某些按钮的隐藏、禁用或加载，需要注意的是\"),_c('code',[_vm._v(\"hidden-buttons\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"loading-buttons\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"disabled-buttons\")]),_vm._v(\"必须通过 Vue 指定的 \"),_c('a',{attrs:{\"href\":\"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B\"}},[_vm._v(\"数组更新检测\")]),_vm._v(\" 方法来改变值，否则将不能监听其变化。\")])]),_c('template',{slot:\"source\"},[_c('df-demo4')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin-bottom: 20px\\\"\\n      @button-click='buttonClick'>\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n      <df-table-column\\n        width='200'\\n        type=\\\"buttons\\\"\\n        button-type='text'\\n        :buttons='[\\\"删除\\\", \\\"创建\\\", \\\"开单\\\"]'\\n        :hidden-buttons='hiddenButtons'\\n      />\\n    </df-table>\\n    <df-button @click='hideFirstRowFirstButtons'>隐藏第一行第一个按钮</df-button>\\n    <df-button @click='showFirstRowFirstButtons'>显示第一行第一个按钮</df-button>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin: 20px 0\\\"\\n      @button-click='buttonClick'>\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n      <df-table-column\\n        width='200'\\n        type=\\\"buttons\\\"\\n        button-type='text'\\n        :set-buttons='setButtons'\\n        :loading-buttons='loadingButtons'\\n      />\\n    </df-table>\\n    <df-button @click='loadingFirstRowButtons'>设置第一行的按钮组为 loading</df-button>\\n    <df-button @click='unLoadingAllButtons'>清除所有按钮的 loading</df-button>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin: 20px 0\\\"\\n      @button-click='buttonClick'>\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n      <df-table-column\\n        width='200'\\n        type=\\\"buttons\\\"\\n        button-type='icon'\\n        :buttons='[\\\"add-square\\\", \\\"reduce-square\\\", \\\"content\\\"]'\\n        :disabled-buttons='disabledButtons'\\n      />\\n    </df-table>\\n    <df-button @click='disableFirstRowFirstButtons'>设置第一行第一个按钮为 disabled</df-button>\\n    <df-button @click='enableFirstRowFirstButtons'>清除第一行第一个按钮的 disabled</df-button>\\n    <div style=\\\"margin-top: 20px\\\" class='demonstration'>文字类型按钮组的按钮展示数量有上限，默认展示 2 个，但是可以通过属性 display-buttons-length 配置，超出部分使用弹出方式展示，弹出的按钮支持属性 hide-on-click 配置</div>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin-top: 20px\\\"\\n      @button-click='buttonClick'\\n      border>\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n      <df-table-column\\n        width='200'\\n        type=\\\"buttons\\\"\\n        button-type='text'\\n        :display-buttons-length='3'\\n        :hide-on-click='false'\\n        :buttons='[\\\"删除\\\", \\\"创建\\\", \\\"开单\\\", \\\"编辑\\\", \\\"查看\\\", \\\"更新\\\"]'\\n      />\\n    </df-table>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      tableData: [{\\n        date: '2016-05-02',\\n        name: '李时珍',\\n        address: '四川省武当山普陀区金沙江路 1518 弄'\\n      }, {\\n        date: '2016-05-04',\\n        name: '李时珍',\\n        address: '四川省武当山普陀区金沙江路 1517 弄'\\n      }, {\\n        date: '2016-05-01',\\n        name: '李时珍',\\n        address: '四川省武当山普陀区金沙江路 1519 弄'\\n      }],\\n      hiddenButtons: [],\\n      loadingButtons: [],\\n      disabledButtons: [{buttonIndex: 2, rowIndex: 0}]\\n    }\\n  },\\n  methods: {\\n    setButtons (row, rowIndex) {\\n      if (rowIndex === 1) return ['删除', '创建', '开单']\\n      else return ['编辑', '查看', '更新']\\n    },\\n    buttonClick (button, buttonIndex, row, rowIndex) {\\n      console.log(`第 ${rowIndex + 1} 行的按钮组中的第 ${buttonIndex + 1} 个按钮被点击了，这个按钮名称是 ${button}，这一行的信息是`, row)\\n    },\\n    hideFirstRowFirstButtons () {\\n      this.hiddenButtons.push({buttonIndex: 0, rowIndex: 0})\\n    },\\n    showFirstRowFirstButtons () {\\n      const index = this.hiddenButtons.findIndex(hiddenButton => hiddenButton.buttonIndex === 0 && hiddenButton.rowIndex === 0)\\n      this.hiddenButtons.splice(index, 1)\\n    },\\n    loadingFirstRowButtons () {\\n      this.loadingButtons.push({buttonIndex: 0, rowIndex: 0}, {buttonIndex: 1, rowIndex: 0}, {buttonIndex: 2, rowIndex: 0})\\n    },\\n    unLoadingAllButtons () {\\n      this.loadingButtons.splice(0, this.loadingButtons.length)\\n    },\\n    disableFirstRowFirstButtons () {\\n      this.disabledButtons.push({buttonIndex: 0, rowIndex: 0})\\n    },\\n    enableFirstRowFirstButtons () {\\n      const index = this.disabledButtons.findIndex(disabledButton => disabledButton.buttonIndex === 0 && disabledButton.rowIndex === 0)\\n      this.disabledButtons.splice(index, 1)\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(6),_c('p',[_vm._v(\"弹起行的更多操作框。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"手动添加一个\"),_c('code',[_vm._v(\"df-table-column\")]),_vm._v(\"，设\"),_c('code',[_vm._v(\"type\")]),_vm._v(\"属性为\"),_c('code',[_vm._v(\"operation\")]),_vm._v(\"即可；需要传入\"),_c('code',[_vm._v(\"operations\")]),_vm._v(\"操作项，操作组可以根据不同情况传入不同的操作，具体参考第二个示例；当某一操作被触发时，将会派出事件\"),_c('code',[_vm._v(\"operation-click\")]),_vm._v(\"，携带操作的详细信息。支持传入\"),_c('code',[_vm._v(\"hidden-operations\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"loading-operations\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"disabled-operations\")]),_vm._v(\"设置某些按钮的隐藏、禁用或加载，需要注意的是\"),_c('code',[_vm._v(\"hidden-operations\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"loading-operations\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"disabled-operations\")]),_vm._v(\"必须通过 Vue 指定的 \"),_c('a',{attrs:{\"href\":\"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B\"}},[_vm._v(\"数组更新检测\")]),_vm._v(\" 方法来改变值，否则将不能监听其变化。\")])]),_c('template',{slot:\"source\"},[_c('df-demo5')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin-bottom: 20px\\\"\\n      @operation-click=\\\"operationClick\\\">\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n      <df-table-column\\n        type='operation'\\n        :operations='[\\\"删除\\\", \\\"创建\\\", \\\"开单\\\"]'\\n        width='55'\\n        :hidden-operations='hiddenOperations'\\n      ></df-table-column>\\n    </df-table>\\n    <df-button @click.stop='hideFirstRowFirstOperation'>隐藏第一行第一个操作</df-button>\\n    <df-button @click.stop='showFirstRowFirstOperation'>显示第一行第一个操作</df-button>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin: 20px 0\\\"\\n      @operation-click=\\\"operationClick\\\">\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n      <df-table-column\\n        type='operation'\\n        :set-operations='setOperations'\\n        width='55'\\n        :loading-operations='loadingOperations'\\n      ></df-table-column>\\n    </df-table>\\n    <df-button @click.stop='loadingFirstRowOperations'>设置第一行的操作组为 loading</df-button>\\n    <df-button @click.stop='unLoadingAllOperations'>清除所有操作的 loading</df-button>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin: 20px 0\\\"\\n      @operation-click=\\\"operationClick\\\">\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n      <df-table-column\\n        type='operation'\\n        :operations='[\\\"删除\\\", \\\"创建\\\", \\\"开单\\\"]'\\n        width='55'\\n        :disabled-operations='disabledOperations'\\n      ></df-table-column>\\n    </df-table>\\n    <df-button @click.stop='disableFirstRowFirstOperation'>设置第一行第一个操作为 disabled</df-button>\\n    <df-button @click.stop='enableFirstRowFirstOperation'>清除第一行第一个操作的 disabled</df-button>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      tableData: [{\\n        date: '2016-05-02',\\n        name: '李时珍',\\n        address: '四川省武当山普陀区金沙江路 1518 弄'\\n      }, {\\n        date: '2016-05-04',\\n        name: '李时珍',\\n        address: '四川省武当山普陀区金沙江路 1517 弄'\\n      }, {\\n        date: '2016-05-01',\\n        name: '李时珍',\\n        address: '四川省武当山普陀区金沙江路 1519 弄'\\n      }],\\n      hiddenOperations: [],\\n      loadingOperations: [],\\n      disabledOperations: [{operationIndex: 2, rowIndex: 0}]\\n    }\\n  },\\n  methods: {\\n    setOperations (row, rowIndex) {\\n      if (rowIndex === 1) return ['删除', '创建', '开单']\\n      else return ['编辑', '查看', '更新']\\n    },\\n    operationClick (operation, operationIndex, row, rowIndex) {\\n      console.log(`第 ${rowIndex + 1} 行的弹出操作组中的第 ${operationIndex + 1} 个操作被点击了，这个操作名称是 ${operation}，这一行的信息是`, row)\\n    },\\n    hideFirstRowFirstOperation () {\\n      this.hiddenOperations.push({operationIndex: 0, rowIndex: 0})\\n    },\\n    showFirstRowFirstOperation () {\\n      const index = this.hiddenOperations.findIndex(hiddenOperation => hiddenOperation.operationIndex === 0 && hiddenOperation.rowIndex === 0)\\n      this.hiddenOperations.splice(index, 1)\\n    },\\n    loadingFirstRowOperations () {\\n      this.loadingOperations.push({operationIndex: 0, rowIndex: 0}, {operationIndex: 1, rowIndex: 0}, {operationIndex: 2, rowIndex: 0})\\n    },\\n    unLoadingAllOperations () {\\n      this.loadingOperations.splice(0, this.loadingOperations.length)\\n    },\\n    disableFirstRowFirstOperation () {\\n      this.disabledOperations.push({operationIndex: 0, rowIndex: 0})\\n    },\\n    enableFirstRowFirstOperation () {\\n      const index = this.disabledOperations.findIndex(disabledOperation => disabledOperation.operationIndex === 0 && disabledOperation.rowIndex === 0)\\n      this.disabledOperations.splice(index, 1)\\n    }\\n  }\\n}\\n</script>\\n\\n\\n\")])])])],2),_vm._m(7),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"因为table表格的 \"),_c('code',[_vm._v(\"宽度\")]),_vm._v(\" 是自适应的,所以若要插入按钮,请使用小号的按钮,或者文字按钮，用法参考 demo。\")])]),_c('template',{slot:\"source\"},[_c('df-demo6')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      label=\\\"日期\\\"\\n      width=\\\"180\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <span>{{ scope.row.date }}</span>\\n      </template>\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"姓名\\\"\\n      width=\\\"180\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <span>{{ scope.row.name }}</span>\\n      </template>\\n    </df-table-column>\\n    <df-table-column label=\\\"操作\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <df-button @click=\\\"handleClick(scope.row)\\\" type=\\\"text\\\" size=\\\"small\\\">查看</df-button>\\n        <df-button type=\\\"text\\\" size=\\\"small\\\"@click=\\\"handleDelete\\\">删除</df-button>\\n      </template>\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }]\\n      }\\n    },\\n    methods: {\\n      handleClick(index, row) {\\n        console.log(index, row);\\n      },\\n      handleDelete(index, row) {\\n        console.log(index, row);\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(8),_c('p',[_vm._v(\"Table 组件提供了三种尺寸，可以在不同场景下选择合适的按钮尺寸。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"额外的尺寸：\"),_c('code',[_vm._v(\"medium\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"small\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"mini\")]),_vm._v(\"，通过设置\"),_c('code',[_vm._v(\"size\")]),_vm._v(\"属性来配置它们。\")])]),_c('template',{slot:\"source\"},[_c('df-demo7')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-radio-group v-model=\\\"labelSize\\\" size=\\\"small\\\">\\n      <df-radio-button label=\\\"medium\\\"></df-radio-button>\\n      <df-radio-button label=\\\"small\\\"></df-radio-button>\\n      <df-radio-button label=\\\"mini\\\"></df-radio-button>\\n    </df-radio-group>\\n    <div style=\\\"margin: 20px;\\\"></div>\\n    <df-table :size=\\\"labelSize\\\" :data=\\\"tableData\\\" style=\\\"width: 100%\\\">\\n      <df-table-column\\n        prop=\\\"date\\\"\\n        label=\\\"日期\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"地址\\\">\\n      </df-table-column>\\n    </df-table>\\n  </div>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        labelSize: 'small',\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(9),_c('p',[_vm._v(\"为了更容易区分出不同行的数据，表格斑马线是默认启用的，但是可以通过配置来取消使用。\")]),_c('demo-block',[_c('div',[_c('p',[_c('code',[_vm._v(\"stripe\")]),_vm._v(\"属性可以创建带斑马纹的表格。它接受一个\"),_c('code',[_vm._v(\"Boolean\")]),_vm._v(\"，默认为\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"，设置为\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"以取消使用。\")])]),_c('template',{slot:\"source\"},[_c('df-demo8')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    :stripe=\\\"false\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(10),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"默认情况下，Table 组件是具有竖直方向的边框的，如果不需要，可以使用\"),_c('code',[_vm._v(\"border\")]),_vm._v(\"属性，它接受一个\"),_c('code',[_vm._v(\"Boolean\")]),_vm._v(\"，设置为\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"即可启用。\")])]),_c('template',{slot:\"source\"},[_c('df-demo9')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    :border=\\\"false\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(11),_c('p',[_vm._v(\"可将表格内容 highlight 显示，方便区分「成功、信息、警告、危险」等内容。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"可以通过指定 Table 组件的 \"),_c('code',[_vm._v(\"row-class-name\")]),_vm._v(\" 属性来为 Table 中的某一行添加 class，表明该行处于某种状态，注意这种情况下需要取消表格的斑马线配置，否则斑马线将会覆盖表现效果。\")])]),_c('template',{slot:\"source\"},[_c('df-demo10')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    :row-class-name=\\\"tableRowClassName\\\"\\n    :stripe=\\\"false\\\">\\n    <df-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<style>\\n  .df-table .warning-row {\\n    background: oldlace;\\n  }\\n\\n  .df-table .success-row {\\n    background: #f0f9eb;\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    methods: {\\n      tableRowClassName({row, rowIndex}) {\\n        if (rowIndex === 1) {\\n          return 'warning-row';\\n        } else if (rowIndex === 3) {\\n          return 'success-row';\\n        }\\n        return '';\\n      }\\n    },\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(12),_c('p',[_vm._v(\"纵向内容过多时，可选择固定表头。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"只要在\"),_c('code',[_vm._v(\"df-table\")]),_vm._v(\"元素中定义了\"),_c('code',[_vm._v(\"height\")]),_vm._v(\"属性，即可实现固定表头的表格，而不需要额外的代码。\")])]),_c('template',{slot:\"source\"},[_c('df-demo11')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    height=\\\"250\\\"\\n    border\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-08',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-06',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-07',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(13),_c('p',[_vm._v(\"横向内容过多时，可选择固定列。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"固定列需要使用\"),_c('code',[_vm._v(\"fixed\")]),_vm._v(\"属性，它接受 Boolean 值或者\"),_c('code',[_vm._v(\"left\")]),_vm._v(\" \"),_c('code',[_vm._v(\"right\")]),_vm._v(\"，表示左边固定还是右边固定。\")])]),_c('template',{slot:\"source\"},[_c('df-demo12')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    border\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      fixed\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"150\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"province\\\"\\n      label=\\\"省份\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"city\\\"\\n      label=\\\"市区\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\"\\n      width=\\\"300\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"zip\\\"\\n      label=\\\"邮编\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      fixed=\\\"right\\\"\\n      label=\\\"操作\\\"\\n      width=\\\"100\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <df-button @click=\\\"handleClick(scope.row)\\\" type=\\\"text\\\" size=\\\"small\\\">查看</df-button>\\n        <df-button type=\\\"text\\\" size=\\\"small\\\">编辑</df-button>\\n      </template>\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    methods: {\\n      handleClick(row) {\\n        console.log(row);\\n      }\\n    },\\n\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1517 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1519 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1516 弄',\\n          zip: 200333\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(14),_c('p',[_vm._v(\"横纵内容过多时，可选择固定列和表头。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"固定列和表头可以同时使用，只需要将上述两个属性分别设置好即可。\")])]),_c('template',{slot:\"source\"},[_c('df-demo13')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    height=\\\"250\\\">\\n    <df-table-column\\n      fixed\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"150\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"province\\\"\\n      label=\\\"省份\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"city\\\"\\n      label=\\\"市区\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"zip\\\"\\n      label=\\\"邮编\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-08',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-06',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-07',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(15),_c('p',[_vm._v(\"当数据量动态变化时，可以为 Table 设置一个最大高度。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过设置\"),_c('code',[_vm._v(\"max-height\")]),_vm._v(\"属性为 Table 指定最大高度。此时若表格所需的高度大于最大高度，则会显示一个滚动条。\")])]),_c('template',{slot:\"source\"},[_c('df-demo14')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    max-height=\\\"250\\\">\\n    <df-table-column\\n      fixed\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"150\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"province\\\"\\n      label=\\\"省份\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"city\\\"\\n      label=\\\"市区\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\"\\n      width=\\\"300\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"zip\\\"\\n      label=\\\"邮编\\\"\\n      width=\\\"120\\\">\\n    </df-table-column>\\n    <df-table-column\\n      fixed=\\\"right\\\"\\n      label=\\\"操作\\\"\\n      width=\\\"120\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <df-button\\n          @click.native.prevent=\\\"deleteRow(scope.$index, tableData)\\\"\\n          type=\\\"text\\\"\\n          size=\\\"small\\\">\\n          移除\\n        </df-button>\\n      </template>\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    methods: {\\n      deleteRow(index, rows) {\\n        rows.splice(index, 1);\\n      }\\n    },\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-08',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-06',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-07',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(16),_c('p',[_vm._v(\"数据结构比较复杂的时候，可使用多级表头来展现数据的层次关系。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"只需要在 df-table-column 里面嵌套 df-table-column，就可以实现多级表头。\")])]),_c('template',{slot:\"source\"},[_c('df-demo15')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"150\\\">\\n    </df-table-column>\\n    <df-table-column label=\\\"配送信息\\\">\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"120\\\">\\n      </df-table-column>\\n      <df-table-column label=\\\"地址\\\">\\n        <df-table-column\\n          prop=\\\"province\\\"\\n          label=\\\"省份\\\"\\n          width=\\\"120\\\">\\n        </df-table-column>\\n        <df-table-column\\n          prop=\\\"city\\\"\\n          label=\\\"市区\\\"\\n          width=\\\"120\\\">\\n        </df-table-column>\\n        <df-table-column\\n          prop=\\\"address\\\"\\n          label=\\\"地址\\\"\\n          width=\\\"300\\\">\\n        </df-table-column>\\n        <df-table-column\\n          prop=\\\"zip\\\"\\n          label=\\\"邮编\\\"\\n          width=\\\"120\\\">\\n        </df-table-column>\\n      </df-table-column>\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-08',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-06',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }, {\\n          date: '2016-05-07',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(17),_c('p',[_vm._v(\"选择单行数据时使用色块表示。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"Table 组件提供了单选的支持，只需要配置\"),_c('code',[_vm._v(\"highlight-current-row\")]),_vm._v(\"属性即可实现单选。之后由\"),_c('code',[_vm._v(\"current-change\")]),_vm._v(\"事件来管理选中时触发的事件，它会传入\"),_c('code',[_vm._v(\"currentRow\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"oldCurrentRow\")]),_vm._v(\"。如果需要显示索引，可以增加一列\"),_c('code',[_vm._v(\"df-table-column\")]),_vm._v(\"，设置\"),_c('code',[_vm._v(\"type\")]),_vm._v(\"属性为\"),_c('code',[_vm._v(\"index\")]),_vm._v(\"即可显示从 1 开始的索引号。\")])]),_c('template',{slot:\"source\"},[_c('df-demo16')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      ref=\\\"singleTable\\\"\\n      :data=\\\"tableData\\\"\\n      highlight-current-row\\n      @current-change=\\\"handleCurrentChange\\\"\\n      style=\\\"width: 100%\\\">\\n      <df-table-column\\n        type=\\\"index\\\"\\n        width=\\\"50\\\">\\n      </df-table-column>\\n      <df-table-column\\n        property=\\\"date\\\"\\n        label=\\\"日期\\\"\\n        width=\\\"120\\\">\\n      </df-table-column>\\n      <df-table-column\\n        property=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"120\\\">\\n      </df-table-column>\\n      <df-table-column\\n        property=\\\"address\\\"\\n        label=\\\"地址\\\">\\n      </df-table-column>\\n    </df-table>\\n    <div style=\\\"margin-top: 20px\\\">\\n      <df-button @click=\\\"setCurrent(tableData[1])\\\">选中第二行</df-button>\\n      <df-button @click=\\\"setCurrent()\\\">取消选择</df-button>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }],\\n        currentRow: null\\n      }\\n    },\\n\\n    methods: {\\n      setCurrent(row) {\\n        this.$refs.singleTable.setCurrentRow(row);\\n      },\\n      handleCurrentChange(val) {\\n        this.currentRow = val;\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(18),_c('p',[_vm._v(\"选择多行数据时使用 Checkbox。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"实现多选非常简单: 手动添加一个\"),_c('code',[_vm._v(\"df-table-column\")]),_vm._v(\"，设\"),_c('code',[_vm._v(\"type\")]),_vm._v(\"属性为\"),_c('code',[_vm._v(\"selection\")]),_vm._v(\"即可；默认情况下若内容过多会折行显示，若需要单行显示可以使用\"),_c('code',[_vm._v(\"show-overflow-tooltip\")]),_vm._v(\"属性，它接受一个\"),_c('code',[_vm._v(\"Boolean\")]),_vm._v(\"，为\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"时多余的内容会在 hover 时以 tooltip 的形式显示出来。\")])]),_c('template',{slot:\"source\"},[_c('df-demo17')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      ref=\\\"multipleTable\\\"\\n      :data=\\\"tableData\\\"\\n      tooltip-effect=\\\"dark\\\"\\n      style=\\\"width: 100%\\\"\\n      @selection-change=\\\"handleSelectionChange\\\">\\n      <df-table-column\\n        type=\\\"selection\\\"\\n        width=\\\"55\\\">\\n      </df-table-column>\\n      <df-table-column\\n        label=\\\"日期\\\"\\n        width=\\\"120\\\">\\n        <template slot-scope=\\\"scope\\\">{{ scope.row.date }}</template>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"120\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"地址\\\"\\n        show-overflow-tooltip>\\n      </df-table-column>\\n    </df-table>\\n    <div style=\\\"margin-top: 20px\\\">\\n      <df-button @click=\\\"toggleSelection([tableData[1], tableData[2]])\\\">切换第二、第三行的选中状态</df-button>\\n      <df-button @click=\\\"toggleSelection()\\\">取消选择</df-button>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-08',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-06',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-07',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }],\\n        multipleSelection: []\\n      }\\n    },\\n\\n    methods: {\\n      toggleSelection(rows) {\\n        if (rows) {\\n          rows.forEach(row => {\\n            this.$refs.multipleTable.toggleRowSelection(row);\\n          });\\n        } else {\\n          this.$refs.multipleTable.clearSelection();\\n        }\\n      },\\n      handleSelectionChange(val) {\\n        this.multipleSelection = val;\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(19),_c('p',[_vm._v(\"选择单列数据时使用 Checkbox。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"传入\"),_c('code',[_vm._v(\"columnOptions\")]),_vm._v(\"，配置\"),_c('code',[_vm._v(\"multipleConfig\")]),_vm._v(\"以启用表格单列多选。当某一列的任一项的选中状态发生变化时，会派出事件 \"),_c('code',[_vm._v(\"item-checked-changed\")]),_vm._v(\"，携带四个参数，分别是变化处的列的prop、变化处的行的下标、变化后的值和变化处的行信息。\")])]),_c('template',{slot:\"source\"},[_c('df-demo18')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      ref=\\\"multipleTable\\\"\\n      :data=\\\"tableData\\\"\\n      :columnOptions=\\\"columnOptions\\\"\\n      @item-checked-changed=\\\"itemCheckedChanged\\\"\\n      style=\\\"width: 100%\\\">\\n      <df-table-column prop=\\\"date\\\" label=\\\"日期\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"name\\\" label=\\\"姓名\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"age\\\" label=\\\"年龄\\\" width=\\\"180\\\" />\\n      <df-table-column prop=\\\"address\\\" label=\\\"地址\\\" />\\n    </df-table>\\n    <div style=\\\"margin-top: 20px\\\">\\n      <df-button @click=\\\"getCheckedItems('date')\\\">获取日期列已选择项</df-button>\\n      <df-button @click=\\\"getCheckedItems('name')\\\">获取姓名列已选择项</df-button>\\n      <df-button @click=\\\"getCheckedItems('address')\\\">获取地址列已选择项</df-button>\\n      <br><br>\\n      <df-button @click=\\\"setItemChecked('date', tableData[1])\\\">选择日期列的第二项</df-button>\\n      <df-button @click=\\\"setAllItemsChecked('name')\\\">选择姓名列的所有项</df-button>\\n      <df-button @click=\\\"removeAllItemsChecked('address')\\\">取消选择地址列的所有项</df-button>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      columnOptions: {\\n        multipleConfig: {\\n          multipleColumns: [\\n            {\\n              columnProp: 'date',\\n              disableRowsIndex: [2]\\n            },\\n            'name',\\n            'age',\\n            {\\n              columnProp: 'address'\\n            }\\n          ]\\n        }\\n      },\\n      tableData: [\\n        {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          age: '20岁',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        },\\n        {\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          age: '12岁',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        },\\n        {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          age: '34岁',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        },\\n        {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          age: '27岁',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }\\n      ]\\n    }\\n  },\\n  methods: {\\n    itemCheckedChanged (columnProp, index, value, rowData) {\\n      console.log(`${columnProp} 列的第 ${index + 1} 项的 checkbox 选中状态切换到了 ${value}, 切换处的行数据是`, rowData)\\n    },\\n    getCheckedItems (columnProp) {\\n      console.log(this.$refs.multipleTable.getCheckedItems(columnProp))\\n    },\\n    setItemChecked (columnProp, row) {\\n      this.$refs.multipleTable.setItemChecked(columnProp, row, true)\\n    },\\n    setAllItemsChecked (columnProp) {\\n      this.$refs.multipleTable.setAllItemsChecked(columnProp)\\n    },\\n    removeAllItemsChecked (columnProp) {\\n      this.$refs.multipleTable.removeAllItemsChecked(columnProp)\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(20),_c('p',[_vm._v(\"对表格进行排序，可快速查找或对比数据。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"在列中设置\"),_c('code',[_vm._v(\"sortable\")]),_vm._v(\"属性即可实现以该列为基准的排序，接受一个\"),_c('code',[_vm._v(\"Boolean\")]),_vm._v(\"，默认为\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"。可以通过 Table 的\"),_c('code',[_vm._v(\"default-sort\")]),_vm._v(\"属性设置默认的排序列和排序顺序。可以使用\"),_c('code',[_vm._v(\"sort-method\")]),_vm._v(\"或者\"),_c('code',[_vm._v(\"sort-by\")]),_vm._v(\"使用自定义的排序规则。如果需要后端排序，需将\"),_c('code',[_vm._v(\"sortable\")]),_vm._v(\"设置为\"),_c('code',[_vm._v(\"custom\")]),_vm._v(\"，同时在 Table 上监听\"),_c('code',[_vm._v(\"sort-change\")]),_vm._v(\"事件，在事件回调中可以获取当前排序的字段名和排序顺序，从而向接口请求排序后的表格数据。在本例中，我们还使用了\"),_c('code',[_vm._v(\"formatter\")]),_vm._v(\"属性，它用于格式化指定列的值，接受一个\"),_c('code',[_vm._v(\"Function\")]),_vm._v(\"，会传入两个参数：\"),_c('code',[_vm._v(\"row\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"column\")]),_vm._v(\"，可以根据自己的需求进行处理。\")])]),_c('template',{slot:\"source\"},[_c('df-demo19')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    :default-sort = \\\"{prop: 'date', order: 'descending'}\\\"\\n    >\\n    <df-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      sortable\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      sortable\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\"\\n      :formatter=\\\"formatter\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }]\\n      }\\n    },\\n    methods: {\\n      formatter(row, column) {\\n        return row.address;\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(21),_c('p',[_vm._v(\"对表格进行筛选，可快速查找到自己想看的数据。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"在列中设置\"),_c('code',[_vm._v(\"filters\")]),_vm._v(\" \"),_c('code',[_vm._v(\"filter-method\")]),_vm._v(\"属性即可开启该列的筛选，filters 是一个数组，\"),_c('code',[_vm._v(\"filter-method\")]),_vm._v(\"是一个方法，它用于决定某些数据是否显示，会传入三个参数：\"),_c('code',[_vm._v(\"value\")]),_vm._v(\", \"),_c('code',[_vm._v(\"row\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"column\")]),_vm._v(\"。也可以通过配置属性\"),_c('code',[_vm._v(\"use-input-filter\")]),_vm._v(\"来启用 input 框模式的筛选，参见下面\"),_c('code',[_vm._v(\"地址\")]),_vm._v(\"列的筛选示例。\")])]),_c('template',{slot:\"source\"},[_c('df-demo20')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-button @click=\\\"resetDateFilter\\\">清除日期过滤器</df-button>\\n    <df-button @click=\\\"clearFilter\\\">清除所有过滤器</df-button>\\n    <df-table\\n      ref=\\\"filterTable\\\"\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%\\\">\\n      <df-table-column\\n        prop=\\\"date\\\"\\n        label=\\\"日期\\\"\\n        sortable\\n        width=\\\"180\\\"\\n        column-key=\\\"date\\\"\\n        :filters=\\\"[{text: '2016-05-01', value: '2016-05-01'}, {text: '2016-05-02', value: '2016-05-02'}, {text: '2016-05-03', value: '2016-05-03'}, {text: '2016-05-04', value: '2016-05-04'}]\\\"\\n        :filter-method=\\\"filterHandler\\\"\\n      >\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"地址\\\"\\n        :filter-method=\\\"filterAddress\\\"\\n        use-input-filter\\n        >\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"tag\\\"\\n        label=\\\"标签\\\"\\n        width=\\\"100\\\"\\n        :filters=\\\"[{ text: '家', value: '家' }, { text: '公司', value: '公司' }]\\\"\\n        :filter-method=\\\"filterTag\\\"\\n        filter-placement=\\\"bottom-end\\\">\\n        <template slot-scope=\\\"scope\\\">\\n          <df-tag\\n            :type=\\\"scope.row.tag === '家' ? 'primary' : 'success'\\\"\\n            disable-transitions>{{scope.row.tag}}</df-tag>\\n        </template>\\n      </df-table-column>\\n    </df-table>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1 弄',\\n          tag: '家'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 2 弄',\\n          tag: '公司'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 3 弄',\\n          tag: '家'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 4 弄',\\n          tag: '公司'\\n        }]\\n      }\\n    },\\n    methods: {\\n      resetDateFilter () {\\n        this.$refs.filterTable.clearFilter('date')\\n      },\\n      clearFilter () {\\n        this.$refs.filterTable.clearFilter()\\n      },\\n      filterTag (value, row) {\\n        return row.tag === value\\n      },\\n      filterAddress (value, row, column) {\\n        const property = column.property\\n        return row[property].includes(value)\\n      },\\n      filterHandler (value, row, column) {\\n        const property = column.property\\n        return row[property] === value\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(22),_c('p',[_vm._v(\"自定义列的显示内容，可组合其他组件使用。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过 \"),_c('code',[_vm._v(\"Scoped slot\")]),_vm._v(\" 可以获取到 row, column, $index 和 store（table 内部的状态管理）的数据，用法参考 demo。\")])]),_c('template',{slot:\"source\"},[_c('df-demo21')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      label=\\\"日期\\\"\\n      width=\\\"180\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <i class=\\\"df-icon-time-c-o\\\"></i>\\n        <span style=\\\"margin-left: 10px\\\">{{ scope.row.date }}</span>\\n      </template>\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"姓名\\\"\\n      width=\\\"180\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <df-popover trigger=\\\"hover\\\" placement=\\\"top\\\">\\n          <p>姓名: {{ scope.row.name }}</p>\\n          <p>住址: {{ scope.row.address }}</p>\\n          <div slot=\\\"reference\\\" class=\\\"name-wrapper\\\">\\n            <df-tag size=\\\"medium\\\">{{ scope.row.name }}</df-tag>\\n          </div>\\n        </df-popover>\\n      </template>\\n    </df-table-column>\\n    <df-table-column label=\\\"操作\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <df-button\\n          size=\\\"mini\\\"\\n          @click=\\\"handleEdit(scope.$index, scope.row)\\\">编辑</df-button>\\n        <df-button\\n          size=\\\"mini\\\"\\n          type=\\\"danger\\\"\\n          @click=\\\"handleDelete(scope.$index, scope.row)\\\">删除</df-button>\\n      </template>\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }]\\n      }\\n    },\\n    methods: {\\n      handleEdit(index, row) {\\n        console.log(index, row);\\n      },\\n      handleDelete(index, row) {\\n        console.log(index, row);\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(23),_c('p',[_vm._v(\"当行内容过多并且不想显示横向滚动条时，可以使用 Table 展开行功能。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过设置 type=\\\"expand\\\" 和 \"),_c('code',[_vm._v(\"Scoped slot\")]),_vm._v(\" 可以开启展开行功能，\"),_c('code',[_vm._v(\"df-table-column\")]),_vm._v(\" 的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 \"),_c('code',[_vm._v(\"Scoped slot\")]),_vm._v(\" 相同。\")])]),_c('template',{slot:\"source\"},[_c('df-demo22')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column type=\\\"expand\\\">\\n      <template slot-scope=\\\"props\\\">\\n        <df-form label-position=\\\"left\\\" inline class=\\\"demo-table-expand\\\">\\n          <df-form-item label=\\\"商品名称\\\">\\n            <span>{{ props.row.name }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"所属店铺\\\">\\n            <span>{{ props.row.shop }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"商品 ID\\\">\\n            <span>{{ props.row.id }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"店铺 ID\\\">\\n            <span>{{ props.row.shopId }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"商品分类\\\">\\n            <span>{{ props.row.category }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"店铺地址\\\">\\n            <span>{{ props.row.address }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"商品描述\\\">\\n            <span>{{ props.row.desc }}</span>\\n          </df-form-item>\\n        </df-form>\\n      </template>\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"商品 ID\\\"\\n      prop=\\\"id\\\">\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"商品名称\\\"\\n      prop=\\\"name\\\">\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"描述\\\"\\n      prop=\\\"desc\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<style>\\n  .demo-table-expand {\\n    font-size: 0;\\n  }\\n  .demo-table-expand label {\\n    width: 90px;\\n    color: #99a9bf;\\n  }\\n  .demo-table-expand .df-form-item {\\n    margin-right: 0;\\n    margin-bottom: 0;\\n    width: 50%;\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          id: '12987122',\\n          name: '好滋好味鸡蛋仔',\\n          category: '江浙小吃、小吃零食',\\n          desc: '荷兰优质淡奶，奶香浓而不腻',\\n          address: '上海市普陀区真北路',\\n          shop: '李时珍夫妻店',\\n          shopId: '10333'\\n        }, {\\n          id: '12987123',\\n          name: '好滋好味鸡蛋仔',\\n          category: '江浙小吃、小吃零食',\\n          desc: '荷兰优质淡奶，奶香浓而不腻',\\n          address: '上海市普陀区真北路',\\n          shop: '李时珍夫妻店',\\n          shopId: '10333'\\n        }, {\\n          id: '12987125',\\n          name: '好滋好味鸡蛋仔',\\n          category: '江浙小吃、小吃零食',\\n          desc: '荷兰优质淡奶，奶香浓而不腻',\\n          address: '上海市普陀区真北路',\\n          shop: '李时珍夫妻店',\\n          shopId: '10333'\\n        }, {\\n          id: '12987126',\\n          name: '好滋好味鸡蛋仔',\\n          category: '江浙小吃、小吃零食',\\n          desc: '荷兰优质淡奶，奶香浓而不腻',\\n          address: '上海市普陀区真北路',\\n          shop: '李时珍夫妻店',\\n          shopId: '10333'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_vm._m(24),_vm._m(25),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过设置 expand column 的\"),_c('code',[_vm._v(\"hide-expand-icon\")]),_vm._v(\"属性, 来控制某些行的展开图标隐藏, 这个属性是一个函数, 自带三个参数, 行数据, 列数据和行下标, 通过判断这些参数并最终返回\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"来控制某些行的展开图标隐藏。\")])]),_c('template',{slot:\"source\"},[_c('df-demo23')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column type=\\\"expand\\\" :hide-expand-icon=\\\"hideExpandIcon\\\">\\n      <template slot-scope=\\\"props\\\">\\n        <df-form label-position=\\\"left\\\" inline class=\\\"demo-table-expand\\\">\\n          <df-form-item label=\\\"商品名称\\\">\\n            <span>{{ props.row.name }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"所属店铺\\\">\\n            <span>{{ props.row.shop }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"商品 ID\\\">\\n            <span>{{ props.row.id }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"店铺 ID\\\">\\n            <span>{{ props.row.shopId }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"商品分类\\\">\\n            <span>{{ props.row.category }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"店铺地址\\\">\\n            <span>{{ props.row.address }}</span>\\n          </df-form-item>\\n          <df-form-item label=\\\"商品描述\\\">\\n            <span>{{ props.row.desc }}</span>\\n          </df-form-item>\\n        </df-form>\\n      </template>\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"商品 ID\\\"\\n      prop=\\\"id\\\">\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"商品名称\\\"\\n      prop=\\\"name\\\">\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"描述\\\"\\n      prop=\\\"desc\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<style>\\n  .demo-table-expand {\\n    font-size: 0;\\n  }\\n  .demo-table-expand label {\\n    width: 90px;\\n    color: #99a9bf;\\n  }\\n  .demo-table-expand .df-form-item {\\n    margin-right: 0;\\n    margin-bottom: 0;\\n    width: 50%;\\n  }\\n</style>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      tableData: [{\\n        id: '12987122',\\n        name: '好滋好味鸡蛋仔',\\n        category: '江浙小吃、小吃零食',\\n        desc: '荷兰优质淡奶，奶香浓而不腻',\\n        address: '上海市普陀区真北路',\\n        shop: '李时珍夫妻店',\\n        shopId: '10333'\\n      }, {\\n        id: '12987123',\\n        name: '好滋好味鸡蛋仔',\\n        category: '江浙小吃、小吃零食',\\n        desc: '荷兰优质淡奶，奶香浓而不腻',\\n        address: '上海市普陀区真北路',\\n        shop: '李时珍夫妻店',\\n        shopId: '10333'\\n      }, {\\n        id: '12987125',\\n        name: '好滋好味鸡蛋仔',\\n        category: '江浙小吃、小吃零食',\\n        desc: '荷兰优质淡奶，奶香浓而不腻',\\n        address: '上海市普陀区真北路',\\n        shop: '李时珍夫妻店',\\n        shopId: '10333'\\n      }, {\\n        id: '12987126',\\n        name: '好滋好味鸡蛋仔',\\n        category: '江浙小吃、小吃零食',\\n        desc: '荷兰优质淡奶，奶香浓而不腻',\\n        address: '上海市普陀区真北路',\\n        shop: '李时珍夫妻店',\\n        shopId: '10333'\\n      }]\\n    }\\n  },\\n  methods: {\\n    hideExpandIcon (row, column, rowIndex) {\\n      if (rowIndex === 2) return true\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(26),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"支持树类型的数据的显示。当 row 中包含 \"),_c('code',[_vm._v(\"children\")]),_vm._v(\" 字段时，被视为树形数据。渲染树形数据时，必须要指定 \"),_c('code',[_vm._v(\"row-key\")]),_vm._v(\"。支持子节点数据异步加载。设置 Table 的 \"),_c('code',[_vm._v(\"lazy\")]),_vm._v(\" 属性为 true 与加载函数 \"),_c('code',[_vm._v(\"load\")]),_vm._v(\" 。通过指定 row 中的 \"),_c('code',[_vm._v(\"hasChildren\")]),_vm._v(\" 字段来指定哪些行是包含子节点。\"),_c('code',[_vm._v(\"children\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"hasChildren\")]),_vm._v(\" 都可以通过 \"),_c('code',[_vm._v(\"tree-props\")]),_vm._v(\" 配置。\")])]),_c('template',{slot:\"source\"},[_c('df-demo24')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%;margin-bottom: 20px;\\\"\\n      row-key=\\\"id\\\"\\n      border\\n      use-tree\\n      default-expand-all\\n      :tree-props=\\\"{children: 'children', hasChildren: 'hasChildren'}\\\">\\n      <df-table-column\\n        prop=\\\"date\\\"\\n        label=\\\"日期\\\"\\n        sortable\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        sortable\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"地址\\\">\\n      </df-table-column>\\n    </df-table>\\n\\n    <df-table\\n      :data=\\\"tableData1\\\"\\n      style=\\\"width: 100%\\\"\\n      row-key=\\\"id\\\"\\n      border\\n      use-tree\\n      lazy\\n      :load=\\\"load\\\"\\n      :tree-props=\\\"{children: 'children', hasChildren: 'hasChildren'}\\\">\\n      <df-table-column\\n        prop=\\\"date\\\"\\n        label=\\\"日期\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"地址\\\">\\n      </df-table-column>\\n    </df-table>\\n  </div>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          id: 1,\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          id: 2,\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          id: 3,\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄',\\n          children: [{\\n              id: 31,\\n              date: '2016-05-01',\\n              name: '李时珍',\\n              address: '四川省武当山普陀区金沙江路 1519 弄'\\n            }, {\\n              id: 32,\\n              date: '2016-05-01',\\n              name: '李时珍',\\n              address: '四川省武当山普陀区金沙江路 1519 弄'\\n          }]\\n        }, {\\n          id: 4,\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }],\\n        tableData1: [{\\n          id: 1,\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          id: 2,\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          id: 3,\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄',\\n          hasChildren: true\\n        }, {\\n          id: 4,\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }]\\n      }\\n    },\\n    methods: {\\n      load(tree, treeNode, resolve) {\\n        setTimeout(() => {\\n          resolve([\\n            {\\n              id: 31,\\n              date: '2016-05-01',\\n              name: '李时珍',\\n              address: '四川省武当山普陀区金沙江路 1519 弄'\\n            }, {\\n              id: 32,\\n              date: '2016-05-01',\\n              name: '李时珍',\\n              address: '四川省武当山普陀区金沙江路 1519 弄'\\n            }\\n          ])\\n        }, 1000)\\n      }\\n    },\\n  }\\n</script>\\n\")])])])],2),_vm._m(27),_c('p',[_vm._v(\"表头支持自定义。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过设置 \"),_c('a',{attrs:{\"href\":\"https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD\"}},[_vm._v(\"Scoped slot\")]),_vm._v(\" 来自定义表头。\")])]),_c('template',{slot:\"source\"},[_c('df-demo25')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      label=\\\"Date\\\"\\n      prop=\\\"date\\\">\\n    </df-table-column>\\n    <df-table-column\\n      label=\\\"Name\\\"\\n      prop=\\\"name\\\">\\n    </df-table-column>\\n    <df-table-column\\n      align=\\\"right\\\">\\n      <template slot=\\\"header\\\" slot-scope=\\\"scope\\\">\\n        <df-input\\n          v-model=\\\"search\\\"\\n          size=\\\"mini\\\"\\n          placeholder=\\\"输入关键字搜索\\\"/>\\n      </template>\\n      <template slot-scope=\\\"scope\\\">\\n        <df-button\\n          size=\\\"mini\\\"\\n          @click=\\\"handleEdit(scope.$index, scope.row)\\\">Edit</df-button>\\n        <df-button\\n          size=\\\"mini\\\"\\n          type=\\\"danger\\\"\\n          @click=\\\"handleDelete(scope.$index, scope.row)\\\">Delete</df-button>\\n      </template>\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1518 弄'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1517 弄'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1519 弄'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          address: '四川省武当山普陀区金沙江路 1516 弄'\\n        }],\\n        search: ''\\n      }\\n    },\\n    methods: {\\n      handleEdit(index, row) {\\n        console.log(index, row);\\n      },\\n      handleDelete(index, row) {\\n        console.log(index, row);\\n      }\\n    },\\n  }\\n</script>\\n\")])])])],2),_vm._m(28),_c('p',[_vm._v(\"若表格展示的是各类数字，可以在表尾显示各列的合计。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"将\"),_c('code',[_vm._v(\"show-summary\")]),_vm._v(\"设置为\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"就会在表格尾部展示合计行。默认情况下，对于合计行，第一列不进行数据求合操作，而是显示「合计」二字（可通过\"),_c('code',[_vm._v(\"sum-text\")]),_vm._v(\"配置），其余列会将本列所有数值进行求合操作，并显示出来。当然，你也可以定义自己的合计逻辑。使用\"),_c('code',[_vm._v(\"summary-method\")]),_vm._v(\"并传入一个方法，返回一个数组，这个数组中的各项就会显示在合计行的各列中，具体可以参考本例中的第二个表格。你也可以使用自定义合计行插槽，来定制合计行的要展示的内容，具体可以参考本例中的第三个表格。\")])]),_c('template',{slot:\"source\"},[_c('df-demo26')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      border\\n      show-summary\\n      style=\\\"width: 100%\\\">\\n      <df-table-column\\n        prop=\\\"id\\\"\\n        label=\\\"ID\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount1\\\"\\n        sortable\\n        label=\\\"数值 1\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount2\\\"\\n        sortable\\n        label=\\\"数值 2\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount3\\\"\\n        sortable\\n        label=\\\"数值 3\\\">\\n      </df-table-column>\\n    </df-table>\\n\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      border\\n      height=\\\"200\\\"\\n      :summary-method=\\\"getSummaries\\\"\\n      show-summary\\n      style=\\\"width: 100%; margin-top: 20px\\\">\\n      <df-table-column\\n        prop=\\\"id\\\"\\n        label=\\\"ID\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount1\\\"\\n        label=\\\"数值 1（元）\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount2\\\"\\n        label=\\\"数值 2（元）\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount3\\\"\\n        label=\\\"数值 3（元）\\\">\\n      </df-table-column>\\n    </df-table>\\n\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      border\\n      show-summary\\n      style=\\\"width: 100%; margin-top: 20px\\\">\\n      <df-table-column\\n        prop=\\\"id\\\"\\n        label=\\\"ID\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount1\\\"\\n        sortable\\n        label=\\\"数值 1\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount2\\\"\\n        sortable\\n        label=\\\"数值 2\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount3\\\"\\n        sortable\\n        label=\\\"数值 3\\\">\\n      </df-table-column>\\n      <div slot=\\\"customSummary\\\" class=\\\"custom-summary\\\">自定义求和（在这里进行任何布局）</div>\\n    </df-table>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          id: '12987122',\\n          name: '李时珍',\\n          amount1: '234',\\n          amount2: '3.2',\\n          amount3: 10\\n        }, {\\n          id: '12987123',\\n          name: '李时珍',\\n          amount1: '165',\\n          amount2: '4.43',\\n          amount3: 12\\n        }, {\\n          id: '12987124',\\n          name: '李时珍',\\n          amount1: '324',\\n          amount2: '1.9',\\n          amount3: 9\\n        }, {\\n          id: '12987125',\\n          name: '李时珍',\\n          amount1: '621',\\n          amount2: '2.2',\\n          amount3: 17\\n        }, {\\n          id: '12987126',\\n          name: '李时珍',\\n          amount1: '539',\\n          amount2: '4.1',\\n          amount3: 15\\n        }]\\n      };\\n    },\\n    methods: {\\n      getSummaries(param) {\\n        const { columns, data } = param;\\n        const sums = [];\\n        columns.forEach((column, index) => {\\n          if (index === 0) {\\n            sums[index] = '总价';\\n            return;\\n          }\\n          const values = data.map(item => Number(item[column.property]));\\n          if (!values.every(value => isNaN(value))) {\\n            sums[index] = values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n            sums[index] += ' 元';\\n          } else {\\n            sums[index] = 'N/A';\\n          }\\n        });\\n\\n        return sums;\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(29),_c('p',[_vm._v(\"多行或多列共用一个数据时，可以合并行或列。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过给\"),_c('code',[_vm._v(\"table\")]),_vm._v(\"传入\"),_c('code',[_vm._v(\"span-method\")]),_vm._v(\"方法可以实现合并行或列，方法的参数是一个对象，里面包含当前行\"),_c('code',[_vm._v(\"row\")]),_vm._v(\"、当前列\"),_c('code',[_vm._v(\"column\")]),_vm._v(\"、当前行号\"),_c('code',[_vm._v(\"rowIndex\")]),_vm._v(\"、当前列号\"),_c('code',[_vm._v(\"columnIndex\")]),_vm._v(\"四个属性。该函数可以返回一个包含两个元素的数组，第一个元素代表\"),_c('code',[_vm._v(\"rowspan\")]),_vm._v(\"，第二个元素代表\"),_c('code',[_vm._v(\"colspan\")]),_vm._v(\"。 也可以返回一个键名为\"),_c('code',[_vm._v(\"rowspan\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"colspan\")]),_vm._v(\"的对象。\")])]),_c('template',{slot:\"source\"},[_c('df-demo27')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      :span-method=\\\"arraySpanMethod\\\"\\n      border\\n      style=\\\"width: 100%\\\">\\n      <df-table-column\\n        prop=\\\"id\\\"\\n        label=\\\"ID\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount1\\\"\\n        sortable\\n        label=\\\"数值 1\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount2\\\"\\n        sortable\\n        label=\\\"数值 2\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount3\\\"\\n        sortable\\n        label=\\\"数值 3\\\">\\n      </df-table-column>\\n    </df-table>\\n\\n    <df-table\\n      :data=\\\"tableData\\\"\\n      :span-method=\\\"objectSpanMethod\\\"\\n      border\\n      style=\\\"width: 100%; margin-top: 20px\\\">\\n      <df-table-column\\n        prop=\\\"id\\\"\\n        label=\\\"ID\\\"\\n        width=\\\"180\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"姓名\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount1\\\"\\n        label=\\\"数值 1（元）\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount2\\\"\\n        label=\\\"数值 2（元）\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"amount3\\\"\\n        label=\\\"数值 3（元）\\\">\\n      </df-table-column>\\n    </df-table>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          id: '12987122',\\n          name: '李时珍',\\n          amount1: '234',\\n          amount2: '3.2',\\n          amount3: 10\\n        }, {\\n          id: '12987123',\\n          name: '李时珍',\\n          amount1: '165',\\n          amount2: '4.43',\\n          amount3: 12\\n        }, {\\n          id: '12987124',\\n          name: '李时珍',\\n          amount1: '324',\\n          amount2: '1.9',\\n          amount3: 9\\n        }, {\\n          id: '12987125',\\n          name: '李时珍',\\n          amount1: '621',\\n          amount2: '2.2',\\n          amount3: 17\\n        }, {\\n          id: '12987126',\\n          name: '李时珍',\\n          amount1: '539',\\n          amount2: '4.1',\\n          amount3: 15\\n        }]\\n      };\\n    },\\n    methods: {\\n      arraySpanMethod({ row, column, rowIndex, columnIndex }) {\\n        if (rowIndex % 2 === 0) {\\n          if (columnIndex === 0) {\\n            return [1, 2];\\n          } else if (columnIndex === 1) {\\n            return [0, 0];\\n          }\\n        }\\n      },\\n\\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {\\n        if (columnIndex === 0) {\\n          if (rowIndex % 2 === 0) {\\n            return {\\n              rowspan: 2,\\n              colspan: 1\\n            };\\n          } else {\\n            return {\\n              rowspan: 0,\\n              colspan: 0\\n            };\\n          }\\n        }\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(30),_vm._m(31),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过给 \"),_c('code',[_vm._v(\"type=index\")]),_vm._v(\" 的列传入 \"),_c('code',[_vm._v(\"index\")]),_vm._v(\" 属性，可以自定义索引。该属性传入数字时，将作为索引的起始值。也可以传入一个方法，它提供当前行的行号（从 \"),_c('code',[_vm._v(\"0\")]),_vm._v(\" 开始）作为参数，返回值将作为索引展示。\")])]),_c('template',{slot:\"source\"},[_c('df-demo28')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <df-table-column\\n      type=\\\"index\\\"\\n      :index=\\\"indexMethod\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"姓名\\\"\\n      width=\\\"180\\\">\\n    </df-table-column>\\n    <df-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"地址\\\">\\n    </df-table-column>\\n  </df-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1518 弄',\\n          zip: 200333,\\n          tag: '家'\\n        }, {\\n          date: '2016-05-04',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1517 弄',\\n          zip: 200333,\\n          tag: '公司'\\n        }, {\\n          date: '2016-05-01',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1519 弄',\\n          zip: 200333,\\n          tag: '家'\\n        }, {\\n          date: '2016-05-03',\\n          name: '李时珍',\\n          province: '上海',\\n          city: '普陀区',\\n          address: '四川省武当山普陀区金沙江路 1516 弄',\\n          zip: 200333,\\n          tag: '公司'\\n        }],\\n      }\\n    },\\n    methods: {\\n      indexMethod(index) {\\n        return index * 2;\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(32),_c('p',[_vm._v(\"使用两个表格拼接成一个表格, 应对特殊业务需求, 一般来讲左边表格负责奇数行, 右边表格负责偶数行, 需要兼顾好左右表格之间的关系, 且某一个表格滚动时, 另一个表格也需要同步滚动同样的距离。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"对于固定高度的需求, 外壳需要设定一个高度css样式, 内层的\"),_c('code',[_vm._v(\"table\")]),_vm._v(\"需要设置属性\"),_c('code',[_vm._v(\"height\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"100%\")]),_vm._v(\", 同时, 需求一般会要求只能显示一个滚动条, 所以我们需要隐藏左边表格的滚动条, 左边的表格设定属性\"),_c('code',[_vm._v(\"hide-scroll-bar\")]),_vm._v(\"即可。另外, 当两侧表格高度不一致时, 需求一般要求补齐缺少的行高, 所以右侧的表格需要设定属性\"),_c('code',[_vm._v(\"supplement-row-height\")]),_vm._v(\", 生效情况是右边的表格数据少于左边的表格数据时。\")])]),_c('template',{slot:\"source\"},[_c('df-demo29')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div style=\\\"display: flex; height: 200px\\\">\\n    <!-- 左侧表格 -->\\n    <df-table\\n      :data=\\\"leftTableData\\\"\\n      hide-scroll-bar\\n      style=\\\"width: 50%\\\"\\n      :column-options=\\\"columnOptions\\\"\\n      @switch-to-editing-slot=\\\"leftSwitchToEditingSlot\\\"\\n      border\\n      @button-click=\\\"leftButtonClick\\\"\\n      height=\\\"100%\\\"\\n      @table-body-scroll=\\\"leftTableBodyScroll\\\"\\n      ref=\\\"leftTable\\\">\\n      <df-table-column\\n        label=\\\"序号\\\"\\n        prop=\\\"index\\\"\\n        width=\\\"50\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yaoPinMc\\\"\\n        label=\\\"药品名称\\\"\\n        width=\\\"80\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.yaoPinMc\\\" :ref=\\\"`left-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"jiLiang\\\"\\n        label=\\\"剂量\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.jiLiang\\\" :ref=\\\"`left-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"danWei\\\"\\n        label=\\\"单位\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.danWei\\\" :ref=\\\"`left-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"biaoZhunJia\\\"\\n        label=\\\"标准价\\\"\\n        width=\\\"70\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yiBaoDengJi\\\"\\n        label=\\\"医保等级\\\">\\n      </df-table-column>\\n      <df-table-column\\n        width=\\\"80\\\"\\n        type=\\\"buttons\\\"\\n        button-type=\\\"icon\\\"\\n        :buttons='[\\\"remove-circle\\\", \\\"add-circle\\\", \\\"down-circle\\\"]'>\\n      </df-table-column>\\n    </df-table>\\n    <!-- 右侧表格 -->\\n    <df-table\\n      :data=\\\"rightTableData\\\"\\n      :supplement-row-height=\\\"rightTableData.length < leftTableData.length\\\"\\n      style=\\\"width: 50%\\\"\\n      :column-options=\\\"columnOptions\\\"\\n      @switch-to-editing-slot=\\\"rightSwitchToEditingSlot\\\"\\n      border\\n      @button-click=\\\"rightButtonClick\\\"\\n      height=\\\"100%\\\"\\n      @table-body-scroll=\\\"rightTableBodyScroll\\\"\\n      ref=\\\"rightTable\\\">\\n      <df-table-column\\n        label=\\\"序号\\\"\\n        prop=\\\"index\\\"\\n        width=\\\"50\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yaoPinMc\\\"\\n        label=\\\"药品名称\\\"\\n        width=\\\"80\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.yaoPinMc\\\" :ref=\\\"`right-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"jiLiang\\\"\\n        label=\\\"剂量\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.jiLiang\\\" :ref=\\\"`right-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"danWei\\\"\\n        label=\\\"单位\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.danWei\\\" :ref=\\\"`right-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"biaoZhunJia\\\"\\n        label=\\\"标准价\\\"\\n        width=\\\"70\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yiBaoDengJi\\\"\\n        label=\\\"医保等级\\\">\\n      </df-table-column>\\n      <df-table-column\\n        width=\\\"80\\\"\\n        type=\\\"buttons\\\"\\n        button-type=\\\"icon\\\"\\n        :buttons='[\\\"remove-circle\\\", \\\"add-circle\\\", \\\"down-circle\\\"]'>\\n      </df-table-column>\\n    </df-table>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      columnOptions: {\\n        editConfig: {\\n          trigger: 'click',\\n          mode: 'slot',\\n          editableColumns: [\\n            'yaoPinMc',\\n            'jiLiang',\\n            'danWei'\\n          ]\\n        }\\n      },\\n      tableData: new Array(10).fill().map((row, rowIndex) => ({\\n        yaoPinMc: `人参${rowIndex + 1}`,\\n        jiLiang: 1,\\n        danWei: 'g',\\n        biaoZhunJia: '0.2011',\\n        shuLiang: 0,\\n        yiBaoDengJi: '二级'\\n      }))\\n    }\\n  },\\n  computed: {\\n    leftTableData () {\\n      return this.tableData\\n        .filter((row, rowIndex) => rowIndex % 2 === 0)\\n        .map((row, rowIndex) => {\\n          return {\\n            index: rowIndex * 2 + 1,\\n            ...row\\n          }\\n        })\\n    },\\n    rightTableData () {\\n      return this.tableData.filter((row, rowIndex) => rowIndex % 2 === 1)\\n        .map((row, rowIndex) => {\\n          return {\\n            index: rowIndex * 2 + 2,\\n            ...row\\n          }\\n        })\\n    }\\n  },\\n  methods: {\\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\\n      this.buttonClick(button, rowIndex * 2)\\n    },\\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\\n      this.buttonClick(button, rowIndex * 2 + 1)\\n    },\\n    buttonClick (button, rowIndex) {\\n      switch (button) {\\n        case 'remove-circle':\\n          this.tableData.splice(rowIndex, 1)\\n          break\\n        case 'add-circle':\\n          this.tableData.push({\\n            yaoPinMc: '',\\n            jiLiang: 1,\\n            danWei: 'g',\\n            biaoZhunJia: '0.2011',\\n            shuLiang: 0,\\n            yiBaoDengJi: '二级'\\n          })\\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\\n          if (this.tableData.length % 2 === 0) {\\n            const addedRowIndex = (this.tableData.length - 2) / 2\\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\\n            this.$nextTick(() => {\\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\\n            })\\n          } else {\\n            const addedRowIndex = (this.tableData.length - 1) / 2\\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\\n            this.$nextTick(() => {\\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\\n            })\\n          }\\n          break\\n        case 'down-circle':\\n          if (rowIndex === this.tableData.length - 1) return\\n          const currentRow = this.tableData[rowIndex]\\n          const nextRow = this.tableData[rowIndex + 1]\\n          this.tableData.splice(rowIndex, 1, nextRow)\\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\\n          break\\n        default:\\n          break\\n      }\\n    },\\n    leftTableBodyScroll (scrollTop) {\\n      this.$refs.rightTable.setTableBodyScrollTop(scrollTop)\\n    },\\n    rightTableBodyScroll (scrollTop) {\\n      this.$refs.leftTable.setTableBodyScrollTop(scrollTop)\\n    },\\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\\n      this.$refs.rightTable.restoreAllEditingSlot()\\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\\n      triggerType === 'click' && this.$nextTick(() => {\\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\\n      })\\n    },\\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\\n      this.$refs.leftTable.restoreAllEditingSlot()\\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\\n      triggerType === 'click' && this.$nextTick(() => {\\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\\n      })\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(33),_c('p',[_vm._v(\"高度不要求固定, 即不需要滚动条, 总高度随着数据的增加自由伸展高度。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"去除外壳的高度css样式和内层\"),_c('code',[_vm._v(\"table\")]),_vm._v(\"的\"),_c('code',[_vm._v(\"height\")]),_vm._v(\"属性即可, 相应的, 所有的关联滚动逻辑也可以去除。\")])]),_c('template',{slot:\"source\"},[_c('df-demo30')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div style=\\\"display: flex\\\">\\n    <!-- 左侧表格 -->\\n    <df-table\\n      :data=\\\"leftTableData\\\"\\n      style=\\\"width: 50%\\\"\\n      :column-options=\\\"columnOptions\\\"\\n      @switch-to-editing-slot=\\\"leftSwitchToEditingSlot\\\"\\n      border\\n      @button-click=\\\"leftButtonClick\\\"\\n      ref=\\\"leftTable\\\">\\n      <df-table-column\\n        label=\\\"序号\\\"\\n        prop=\\\"index\\\"\\n        width=\\\"50\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yaoPinMc\\\"\\n        label=\\\"药品名称\\\"\\n        width=\\\"80\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.yaoPinMc\\\" :ref=\\\"`left-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"jiLiang\\\"\\n        label=\\\"剂量\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.jiLiang\\\" :ref=\\\"`left-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"danWei\\\"\\n        label=\\\"单位\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.danWei\\\" :ref=\\\"`left-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"biaoZhunJia\\\"\\n        label=\\\"标准价\\\"\\n        width=\\\"70\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yiBaoDengJi\\\"\\n        label=\\\"医保等级\\\">\\n      </df-table-column>\\n      <df-table-column\\n        width=\\\"80\\\"\\n        type=\\\"buttons\\\"\\n        button-type=\\\"icon\\\"\\n        :buttons='[\\\"remove-circle\\\", \\\"add-circle\\\", \\\"down-circle\\\"]'>\\n      </df-table-column>\\n    </df-table>\\n    <!-- 右侧表格 -->\\n    <df-table\\n      :data=\\\"rightTableData\\\"\\n      :supplement-row-height=\\\"rightTableData.length < leftTableData.length\\\"\\n      style=\\\"width: 50%\\\"\\n      :column-options=\\\"columnOptions\\\"\\n      @switch-to-editing-slot=\\\"rightSwitchToEditingSlot\\\"\\n      border\\n      @button-click=\\\"rightButtonClick\\\"\\n      ref=\\\"rightTable\\\">\\n      <df-table-column\\n        label=\\\"序号\\\"\\n        prop=\\\"index\\\"\\n        width=\\\"50\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yaoPinMc\\\"\\n        label=\\\"药品名称\\\"\\n        width=\\\"80\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.yaoPinMc\\\" :ref=\\\"`right-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"jiLiang\\\"\\n        label=\\\"剂量\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.jiLiang\\\" :ref=\\\"`right-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"danWei\\\"\\n        label=\\\"单位\\\"\\n        width=\\\"50\\\">\\n        <div slot=\\\"editing\\\" slot-scope=\\\"scope\\\">\\n          <df-input v-model=\\\"scope.row.danWei\\\" :ref=\\\"`right-${scope.column.property}-${scope.$index}`\\\" />\\n        </div>\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"biaoZhunJia\\\"\\n        label=\\\"标准价\\\"\\n        width=\\\"70\\\">\\n      </df-table-column>\\n      <df-table-column\\n        prop=\\\"yiBaoDengJi\\\"\\n        label=\\\"医保等级\\\">\\n      </df-table-column>\\n      <df-table-column\\n        width=\\\"80\\\"\\n        type=\\\"buttons\\\"\\n        button-type=\\\"icon\\\"\\n        :buttons='[\\\"remove-circle\\\", \\\"add-circle\\\", \\\"down-circle\\\"]'>\\n      </df-table-column>\\n    </df-table>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      columnOptions: {\\n        editConfig: {\\n          trigger: 'click',\\n          mode: 'slot',\\n          editableColumns: [\\n            'yaoPinMc',\\n            'jiLiang',\\n            'danWei'\\n          ]\\n        }\\n      },\\n      tableData: new Array(10).fill().map((row, rowIndex) => ({\\n        yaoPinMc: `人参${rowIndex + 1}`,\\n        jiLiang: 1,\\n        danWei: 'g',\\n        biaoZhunJia: '0.2011',\\n        shuLiang: 0,\\n        yiBaoDengJi: '二级'\\n      }))\\n    }\\n  },\\n  computed: {\\n    leftTableData () {\\n      return this.tableData\\n        .filter((row, rowIndex) => rowIndex % 2 === 0)\\n        .map((row, rowIndex) => {\\n          return {\\n            index: rowIndex * 2 + 1,\\n            ...row\\n          }\\n        })\\n    },\\n    rightTableData () {\\n      return this.tableData.filter((row, rowIndex) => rowIndex % 2 === 1)\\n        .map((row, rowIndex) => {\\n          return {\\n            index: rowIndex * 2 + 2,\\n            ...row\\n          }\\n        })\\n    }\\n  },\\n  methods: {\\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\\n      this.buttonClick(button, rowIndex * 2)\\n    },\\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\\n      this.buttonClick(button, rowIndex * 2 + 1)\\n    },\\n    buttonClick (button, rowIndex) {\\n      switch (button) {\\n        case 'remove-circle':\\n          this.tableData.splice(rowIndex, 1)\\n          break\\n        case 'add-circle':\\n          this.tableData.push({\\n            yaoPinMc: '',\\n            jiLiang: 1,\\n            danWei: 'g',\\n            biaoZhunJia: '0.2011',\\n            shuLiang: 0,\\n            yiBaoDengJi: '二级'\\n          })\\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\\n          if (this.tableData.length % 2 === 0) {\\n            const addedRowIndex = (this.tableData.length - 2) / 2\\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\\n            this.$nextTick(() => {\\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\\n            })\\n          } else {\\n            const addedRowIndex = (this.tableData.length - 1) / 2\\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\\n            this.$nextTick(() => {\\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\\n            })\\n          }\\n          break\\n        case 'down-circle':\\n          if (rowIndex === this.tableData.length - 1) return\\n          const currentRow = this.tableData[rowIndex]\\n          const nextRow = this.tableData[rowIndex + 1]\\n          this.tableData.splice(rowIndex, 1, nextRow)\\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\\n          break\\n        default:\\n          break\\n      }\\n    },\\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\\n      this.$refs.rightTable.restoreAllEditingSlot()\\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\\n      triggerType === 'click' && this.$nextTick(() => {\\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\\n      })\\n    },\\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\\n      this.$refs.leftTable.restoreAllEditingSlot()\\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\\n      triggerType === 'click' && this.$nextTick(() => {\\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\\n      })\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(34),_vm._m(35),_vm._m(36),_vm._m(37),_vm._m(38),_vm._m(39),_vm._m(40),_vm._m(41),_vm._m(42),_vm._m(43),_vm._m(44),_vm._m(45),_vm._m(46),_vm._m(47)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('h2',{attrs:{\"id\":\"table-biao-ge\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-biao-ge\"}},[_vm._v(\"¶\")]),_vm._v(\" Table 表格\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"ji-chu-biao-ge\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ji-chu-biao-ge\"}},[_vm._v(\"¶\")]),_vm._v(\" 基础表格\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"da-shu-ju-biao-ge\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#da-shu-ju-biao-ge\"}},[_vm._v(\"¶\")]),_vm._v(\" 大数据表格\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"kong-shu-ju-ti-shi\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#kong-shu-ju-ti-shi\"}},[_vm._v(\"¶\")]),_vm._v(\" 空数据提示\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"lie-xian-yin\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#lie-xian-yin\"}},[_vm._v(\"¶\")]),_vm._v(\" 列显隐\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"an-niu-zu-cao-zuo-lie\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#an-niu-zu-cao-zuo-lie\"}},[_vm._v(\"¶\")]),_vm._v(\" 按钮组操作列\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"xing-geng-duo-cao-zuo-dan-chu-shi\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#xing-geng-duo-cao-zuo-dan-chu-shi\"}},[_vm._v(\"¶\")]),_vm._v(\" 行更多操作（弹出式）\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"dai-an-niu-de-biao-ge\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dai-an-niu-de-biao-ge\"}},[_vm._v(\"¶\")]),_vm._v(\" 带按钮的表格\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"biao-ge-da-xiao\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#biao-ge-da-xiao\"}},[_vm._v(\"¶\")]),_vm._v(\" 表格大小\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"qu-xiao-ban-ma-wen-biao-ge\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#qu-xiao-ban-ma-wen-biao-ge\"}},[_vm._v(\"¶\")]),_vm._v(\" 取消斑马纹表格\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"bu-dai-bian-kuang-biao-ge\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#bu-dai-bian-kuang-biao-ge\"}},[_vm._v(\"¶\")]),_vm._v(\" 不带边框表格\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"dai-zhuang-tai-biao-ge\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dai-zhuang-tai-biao-ge\"}},[_vm._v(\"¶\")]),_vm._v(\" 带状态表格\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"gu-ding-biao-tou\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#gu-ding-biao-tou\"}},[_vm._v(\"¶\")]),_vm._v(\" 固定表头\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"gu-ding-lie\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#gu-ding-lie\"}},[_vm._v(\"¶\")]),_vm._v(\" 固定列\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"gu-ding-lie-he-biao-tou\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#gu-ding-lie-he-biao-tou\"}},[_vm._v(\"¶\")]),_vm._v(\" 固定列和表头\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"liu-ti-gao-du\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#liu-ti-gao-du\"}},[_vm._v(\"¶\")]),_vm._v(\" 流体高度\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"duo-ji-biao-tou\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#duo-ji-biao-tou\"}},[_vm._v(\"¶\")]),_vm._v(\" 多级表头\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"dan-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dan-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 单选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"duo-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#duo-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 多选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"dan-lie-duo-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dan-lie-duo-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 单列多选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"pai-xu\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#pai-xu\"}},[_vm._v(\"¶\")]),_vm._v(\" 排序\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"shai-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shai-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 筛选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zi-ding-yi-lie-mo-ban\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zi-ding-yi-lie-mo-ban\"}},[_vm._v(\"¶\")]),_vm._v(\" 自定义列模板\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zhan-kai-xing\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zhan-kai-xing\"}},[_vm._v(\"¶\")]),_vm._v(\" 展开行\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zhan-kai-xing-yin-cang-mou-xie-zhan-kai-tu-biao\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zhan-kai-xing-yin-cang-mou-xie-zhan-kai-tu-biao\"}},[_vm._v(\"¶\")]),_vm._v(\" 展开行(隐藏某些展开图标)\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"通过\"),_c('code',[_vm._v(\"hide-expand-icon\")]),_vm._v(\"回调函数控制某些展开功能的显隐。\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"shu-xing-shu-ju-yu-lan-jia-zai\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shu-xing-shu-ju-yu-lan-jia-zai\"}},[_vm._v(\"¶\")]),_vm._v(\" 树形数据与懒加载\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zi-ding-yi-biao-tou\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zi-ding-yi-biao-tou\"}},[_vm._v(\"¶\")]),_vm._v(\" 自定义表头\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"biao-wei-he-ji-xing\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#biao-wei-he-ji-xing\"}},[_vm._v(\"¶\")]),_vm._v(\" 表尾合计行\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"he-bing-xing-huo-lie\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#he-bing-xing-huo-lie\"}},[_vm._v(\"¶\")]),_vm._v(\" 合并行或列\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zi-ding-yi-suo-yin\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zi-ding-yi-suo-yin\"}},[_vm._v(\"¶\")]),_vm._v(\" 自定义索引\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"自定义 \"),_c('code',[_vm._v(\"type=index\")]),_vm._v(\" 列的行号。\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"shuang-lie-biao-ge-gu-ding-gao-du\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shuang-lie-biao-ge-gu-ding-gao-du\"}},[_vm._v(\"¶\")]),_vm._v(\" 双列表格(固定高度)\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"shuang-lie-biao-ge-bu-gu-ding-gao-du\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shuang-lie-biao-ge-bu-gu-ding-gao-du\"}},[_vm._v(\"¶\")]),_vm._v(\" 双列表格(不固定高度)\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"table-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" Table Attributes\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"data\")]),_c('td',[_vm._v(\"显示的数据\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"height\")]),_c('td',[_vm._v(\"Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。\")]),_c('td',[_vm._v(\"string/number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"max-height\")]),_c('td',[_vm._v(\"Table 的最大高度。合法的值为数字或者单位为 px 的高度。\")]),_c('td',[_vm._v(\"string/number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"stripe\")]),_c('td',[_vm._v(\"是否为斑马纹 table\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"border\")]),_c('td',[_vm._v(\"是否带有纵向边框\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"size\")]),_c('td',[_vm._v(\"Table 的尺寸\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"medium / small / mini\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"fit\")]),_c('td',[_vm._v(\"列的宽度是否自撑开\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"show-header\")]),_c('td',[_vm._v(\"是否显示表头\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"highlight-current-row\")]),_c('td',[_vm._v(\"是否要高亮当前行\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"current-row-key\")]),_c('td',[_vm._v(\"当前行的 key，只写属性\")]),_c('td',[_vm._v(\"String,Number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"row-class-name\")]),_c('td',[_vm._v(\"行的 className 的回调方法，也可以使用字符串为所有行设置一个固定的 className。\")]),_c('td',[_vm._v(\"Function({row, rowIndex})/String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"row-style\")]),_c('td',[_vm._v(\"行的 style 的回调方法，也可以使用一个固定的 Object 为所有行设置一样的 Style。\")]),_c('td',[_vm._v(\"Function({row, rowIndex})/Object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"cell-class-name\")]),_c('td',[_vm._v(\"单元格的 className 的回调方法，也可以使用字符串为所有单元格设置一个固定的 className。\")]),_c('td',[_vm._v(\"Function({row, column, rowIndex, columnIndex})/String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"cell-style\")]),_c('td',[_vm._v(\"单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有单元格设置一样的 Style。\")]),_c('td',[_vm._v(\"Function({row, column, rowIndex, columnIndex})/Object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"header-row-class-name\")]),_c('td',[_vm._v(\"表头行的 className 的回调方法，也可以使用字符串为所有表头行设置一个固定的 className。\")]),_c('td',[_vm._v(\"Function({row, rowIndex})/String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"header-row-style\")]),_c('td',[_vm._v(\"表头行的 style 的回调方法，也可以使用一个固定的 Object 为所有表头行设置一样的 Style。\")]),_c('td',[_vm._v(\"Function({row, rowIndex})/Object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"header-cell-class-name\")]),_c('td',[_vm._v(\"表头单元格的 className 的回调方法，也可以使用字符串为所有表头单元格设置一个固定的 className。\")]),_c('td',[_vm._v(\"Function({row, column, rowIndex, columnIndex})/String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"header-cell-style\")]),_c('td',[_vm._v(\"表头单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有表头单元格设置一样的 Style。\")]),_c('td',[_vm._v(\"Function({row, column, rowIndex, columnIndex})/Object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"row-key\")]),_c('td',[_vm._v(\"行数据的 Key，用来优化 Table 的渲染；在使用 reserve-selection 功能与显示树形数据时，该属性是必填的。类型为 String 时，支持多层访问：\"),_c('code',[_vm._v(\"user.info.id\")]),_vm._v(\"，但不支持 \"),_c('code',[_vm._v(\"user.info[0].id\")]),_vm._v(\"，此种情况请使用 \"),_c('code',[_vm._v(\"Function\")]),_vm._v(\"。\")]),_c('td',[_vm._v(\"Function(row)/String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"empty-text\")]),_c('td',[_vm._v(\"空数据时显示的文本内容，也可以通过 \"),_c('code',[_vm._v(\"slot=\\\"empty\\\"\")]),_vm._v(\" 设置\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"暂无数据\")])]),_c('tr',[_c('td',[_vm._v(\"no-empty-img\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 空数据时不信啊是图片提示\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"default-expand-all\")]),_c('td',[_vm._v(\"是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"expand-row-keys\")]),_c('td',[_vm._v(\"可以通过该属性设置 Table 目前的展开行，需要设置 row-key 属性才能使用，该属性为展开行的 keys 数组。\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td')]),_c('tr',[_c('td',[_vm._v(\"default-sort\")]),_c('td',[_vm._v(\"默认的排序列的 prop 和顺序。它的\"),_c('code',[_vm._v(\"prop\")]),_vm._v(\"属性指定默认的排序的列，\"),_c('code',[_vm._v(\"order\")]),_vm._v(\"指定默认排序的顺序\")]),_c('td',[_vm._v(\"Object\")]),_c('td',[_c('code',[_vm._v(\"order\")]),_vm._v(\": ascending, descending\")]),_c('td',[_vm._v(\"如果只指定了\"),_c('code',[_vm._v(\"prop\")]),_vm._v(\", 没有指定\"),_c('code',[_vm._v(\"order\")]),_vm._v(\", 则默认顺序是ascending\")])]),_c('tr',[_c('td',[_vm._v(\"tooltip-effect\")]),_c('td',[_vm._v(\"tooltip \"),_c('code',[_vm._v(\"effect\")]),_vm._v(\" 属性\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"dark/light\")]),_c('td')]),_c('tr',[_c('td',[_vm._v(\"show-summary\")]),_c('td',[_vm._v(\"是否在表尾显示合计行\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"sum-text\")]),_c('td',[_vm._v(\"合计行第一列的文本\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"合计\")])]),_c('tr',[_c('td',[_vm._v(\"summary-method\")]),_c('td',[_vm._v(\"自定义的合计计算方法\")]),_c('td',[_vm._v(\"Function({ columns, data })\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"span-method\")]),_c('td',[_vm._v(\"合并行或列的计算方法\")]),_c('td',[_vm._v(\"Function({ row, column, rowIndex, columnIndex })\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"select-on-indeterminate\")]),_c('td',[_vm._v(\"在多选表格中，当仅有部分行被选中时，点击表头的多选框时的行为。若为 true，则选中所有行；若为 false，则取消选择所有行\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"indent\")]),_c('td',[_vm._v(\"展示树形数据时，树节点的缩进\")]),_c('td',[_vm._v(\"Number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"16\")])]),_c('tr',[_c('td',[_vm._v(\"lazy\")]),_c('td',[_vm._v(\"是否懒加载子节点数据\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"load\")]),_c('td',[_vm._v(\"加载子节点数据的函数，lazy 为 true 时生效，函数第二个参数包含了节点的层级信息\")]),_c('td',[_vm._v(\"Function(row, treeNode, resolve)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"tree-props\")]),_c('td',[_vm._v(\"渲染嵌套数据的配置选项\")]),_c('td',[_vm._v(\"Object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"{ hasChildren: 'hasChildren', children: 'children' }\")])]),_c('tr',[_c('td',[_vm._v(\"need-hide-columns\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 是否需要开启列显隐功能\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"need-toggle-hidden-button\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 开启列显隐功能后是否需要开启显隐控制按钮\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"default-hidden-columns\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 开启列显隐功能后默认隐藏的列\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"tooltip-attrs\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 配置 column 的 show-overflow-tooltip 之后，通过此属性设置 tooltip 的 attributes，请参考 tooltip 的 \"),_c('a',{attrs:{\"href\":\"#/component/tooltip\"}},[_vm._v(\"attributes\")])]),_c('td',[_vm._v(\"Object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"use-tree\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 使用树表格\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"table-events\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-events\"}},[_vm._v(\"¶\")]),_vm._v(\" Table Events\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"事件名\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"select\")]),_c('td',[_vm._v(\"当用户手动勾选数据行的 Checkbox 时触发的事件\")]),_c('td',[_vm._v(\"selection, row\")])]),_c('tr',[_c('td',[_vm._v(\"select-all\")]),_c('td',[_vm._v(\"当用户手动勾选全选 Checkbox 时触发的事件\")]),_c('td',[_vm._v(\"selection\")])]),_c('tr',[_c('td',[_vm._v(\"selection-change\")]),_c('td',[_vm._v(\"当选择项发生变化时会触发该事件\")]),_c('td',[_vm._v(\"selection\")])]),_c('tr',[_c('td',[_vm._v(\"cell-mouse-enter\")]),_c('td',[_vm._v(\"当单元格 hover 进入时会触发该事件\")]),_c('td',[_vm._v(\"row, column, cell, event\")])]),_c('tr',[_c('td',[_vm._v(\"cell-mouse-leave\")]),_c('td',[_vm._v(\"当单元格 hover 退出时会触发该事件\")]),_c('td',[_vm._v(\"row, column, cell, event\")])]),_c('tr',[_c('td',[_vm._v(\"cell-click\")]),_c('td',[_vm._v(\"当某个单元格被点击时会触发该事件\")]),_c('td',[_vm._v(\"row, column, cell, event, rowIndex\")])]),_c('tr',[_c('td',[_vm._v(\"cell-dblclick\")]),_c('td',[_vm._v(\"当某个单元格被双击击时会触发该事件\")]),_c('td',[_vm._v(\"row, column, cell, event\")])]),_c('tr',[_c('td',[_vm._v(\"row-click\")]),_c('td',[_vm._v(\"当某一行被点击时会触发该事件\")]),_c('td',[_vm._v(\"row, column, event, rowIndex\")])]),_c('tr',[_c('td',[_vm._v(\"row-contextmenu\")]),_c('td',[_vm._v(\"当某一行被鼠标右键点击时会触发该事件\")]),_c('td',[_vm._v(\"row, column, event\")])]),_c('tr',[_c('td',[_vm._v(\"row-dblclick\")]),_c('td',[_vm._v(\"当某一行被双击时会触发该事件\")]),_c('td',[_vm._v(\"row, column, event\")])]),_c('tr',[_c('td',[_vm._v(\"header-click\")]),_c('td',[_vm._v(\"当某一列的表头被点击时会触发该事件\")]),_c('td',[_vm._v(\"column, event\")])]),_c('tr',[_c('td',[_vm._v(\"header-contextmenu\")]),_c('td',[_vm._v(\"当某一列的表头被鼠标右键点击时触发该事件\")]),_c('td',[_vm._v(\"column, event\")])]),_c('tr',[_c('td',[_vm._v(\"sort-change\")]),_c('td',[_vm._v(\"当表格的排序条件发生变化的时候会触发该事件\")]),_c('td',[_vm._v(\"{ column, prop, order }\")])]),_c('tr',[_c('td',[_vm._v(\"filter-change\")]),_c('td',[_vm._v(\"当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的 key 是 column 的 columnKey，对应的 value 为用户选择的筛选条件的数组。\")]),_c('td',[_vm._v(\"filters\")])]),_c('tr',[_c('td',[_vm._v(\"current-change\")]),_c('td',[_vm._v(\"当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的 highlight-current-row 属性，参数为：当前选中的 row、上一次选中的 row、row 的切换方式（click: 点击切换、set: 主动调用 setCurrentRow 方法切换、auto: 数据更新时自动切换）\")]),_c('td',[_vm._v(\"currentRow, oldCurrentRow, changeMode\")])]),_c('tr',[_c('td',[_vm._v(\"header-dragend\")]),_c('td',[_vm._v(\"当拖动表头改变了列的宽度的时候会触发该事件\")]),_c('td',[_vm._v(\"newWidth, oldWidth, column, event\")])]),_c('tr',[_c('td',[_vm._v(\"expand-change\")]),_c('td',[_vm._v(\"当用户对某一行展开或者关闭的时候会触发该事件（展开行时，回调的第二个参数为 expandedRows；树形表格时第二参数为 expanded）\")]),_c('td',[_vm._v(\"row, (expandedRows | expanded)\")])]),_c('tr',[_c('td',[_vm._v(\"hidden-status-change\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 当列显隐时触发\")]),_c('td',[_vm._v(\"{ currentHiddenColumns, currentDisplayedColumns }\")])]),_c('tr',[_c('td',[_vm._v(\"edit-disabled\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 开启表格编辑时，想要编辑被禁用的单元格后触发（参数：禁用处的列信息、禁用处的行下标、禁用处的行信息）\")]),_c('td',[_vm._v(\"newVal, rowIndex, row, column\")])]),_c('tr',[_c('td',[_vm._v(\"item-checked-changed\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 开启表格单列多选时时，任一checkbox 的选中状态发生变化时触发（参数：变化处的列的prop、变化处的行的下标、变化后的值和变化处的行信息）\")]),_c('td',[_vm._v(\"columnProp, rowIndex, value, row\")])]),_c('tr',[_c('td',[_vm._v(\"operation-click\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 使用表格行更多操作时，触发任一操作后触发（参数：操作名称、操作在操作组中的下标、操作处的行和操作处的行下标）\")]),_c('td',[_vm._v(\"operation, operationIndex, row, rowIndex\")])]),_c('tr',[_c('td',[_vm._v(\"operation-dblclick\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 使用表格行更多操作时，双击任一操作后触发（参数：操作名称、操作在操作组中的下标、操作处的行和操作处的行下标）\")]),_c('td',[_vm._v(\"operation, operationIndex, row, rowIndex\")])]),_c('tr',[_c('td',[_vm._v(\"button-click\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 使用表格按钮组操作列时，点击按钮组里的按钮时触发（参数：按钮名称、按钮在按钮组中的下标、按钮处的行和按钮处的行下标）\")]),_c('td',[_vm._v(\"button, buttonIndex, row, rowIndex\")])]),_c('tr',[_c('td',[_vm._v(\"button-dblclick\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 使用表格按钮组操作列时，双击按钮组里的按钮时触发（参数：按钮名称、按钮在按钮组中的下标、按钮处的行和按钮处的行下标）\")]),_c('td',[_vm._v(\"button, buttonIndex, row, rowIndex\")])]),_c('tr',[_c('td',[_vm._v(\"table-body-scroll\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 当表格列表发生滚动时触发（参数：竖向滚动坐标和横向滚动坐标）\")]),_c('td',[_vm._v(\"scrollTop, scrollLeft\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"table-methods\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-methods\"}},[_vm._v(\"¶\")]),_vm._v(\" Table Methods\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"方法名\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"clearSelection\")]),_c('td',[_vm._v(\"用于多选表格，清空用户的选择\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"toggleRowSelection\")]),_c('td',[_vm._v(\"用于多选表格，切换某一行的选中状态，如果使用了第二个参数，则是设置这一行选中与否（selected 为 true 则选中）\")]),_c('td',[_vm._v(\"row, selected\")])]),_c('tr',[_c('td',[_vm._v(\"toggleAllSelection\")]),_c('td',[_vm._v(\"用于多选表格，切换所有行的选中状态\")]),_c('td',[_vm._v(\"selected（想要切换至的目标状态, 必须是 boolean 类型）\")])]),_c('tr',[_c('td',[_vm._v(\"toggleRowExpansion\")]),_c('td',[_vm._v(\"用于可展开表格与树形表格，切换某一行的展开状态，如果使用了第二个参数，则是设置这一行展开与否（expanded 为 true 则展开）\")]),_c('td',[_vm._v(\"row, expanded\")])]),_c('tr',[_c('td',[_vm._v(\"setCurrentRow\")]),_c('td',[_vm._v(\"用于单选表格，设定某一行为选中行，如果调用时不加参数，则会取消目前高亮行的选中状态。\")]),_c('td',[_vm._v(\"row\")])]),_c('tr',[_c('td',[_vm._v(\"clearSort\")]),_c('td',[_vm._v(\"用于清空排序条件，数据会恢复成未排序的状态\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"clearFilter\")]),_c('td',[_vm._v(\"不传入参数时用于清空所有过滤条件，数据会恢复成未过滤的状态，也可传入由columnKey组成的数组以清除指定列的过滤条件\")]),_c('td',[_vm._v(\"columnKey\")])]),_c('tr',[_c('td',[_vm._v(\"doLayout\")]),_c('td',[_vm._v(\"对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换为显示时，可能需要调用此方法\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"sort\")]),_c('td',[_vm._v(\"手动对 Table 进行排序。参数\"),_c('code',[_vm._v(\"prop\")]),_vm._v(\"属性指定排序列，\"),_c('code',[_vm._v(\"order\")]),_vm._v(\"指定排序顺序。\")]),_c('td',[_vm._v(\"prop: string, order: string\")])]),_c('tr',[_c('td',[_vm._v(\"openAllTree\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于可展开表格与树形表格，展开所有的树\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"closeAllTree\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于可展开表格与树形表格，关闭所有的树\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"getCheckedItems\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于获取单列多选中某一列的已选择项\")]),_c('td',[_vm._v(\"columnProp\")])]),_c('tr',[_c('td',[_vm._v(\"setItemChecked\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于单列多选中设置某一列的某一行处的选择状态\")]),_c('td',[_vm._v(\"columnProp, row, value\")])]),_c('tr',[_c('td',[_vm._v(\"setAllItemsChecked\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于单列多选中设置某一列的选择状态\")]),_c('td',[_vm._v(\"columnProp\")])]),_c('tr',[_c('td',[_vm._v(\"removeAllItemsChecked\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于单列多选中移除某一列的选择状态\")]),_c('td',[_vm._v(\"columnProp\")])]),_c('tr',[_c('td',[_vm._v(\"setColumnShowStatus\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于列显隐中设置某一列的显隐状态\")]),_c('td',[_vm._v(\"columnProp, showStatus\")])]),_c('tr',[_c('td',[_vm._v(\"toggleColumnShowStatus\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于列显隐中切换某一列的显隐状态\")]),_c('td',[_vm._v(\"columnProp\")])]),_c('tr',[_c('td',[_vm._v(\"setColumnShowList\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 用于列显隐中设置当前显示列的数组\")]),_c('td',[_vm._v(\"array[columnProp, columnProp, ...]\")])]),_c('tr',[_c('td',[_vm._v(\"getCurrentRowOffsetTop\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 获取单选行的位置距离表格顶端的距离，如果想要滚动至此距离，你也可以直接使用下面的 scrollToCurrentRow 方法\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"scrollToCurrentRow\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 滚动至单选行所在位置\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"scrollToRowIndex\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 滚动至行下标所在位置\")]),_c('td',[_vm._v(\"rowIndex\")])]),_c('tr',[_c('td',[_vm._v(\"getTreeRowKeysByLevel\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 获取树表某一层级的rowKeys\")]),_c('td',[_vm._v(\"层级\")])]),_c('tr',[_c('td',[_vm._v(\"setTableBodyScrollTop\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置表格的竖向滚动坐标\")]),_c('td',[_vm._v(\"scrollTop\")])]),_c('tr',[_c('td',[_vm._v(\"setTableBodyScrollLeft\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置表格的横向滚动坐标\")]),_c('td',[_vm._v(\"scrollLeft\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"table-slot\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-slot\"}},[_vm._v(\"¶\")]),_vm._v(\" Table Slot\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"name\")]),_c('th',[_vm._v(\"说明\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"empty\")]),_c('td',[_vm._v(\"自定义空数据展示内容。\")])]),_c('tr',[_c('td',[_vm._v(\"append\")]),_c('td',[_vm._v(\"插入至表格最后一行之后的内容，如果需要对表格的内容进行无限滚动操作，可能需要用到这个 slot。若表格有合计行，该 slot 会位于合计行之上。\")])]),_c('tr',[_c('td',[_vm._v(\"customSummary\")]),_c('td',[_vm._v(\"开启合计行之后，自定义合计行内容。\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"table-column-attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-column-attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" Table-column Attributes\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"type\")]),_c('td',[_vm._v(\"对应列的类型。如果设置了 \"),_c('code',[_vm._v(\"selection\")]),_vm._v(\" 则显示多选框；如果设置了 \"),_c('code',[_vm._v(\"operation\")]),_vm._v(\" 则显示更多操作；如果设置了 \"),_c('code',[_vm._v(\"index\")]),_vm._v(\" 则显示该行的索引（从 1 开始计算）；如果设置了 \"),_c('code',[_vm._v(\"expand\")]),_vm._v(\" 则显示为一个可展开的按钮；如果设置了 \"),_c('code',[_vm._v(\"buttons\")]),_vm._v(\" 则显示为一组按钮组\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"selection/operation/index/expand/buttons\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"index\")]),_c('td',[_vm._v(\"如果设置了 \"),_c('code',[_vm._v(\"type=index\")]),_vm._v(\"，可以通过传递 \"),_c('code',[_vm._v(\"index\")]),_vm._v(\" 属性来自定义索引\")]),_c('td',[_vm._v(\"number, Function(index)\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"column-key\")]),_c('td',[_vm._v(\"column 的 key，如果需要使用 filter-change 事件，则需要此属性标识是哪个 column 的筛选条件\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"label\")]),_c('td',[_vm._v(\"显示的标题\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"prop\")]),_c('td',[_vm._v(\"对应列内容的字段名，也可以使用 property 属性\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"width\")]),_c('td',[_vm._v(\"对应列的宽度\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"min-width\")]),_c('td',[_vm._v(\"对应列的最小宽度，与 width 的区别是 width 是固定的，min-width 会把剩余宽度按比例分配给设置了 min-width 的列\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"fixed\")]),_c('td',[_vm._v(\"列是否固定在左侧或者右侧，true 表示固定在左侧\")]),_c('td',[_vm._v(\"string, boolean\")]),_c('td',[_vm._v(\"true, left, right\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"render-header\")]),_c('td',[_vm._v(\"列标题 Label 区域渲染使用的 Function\")]),_c('td',[_vm._v(\"Function(h, { column, $index })\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"sortable\")]),_c('td',[_vm._v(\"对应列是否可以排序，如果设置为 'custom'，则代表用户希望远程排序，需要监听 Table 的 sort-change 事件\")]),_c('td',[_vm._v(\"boolean, string\")]),_c('td',[_vm._v(\"true, false, 'custom'\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"sort-method\")]),_c('td',[_vm._v(\"对数据进行排序的时候使用的方法，仅当 sortable 设置为 true 的时候有效，需返回一个数字，和 Array.sort 表现一致\")]),_c('td',[_vm._v(\"Function(a, b)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"sort-by\")]),_c('td',[_vm._v(\"指定数据按照哪个属性进行排序，仅当 sortable 设置为 true 且没有设置 sort-method 的时候有效。如果 sort-by 为数组，则先按照第 1 个属性排序，如果第 1 个相等，再按照第 2 个排序，以此类推\")]),_c('td',[_vm._v(\"String/Array/Function(row, index)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"sort-orders\")]),_c('td',[_vm._v(\"数据在排序时所使用排序策略的轮转顺序，仅当 sortable 为 true 时有效。需传入一个数组，随着用户点击表头，该列依次按照数组中元素的顺序进行排序\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"数组中的元素需为以下三者之一：\"),_c('code',[_vm._v(\"ascending\")]),_vm._v(\" 表示升序，\"),_c('code',[_vm._v(\"descending\")]),_vm._v(\" 表示降序，\"),_c('code',[_vm._v(\"null\")]),_vm._v(\" 表示还原为原始顺序\")]),_c('td',[_vm._v(\"['ascending', 'descending', null]\")])]),_c('tr',[_c('td',[_vm._v(\"resizable\")]),_c('td',[_vm._v(\"对应列是否可以通过拖动改变宽度（需要在 df-table 上设置 border 属性为真）\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"formatter\")]),_c('td',[_vm._v(\"用来格式化内容\")]),_c('td',[_vm._v(\"Function(cellValue, row, column, index)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"show-overflow-tooltip\")]),_c('td',[_vm._v(\"当内容过长被隐藏时显示 tooltip\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"align\")]),_c('td',[_vm._v(\"对齐方式\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"left/center/right\")]),_c('td',[_vm._v(\"left\")])]),_c('tr',[_c('td',[_vm._v(\"header-align\")]),_c('td',[_vm._v(\"表头对齐方式，若不设置该项，则使用表格的对齐方式\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"left/center/right\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"class-name\")]),_c('td',[_vm._v(\"列的 className\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"label-class-name\")]),_c('td',[_vm._v(\"当前列标题的自定义类名\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"selectable\")]),_c('td',[_vm._v(\"仅对 type=selection 的列有效，类型为 Function，Function 的返回值用来决定这一行的 CheckBox 是否可以勾选\")]),_c('td',[_vm._v(\"Function(row, index)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"reserve-selection\")]),_c('td',[_vm._v(\"仅对 type=selection 的列有效，类型为 Boolean，为 true 则会在数据更新之后保留之前选中的数据（需指定 \"),_c('code',[_vm._v(\"row-key\")]),_vm._v(\"）\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"filters\")]),_c('td',[_vm._v(\"数据过滤的选项，数组格式，数组中的元素需要有 text 和 value 属性。\")]),_c('td',[_vm._v(\"Array[{ text, value }]\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"filter-placement\")]),_c('td',[_vm._v(\"过滤弹出框的定位\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"与 Tooltip 的 \"),_c('code',[_vm._v(\"placement\")]),_vm._v(\" 属性相同\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"filter-multiple\")]),_c('td',[_vm._v(\"数据过滤的选项是否多选\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"filter-method\")]),_c('td',[_vm._v(\"数据过滤使用的方法，如果是多选的筛选项，对每一条数据会执行多次，任意一次返回 true 就会显示。\")]),_c('td',[_vm._v(\"Function(value, row, column)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"filtered-value\")]),_c('td',[_vm._v(\"选中的数据过滤项，如果需要自定义表头过滤的渲染方式，可能会需要此属性。\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"use-input-filter\")]),_c('td',[_vm._v(\"是否使用 input 框模式的筛选。\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"set-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 动态配置按钮组操作列的按钮组名称，当此项存在时，operations 属性将置为无效\")]),_c('td',[_vm._v(\"Function(row, rowIndex)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 动态配置弹出式操作列的按钮组\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"hidden-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置弹出操作列的操作隐藏\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"loading-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置弹出操作列的操作 loading 状态\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"disabled-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置弹出操作列的操作 disabled 状态\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"hide-on-click\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 是否在弹出操作列点击操作项后隐藏弹出框\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"button-type\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 按钮组操作列的按钮类型\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"text/icon\")]),_c('td',[_vm._v(\"text\")])]),_c('tr',[_c('td',[_vm._v(\"set-buttons\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 动态配置按钮组操作列的按钮组名称，当此项存在时，buttons 属性将置为无效\")]),_c('td',[_vm._v(\"Function(row, rowIndex)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"buttons\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 按钮组操作列的按钮组名称\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"display-buttons-length\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置按钮组操作列的按钮展示数量\")]),_c('td',[_vm._v(\"Number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"2\")])]),_c('tr',[_c('td',[_vm._v(\"hidden-buttons\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置按钮组操作列的按钮隐藏\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"loading-buttons\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置按钮组操作列的按钮 loading 状态\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"disabled-buttons\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置按钮组操作列的按钮 disabled 状态\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"table-column-scoped-slot\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#table-column-scoped-slot\"}},[_vm._v(\"¶\")]),_vm._v(\" Table-column Scoped Slot\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"name\")]),_c('th',[_vm._v(\"说明\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"自定义列的内容，参数为 { row, column, $index }\")])]),_c('tr',[_c('td',[_vm._v(\"header\")]),_c('td',[_vm._v(\"自定义表头的内容. 参数为 { column, $index }\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"columnoptions.multipleconfig-dan-lie-duo-xuan-can-shu-gui-ze\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#columnoptions.multipleconfig-dan-lie-duo-xuan-can-shu-gui-ze\"}},[_vm._v(\"¶\")]),_vm._v(\" columnOptions.multipleConfig 单列多选 参数规则\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"multipleColumns\")]),_c('td',[_vm._v(\"多选列选项\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"item\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"代号\")]),_vm._v(\"/ 这里用 item 表示 multipleColumns 的每一项\")]),_c('td',[_vm._v(\"object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"item > columnProp\")]),_c('td',[_vm._v(\"多选列的 prop\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"item > disableRowsIndex\")]),_c('td',[_vm._v(\"多选列中禁止选择的行的下标，如果你想禁用此列的某一行处的选择功能，把行下标放进去即可\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])])])])\n}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content df-doc\">\n        <h2 id=\"table-biao-ge\"><a class=\"header-anchor\" href=\"#table-biao-ge\">¶</a> Table 表格</h2>\n<p>用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。</p>\n<h3 id=\"ji-chu-biao-ge\"><a class=\"header-anchor\" href=\"#ji-chu-biao-ge\">¶</a> 基础表格</h3>\n<p>基础的表格展示用法。</p>\n<demo-block>\n        <div><p>当<code>df-table</code>元素中注入<code>data</code>对象数组后，在<code>df-table-column</code>中用<code>prop</code>属性来对应对象中的键名即可填入数据，用<code>label</code>属性来定义表格的列名。可以使用<code>width</code>属性来定义列宽。</p>\n</div>\n        <template slot=\"source\"><df-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">  &lt;template&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;date&quot;\n        label=&quot;日期&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;address&quot;\n        label=&quot;地址&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/template&gt;\n\n  &lt;script&gt;\n    export default {\n      data() {\n        return {\n          tableData: [{\n            date: '2016-05-02',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1518 弄'\n          }, {\n            date: '2016-05-04',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1517 弄'\n          }, {\n            date: '2016-05-01',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1519 弄'\n          }, {\n            date: '2016-05-03',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1516 弄'\n          }]\n        }\n      }\n    }\n  &lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"da-shu-ju-biao-ge\"><a class=\"header-anchor\" href=\"#da-shu-ju-biao-ge\">¶</a> 大数据表格</h3>\n<p>大数据表格展示用法。</p>\n<demo-block>\n        <div><p>当<code>df-table</code>元素中注入<code>data</code>对象数组后，在<code>df-table-column</code>中用<code>prop</code>属性来对应对象中的键名即可填入数据，用<code>label</code>属性来定义表格的列名。可以使用<code>width</code>属性来定义列宽。</p>\n</div>\n        <template slot=\"source\"><df-demo1 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">  &lt;template&gt;\n    &lt;df-table\n      useVirtual\n      :data=&quot;tableData&quot;\n      height='400px'\n      style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column\n        type=&quot;index&quot;\n        width=&quot;80&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;date&quot;\n        label=&quot;日期&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;address&quot;\n        label=&quot;地址&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/template&gt;\n\n  &lt;script&gt;\n    export default {\n      data() {\n        return {\n          \n          tableData: Array.from({length: 100}, () =&gt; ({\n            date: '2016-05-02',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1518 弄'\n          }))\n        }\n      }\n    }\n  &lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"kong-shu-ju-ti-shi\"><a class=\"header-anchor\" href=\"#kong-shu-ju-ti-shi\">¶</a> 空数据提示</h3>\n<p>当表格没有数据时，可定制为空提示。</p>\n<demo-block>\n        <div><p>使用<code>empty-text</code>属性可以自定义数据为空时的文本提示内容，也可以通过插槽<code>slot=&quot;empty&quot;</code>来定制更加自定义的提示区域。</p>\n</div>\n        <template slot=\"source\"><df-demo2 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;div class=&quot;demonstration&quot;&gt;自定义文本提示&lt;/div&gt;\n    &lt;df-table\n      :data=&quot;[]&quot;\n      style=&quot;width: 100%&quot;\n      empty-text=&quot;这里没有数据了&quot;&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; width=&quot;1800&quot; /&gt;\n    &lt;/df-table&gt;\n    &lt;div class=&quot;demonstration&quot;&gt;需要图片提示&lt;/div&gt;\n    &lt;df-table\n      :data=&quot;[]&quot;\n      style=&quot;width: 100%&quot;\n      :no-empty-img=&quot;false&quot;&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; width=&quot;1800&quot; /&gt;\n    &lt;/df-table&gt;\n    &lt;div class=&quot;demonstration&quot;&gt;自定义提示区域&lt;/div&gt;\n    &lt;df-table\n      :data=&quot;[]&quot;\n      style=&quot;width: 100%&quot;&gt;\n      &lt;template slot=&quot;empty&quot;&gt;\n        &lt;div class=&quot;custom-empty-block&quot;&gt;真的没有数据了&lt;/div&gt;\n      &lt;/template&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; width=&quot;1800&quot; /&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n</code></pre></template></demo-block><h3 id=\"lie-xian-yin\"><a class=\"header-anchor\" href=\"#lie-xian-yin\">¶</a> 列显隐</h3>\n<p>切换表格某一列的显示和隐藏。</p>\n<demo-block>\n        <div><p>设置<code>needHideColumns</code>属性即可开启列显隐功能，配置<code>default-hidden-columns</code>以设置默认隐藏的列，此属性是一个数组，元素为列对应的<code>prop</code>属性，当某一列的显隐发现变化时，<code>df-table</code>将外派事件 <code>hidden-status-change</code>，携带一个<code>Object</code>类型参数，包括了变化的信息。</p>\n</div>\n        <template slot=\"source\"><df-demo3 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      need-hide-columns\n      :need-toggle-hidden-button=&quot;needToggleHiddenButton&quot;\n      :default-hidden-columns=&quot;defaultHiddenColumns&quot;\n      @hidden-status-change=&quot;hiddenStatusChange&quot;\n      ref=&quot;table&quot;\n      style=&quot;width: 100%; margin-bottom: 20px&quot;&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;150&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;150&quot; /&gt;\n      &lt;df-table-column prop=&quot;gender&quot; label=&quot;性别&quot; width=&quot;150&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n    &lt;/df-table&gt;\n    &lt;df-button @click=&quot;showDate&quot;&gt;显示日期列&lt;/df-button&gt;\n    &lt;df-button @click=&quot;hideDate&quot;&gt;隐藏日期列&lt;/df-button&gt;\n    &lt;df-button @click=&quot;toggleName&quot;&gt;切换姓名列显隐&lt;/df-button&gt;\n    &lt;df-button @click=&quot;toggleButton&quot;&gt;切换控制按钮显隐&lt;/df-button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      needToggleHiddenButton: false,\n      defaultHiddenColumns: ['date'],\n      tableData: [\n        {\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        },\n        {\n          date: '2016-05-02',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        },\n        {\n          date: '2016-05-04',\n          name: '李时珍',\n          gender: '男',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }\n      ]\n    }\n  },\n  methods: {\n    hiddenStatusChange (hiddenStatus) {\n      console.log(hiddenStatus)\n    },\n    showDate () {\n      this.$refs.table.setColumnShowStatus('date', true)\n    },\n    hideDate () {\n      this.$refs.table.setColumnShowStatus('date', false)\n    },\n    toggleName () {\n      this.$refs.table.toggleColumnShowStatus('name')\n    },\n    toggleButton () {\n      this.needToggleHiddenButton = !this.needToggleHiddenButton\n    }\n  }\n}\n&lt;/script&gt;\n\n</code></pre></template></demo-block><h3 id=\"an-niu-zu-cao-zuo-lie\"><a class=\"header-anchor\" href=\"#an-niu-zu-cao-zuo-lie\">¶</a> 按钮组操作列</h3>\n<p>一般用于最后一列的按钮组操作。</p>\n<demo-block>\n        <div><p>手动添加一个<code>df-table-column</code>，设<code>type</code>属性为<code>buttons</code>即可；传入<code>button-type</code>按钮类型为<code>text</code>或<code>icon</code>，再传入按钮组数组，使用 text 时，传入文字，使用 icon 时，传入图标的类型，按钮组可以根据不同情况传入不同的按钮，具体参考第二个示例；当某一按钮被点击时，将会派出事件<code>button-click</code>，携带按钮的详细信息。支持传入<code>hidden-buttons</code>、<code>loading-buttons</code>或<code>disabled-buttons</code>设置某些按钮的隐藏、禁用或加载，需要注意的是<code>hidden-buttons</code>、<code>loading-buttons</code>或<code>disabled-buttons</code>必须通过 Vue 指定的 <a href=\"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B\">数组更新检测</a> 方法来改变值，否则将不能监听其变化。</p>\n</div>\n        <template slot=\"source\"><df-demo4 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin-bottom: 20px&quot;\n      @button-click='buttonClick'&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n      &lt;df-table-column\n        width='200'\n        type=&quot;buttons&quot;\n        button-type='text'\n        :buttons='[&quot;删除&quot;, &quot;创建&quot;, &quot;开单&quot;]'\n        :hidden-buttons='hiddenButtons'\n      /&gt;\n    &lt;/df-table&gt;\n    &lt;df-button @click='hideFirstRowFirstButtons'&gt;隐藏第一行第一个按钮&lt;/df-button&gt;\n    &lt;df-button @click='showFirstRowFirstButtons'&gt;显示第一行第一个按钮&lt;/df-button&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin: 20px 0&quot;\n      @button-click='buttonClick'&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n      &lt;df-table-column\n        width='200'\n        type=&quot;buttons&quot;\n        button-type='text'\n        :set-buttons='setButtons'\n        :loading-buttons='loadingButtons'\n      /&gt;\n    &lt;/df-table&gt;\n    &lt;df-button @click='loadingFirstRowButtons'&gt;设置第一行的按钮组为 loading&lt;/df-button&gt;\n    &lt;df-button @click='unLoadingAllButtons'&gt;清除所有按钮的 loading&lt;/df-button&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin: 20px 0&quot;\n      @button-click='buttonClick'&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n      &lt;df-table-column\n        width='200'\n        type=&quot;buttons&quot;\n        button-type='icon'\n        :buttons='[&quot;add-square&quot;, &quot;reduce-square&quot;, &quot;content&quot;]'\n        :disabled-buttons='disabledButtons'\n      /&gt;\n    &lt;/df-table&gt;\n    &lt;df-button @click='disableFirstRowFirstButtons'&gt;设置第一行第一个按钮为 disabled&lt;/df-button&gt;\n    &lt;df-button @click='enableFirstRowFirstButtons'&gt;清除第一行第一个按钮的 disabled&lt;/df-button&gt;\n    &lt;div style=&quot;margin-top: 20px&quot; class='demonstration'&gt;文字类型按钮组的按钮展示数量有上限，默认展示 2 个，但是可以通过属性 display-buttons-length 配置，超出部分使用弹出方式展示，弹出的按钮支持属性 hide-on-click 配置&lt;/div&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin-top: 20px&quot;\n      @button-click='buttonClick'\n      border&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n      &lt;df-table-column\n        width='200'\n        type=&quot;buttons&quot;\n        button-type='text'\n        :display-buttons-length='3'\n        :hide-on-click='false'\n        :buttons='[&quot;删除&quot;, &quot;创建&quot;, &quot;开单&quot;, &quot;编辑&quot;, &quot;查看&quot;, &quot;更新&quot;]'\n      /&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      tableData: [{\n        date: '2016-05-02',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1518 弄'\n      }, {\n        date: '2016-05-04',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1517 弄'\n      }, {\n        date: '2016-05-01',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1519 弄'\n      }],\n      hiddenButtons: [],\n      loadingButtons: [],\n      disabledButtons: [{buttonIndex: 2, rowIndex: 0}]\n    }\n  },\n  methods: {\n    setButtons (row, rowIndex) {\n      if (rowIndex === 1) return ['删除', '创建', '开单']\n      else return ['编辑', '查看', '更新']\n    },\n    buttonClick (button, buttonIndex, row, rowIndex) {\n      console.log(`第 ${rowIndex + 1} 行的按钮组中的第 ${buttonIndex + 1} 个按钮被点击了，这个按钮名称是 ${button}，这一行的信息是`, row)\n    },\n    hideFirstRowFirstButtons () {\n      this.hiddenButtons.push({buttonIndex: 0, rowIndex: 0})\n    },\n    showFirstRowFirstButtons () {\n      const index = this.hiddenButtons.findIndex(hiddenButton =&gt; hiddenButton.buttonIndex === 0 &amp;&amp; hiddenButton.rowIndex === 0)\n      this.hiddenButtons.splice(index, 1)\n    },\n    loadingFirstRowButtons () {\n      this.loadingButtons.push({buttonIndex: 0, rowIndex: 0}, {buttonIndex: 1, rowIndex: 0}, {buttonIndex: 2, rowIndex: 0})\n    },\n    unLoadingAllButtons () {\n      this.loadingButtons.splice(0, this.loadingButtons.length)\n    },\n    disableFirstRowFirstButtons () {\n      this.disabledButtons.push({buttonIndex: 0, rowIndex: 0})\n    },\n    enableFirstRowFirstButtons () {\n      const index = this.disabledButtons.findIndex(disabledButton =&gt; disabledButton.buttonIndex === 0 &amp;&amp; disabledButton.rowIndex === 0)\n      this.disabledButtons.splice(index, 1)\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"xing-geng-duo-cao-zuo-dan-chu-shi\"><a class=\"header-anchor\" href=\"#xing-geng-duo-cao-zuo-dan-chu-shi\">¶</a> 行更多操作（弹出式）</h3>\n<p>弹起行的更多操作框。</p>\n<demo-block>\n        <div><p>手动添加一个<code>df-table-column</code>，设<code>type</code>属性为<code>operation</code>即可；需要传入<code>operations</code>操作项，操作组可以根据不同情况传入不同的操作，具体参考第二个示例；当某一操作被触发时，将会派出事件<code>operation-click</code>，携带操作的详细信息。支持传入<code>hidden-operations</code>、<code>loading-operations</code>或<code>disabled-operations</code>设置某些按钮的隐藏、禁用或加载，需要注意的是<code>hidden-operations</code>、<code>loading-operations</code>或<code>disabled-operations</code>必须通过 Vue 指定的 <a href=\"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B\">数组更新检测</a> 方法来改变值，否则将不能监听其变化。</p>\n</div>\n        <template slot=\"source\"><df-demo5 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin-bottom: 20px&quot;\n      @operation-click=&quot;operationClick&quot;&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n      &lt;df-table-column\n        type='operation'\n        :operations='[&quot;删除&quot;, &quot;创建&quot;, &quot;开单&quot;]'\n        width='55'\n        :hidden-operations='hiddenOperations'\n      &gt;&lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n    &lt;df-button @click.stop='hideFirstRowFirstOperation'&gt;隐藏第一行第一个操作&lt;/df-button&gt;\n    &lt;df-button @click.stop='showFirstRowFirstOperation'&gt;显示第一行第一个操作&lt;/df-button&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin: 20px 0&quot;\n      @operation-click=&quot;operationClick&quot;&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n      &lt;df-table-column\n        type='operation'\n        :set-operations='setOperations'\n        width='55'\n        :loading-operations='loadingOperations'\n      &gt;&lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n    &lt;df-button @click.stop='loadingFirstRowOperations'&gt;设置第一行的操作组为 loading&lt;/df-button&gt;\n    &lt;df-button @click.stop='unLoadingAllOperations'&gt;清除所有操作的 loading&lt;/df-button&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin: 20px 0&quot;\n      @operation-click=&quot;operationClick&quot;&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n      &lt;df-table-column\n        type='operation'\n        :operations='[&quot;删除&quot;, &quot;创建&quot;, &quot;开单&quot;]'\n        width='55'\n        :disabled-operations='disabledOperations'\n      &gt;&lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n    &lt;df-button @click.stop='disableFirstRowFirstOperation'&gt;设置第一行第一个操作为 disabled&lt;/df-button&gt;\n    &lt;df-button @click.stop='enableFirstRowFirstOperation'&gt;清除第一行第一个操作的 disabled&lt;/df-button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      tableData: [{\n        date: '2016-05-02',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1518 弄'\n      }, {\n        date: '2016-05-04',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1517 弄'\n      }, {\n        date: '2016-05-01',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1519 弄'\n      }],\n      hiddenOperations: [],\n      loadingOperations: [],\n      disabledOperations: [{operationIndex: 2, rowIndex: 0}]\n    }\n  },\n  methods: {\n    setOperations (row, rowIndex) {\n      if (rowIndex === 1) return ['删除', '创建', '开单']\n      else return ['编辑', '查看', '更新']\n    },\n    operationClick (operation, operationIndex, row, rowIndex) {\n      console.log(`第 ${rowIndex + 1} 行的弹出操作组中的第 ${operationIndex + 1} 个操作被点击了，这个操作名称是 ${operation}，这一行的信息是`, row)\n    },\n    hideFirstRowFirstOperation () {\n      this.hiddenOperations.push({operationIndex: 0, rowIndex: 0})\n    },\n    showFirstRowFirstOperation () {\n      const index = this.hiddenOperations.findIndex(hiddenOperation =&gt; hiddenOperation.operationIndex === 0 &amp;&amp; hiddenOperation.rowIndex === 0)\n      this.hiddenOperations.splice(index, 1)\n    },\n    loadingFirstRowOperations () {\n      this.loadingOperations.push({operationIndex: 0, rowIndex: 0}, {operationIndex: 1, rowIndex: 0}, {operationIndex: 2, rowIndex: 0})\n    },\n    unLoadingAllOperations () {\n      this.loadingOperations.splice(0, this.loadingOperations.length)\n    },\n    disableFirstRowFirstOperation () {\n      this.disabledOperations.push({operationIndex: 0, rowIndex: 0})\n    },\n    enableFirstRowFirstOperation () {\n      const index = this.disabledOperations.findIndex(disabledOperation =&gt; disabledOperation.operationIndex === 0 &amp;&amp; disabledOperation.rowIndex === 0)\n      this.disabledOperations.splice(index, 1)\n    }\n  }\n}\n&lt;/script&gt;\n\n\n</code></pre></template></demo-block><h3 id=\"dai-an-niu-de-biao-ge\"><a class=\"header-anchor\" href=\"#dai-an-niu-de-biao-ge\">¶</a> 带按钮的表格</h3>\n<demo-block>\n        <div><p>因为table表格的 <code>宽度</code> 是自适应的,所以若要插入按钮,请使用小号的按钮,或者文字按钮，用法参考 demo。</p>\n</div>\n        <template slot=\"source\"><df-demo6 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      label=&quot;日期&quot;\n      width=&quot;180&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;span&gt;{{ scope.row.date }}&lt;/span&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;姓名&quot;\n      width=&quot;180&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;span&gt;{{ scope.row.name }}&lt;/span&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column label=&quot;操作&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;df-button @click=&quot;handleClick(scope.row)&quot; type=&quot;text&quot; size=&quot;small&quot;&gt;查看&lt;/df-button&gt;\n        &lt;df-button type=&quot;text&quot; size=&quot;small&quot;@click=&quot;handleDelete&quot;&gt;删除&lt;/df-button&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      handleClick(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"biao-ge-da-xiao\"><a class=\"header-anchor\" href=\"#biao-ge-da-xiao\">¶</a> 表格大小</h3>\n<p>Table 组件提供了三种尺寸，可以在不同场景下选择合适的按钮尺寸。</p>\n<demo-block>\n        <div><p>额外的尺寸：<code>medium</code>、<code>small</code>、<code>mini</code>，通过设置<code>size</code>属性来配置它们。</p>\n</div>\n        <template slot=\"source\"><df-demo7 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-radio-group v-model=&quot;labelSize&quot; size=&quot;small&quot;&gt;\n      &lt;df-radio-button label=&quot;medium&quot;&gt;&lt;/df-radio-button&gt;\n      &lt;df-radio-button label=&quot;small&quot;&gt;&lt;/df-radio-button&gt;\n      &lt;df-radio-button label=&quot;mini&quot;&gt;&lt;/df-radio-button&gt;\n    &lt;/df-radio-group&gt;\n    &lt;div style=&quot;margin: 20px;&quot;&gt;&lt;/div&gt;\n    &lt;df-table :size=&quot;labelSize&quot; :data=&quot;tableData&quot; style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;date&quot;\n        label=&quot;日期&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;address&quot;\n        label=&quot;地址&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        labelSize: 'small',\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"qu-xiao-ban-ma-wen-biao-ge\"><a class=\"header-anchor\" href=\"#qu-xiao-ban-ma-wen-biao-ge\">¶</a> 取消斑马纹表格</h3>\n<p>为了更容易区分出不同行的数据，表格斑马线是默认启用的，但是可以通过配置来取消使用。</p>\n<demo-block>\n        <div><p><code>stripe</code>属性可以创建带斑马纹的表格。它接受一个<code>Boolean</code>，默认为<code>true</code>，设置为<code>false</code>以取消使用。</p>\n</div>\n        <template slot=\"source\"><df-demo8 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    :stripe=&quot;false&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"bu-dai-bian-kuang-biao-ge\"><a class=\"header-anchor\" href=\"#bu-dai-bian-kuang-biao-ge\">¶</a> 不带边框表格</h3>\n<demo-block>\n        <div><p>默认情况下，Table 组件是具有竖直方向的边框的，如果不需要，可以使用<code>border</code>属性，它接受一个<code>Boolean</code>，设置为<code>false</code>即可启用。</p>\n</div>\n        <template slot=\"source\"><df-demo9 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    :border=&quot;false&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"dai-zhuang-tai-biao-ge\"><a class=\"header-anchor\" href=\"#dai-zhuang-tai-biao-ge\">¶</a> 带状态表格</h3>\n<p>可将表格内容 highlight 显示，方便区分「成功、信息、警告、危险」等内容。</p>\n<demo-block>\n        <div><p>可以通过指定 Table 组件的 <code>row-class-name</code> 属性来为 Table 中的某一行添加 class，表明该行处于某种状态，注意这种情况下需要取消表格的斑马线配置，否则斑马线将会覆盖表现效果。</p>\n</div>\n        <template slot=\"source\"><df-demo10 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;\n    :row-class-name=&quot;tableRowClassName&quot;\n    :stripe=&quot;false&quot;&gt;\n    &lt;df-table-column\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n  .df-table .warning-row {\n    background: oldlace;\n  }\n\n  .df-table .success-row {\n    background: #f0f9eb;\n  }\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n    methods: {\n      tableRowClassName({row, rowIndex}) {\n        if (rowIndex === 1) {\n          return 'warning-row';\n        } else if (rowIndex === 3) {\n          return 'success-row';\n        }\n        return '';\n      }\n    },\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"gu-ding-biao-tou\"><a class=\"header-anchor\" href=\"#gu-ding-biao-tou\">¶</a> 固定表头</h3>\n<p>纵向内容过多时，可选择固定表头。</p>\n<demo-block>\n        <div><p>只要在<code>df-table</code>元素中定义了<code>height</code>属性，即可实现固定表头的表格，而不需要额外的代码。</p>\n</div>\n        <template slot=\"source\"><df-demo11 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    height=&quot;250&quot;\n    border\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"gu-ding-lie\"><a class=\"header-anchor\" href=\"#gu-ding-lie\">¶</a> 固定列</h3>\n<p>横向内容过多时，可选择固定列。</p>\n<demo-block>\n        <div><p>固定列需要使用<code>fixed</code>属性，它接受 Boolean 值或者<code>left</code> <code>right</code>，表示左边固定还是右边固定。</p>\n</div>\n        <template slot=\"source\"><df-demo12 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    border\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      fixed\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;150&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;province&quot;\n      label=&quot;省份&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;city&quot;\n      label=&quot;市区&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;\n      width=&quot;300&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;zip&quot;\n      label=&quot;邮编&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      fixed=&quot;right&quot;\n      label=&quot;操作&quot;\n      width=&quot;100&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;df-button @click=&quot;handleClick(scope.row)&quot; type=&quot;text&quot; size=&quot;small&quot;&gt;查看&lt;/df-button&gt;\n        &lt;df-button type=&quot;text&quot; size=&quot;small&quot;&gt;编辑&lt;/df-button&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    methods: {\n      handleClick(row) {\n        console.log(row);\n      }\n    },\n\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1517 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1516 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"gu-ding-lie-he-biao-tou\"><a class=\"header-anchor\" href=\"#gu-ding-lie-he-biao-tou\">¶</a> 固定列和表头</h3>\n<p>横纵内容过多时，可选择固定列和表头。</p>\n<demo-block>\n        <div><p>固定列和表头可以同时使用，只需要将上述两个属性分别设置好即可。</p>\n</div>\n        <template slot=\"source\"><df-demo13 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;\n    height=&quot;250&quot;&gt;\n    &lt;df-table-column\n      fixed\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;150&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;province&quot;\n      label=&quot;省份&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;city&quot;\n      label=&quot;市区&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;zip&quot;\n      label=&quot;邮编&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"liu-ti-gao-du\"><a class=\"header-anchor\" href=\"#liu-ti-gao-du\">¶</a> 流体高度</h3>\n<p>当数据量动态变化时，可以为 Table 设置一个最大高度。</p>\n<demo-block>\n        <div><p>通过设置<code>max-height</code>属性为 Table 指定最大高度。此时若表格所需的高度大于最大高度，则会显示一个滚动条。</p>\n</div>\n        <template slot=\"source\"><df-demo14 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;\n    max-height=&quot;250&quot;&gt;\n    &lt;df-table-column\n      fixed\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;150&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;province&quot;\n      label=&quot;省份&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;city&quot;\n      label=&quot;市区&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;\n      width=&quot;300&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;zip&quot;\n      label=&quot;邮编&quot;\n      width=&quot;120&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      fixed=&quot;right&quot;\n      label=&quot;操作&quot;\n      width=&quot;120&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;df-button\n          @click.native.prevent=&quot;deleteRow(scope.$index, tableData)&quot;\n          type=&quot;text&quot;\n          size=&quot;small&quot;&gt;\n          移除\n        &lt;/df-button&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    methods: {\n      deleteRow(index, rows) {\n        rows.splice(index, 1);\n      }\n    },\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"duo-ji-biao-tou\"><a class=\"header-anchor\" href=\"#duo-ji-biao-tou\">¶</a> 多级表头</h3>\n<p>数据结构比较复杂的时候，可使用多级表头来展现数据的层次关系。</p>\n<demo-block>\n        <div><p>只需要在 df-table-column 里面嵌套 df-table-column，就可以实现多级表头。</p>\n</div>\n        <template slot=\"source\"><df-demo15 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;150&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column label=&quot;配送信息&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;120&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column label=&quot;地址&quot;&gt;\n        &lt;df-table-column\n          prop=&quot;province&quot;\n          label=&quot;省份&quot;\n          width=&quot;120&quot;&gt;\n        &lt;/df-table-column&gt;\n        &lt;df-table-column\n          prop=&quot;city&quot;\n          label=&quot;市区&quot;\n          width=&quot;120&quot;&gt;\n        &lt;/df-table-column&gt;\n        &lt;df-table-column\n          prop=&quot;address&quot;\n          label=&quot;地址&quot;\n          width=&quot;300&quot;&gt;\n        &lt;/df-table-column&gt;\n        &lt;df-table-column\n          prop=&quot;zip&quot;\n          label=&quot;邮编&quot;\n          width=&quot;120&quot;&gt;\n        &lt;/df-table-column&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"dan-xuan\"><a class=\"header-anchor\" href=\"#dan-xuan\">¶</a> 单选</h3>\n<p>选择单行数据时使用色块表示。</p>\n<demo-block>\n        <div><p>Table 组件提供了单选的支持，只需要配置<code>highlight-current-row</code>属性即可实现单选。之后由<code>current-change</code>事件来管理选中时触发的事件，它会传入<code>currentRow</code>，<code>oldCurrentRow</code>。如果需要显示索引，可以增加一列<code>df-table-column</code>，设置<code>type</code>属性为<code>index</code>即可显示从 1 开始的索引号。</p>\n</div>\n        <template slot=\"source\"><df-demo16 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      ref=&quot;singleTable&quot;\n      :data=&quot;tableData&quot;\n      highlight-current-row\n      @current-change=&quot;handleCurrentChange&quot;\n      style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column\n        type=&quot;index&quot;\n        width=&quot;50&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        property=&quot;date&quot;\n        label=&quot;日期&quot;\n        width=&quot;120&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        property=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;120&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        property=&quot;address&quot;\n        label=&quot;地址&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n    &lt;div style=&quot;margin-top: 20px&quot;&gt;\n      &lt;df-button @click=&quot;setCurrent(tableData[1])&quot;&gt;选中第二行&lt;/df-button&gt;\n      &lt;df-button @click=&quot;setCurrent()&quot;&gt;取消选择&lt;/df-button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }],\n        currentRow: null\n      }\n    },\n\n    methods: {\n      setCurrent(row) {\n        this.$refs.singleTable.setCurrentRow(row);\n      },\n      handleCurrentChange(val) {\n        this.currentRow = val;\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"duo-xuan\"><a class=\"header-anchor\" href=\"#duo-xuan\">¶</a> 多选</h3>\n<p>选择多行数据时使用 Checkbox。</p>\n<demo-block>\n        <div><p>实现多选非常简单: 手动添加一个<code>df-table-column</code>，设<code>type</code>属性为<code>selection</code>即可；默认情况下若内容过多会折行显示，若需要单行显示可以使用<code>show-overflow-tooltip</code>属性，它接受一个<code>Boolean</code>，为<code>true</code>时多余的内容会在 hover 时以 tooltip 的形式显示出来。</p>\n</div>\n        <template slot=\"source\"><df-demo17 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      ref=&quot;multipleTable&quot;\n      :data=&quot;tableData&quot;\n      tooltip-effect=&quot;dark&quot;\n      style=&quot;width: 100%&quot;\n      @selection-change=&quot;handleSelectionChange&quot;&gt;\n      &lt;df-table-column\n        type=&quot;selection&quot;\n        width=&quot;55&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        label=&quot;日期&quot;\n        width=&quot;120&quot;&gt;\n        &lt;template slot-scope=&quot;scope&quot;&gt;{{ scope.row.date }}&lt;/template&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;120&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;address&quot;\n        label=&quot;地址&quot;\n        show-overflow-tooltip&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n    &lt;div style=&quot;margin-top: 20px&quot;&gt;\n      &lt;df-button @click=&quot;toggleSelection([tableData[1], tableData[2]])&quot;&gt;切换第二、第三行的选中状态&lt;/df-button&gt;\n      &lt;df-button @click=&quot;toggleSelection()&quot;&gt;取消选择&lt;/df-button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }],\n        multipleSelection: []\n      }\n    },\n\n    methods: {\n      toggleSelection(rows) {\n        if (rows) {\n          rows.forEach(row =&gt; {\n            this.$refs.multipleTable.toggleRowSelection(row);\n          });\n        } else {\n          this.$refs.multipleTable.clearSelection();\n        }\n      },\n      handleSelectionChange(val) {\n        this.multipleSelection = val;\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"dan-lie-duo-xuan\"><a class=\"header-anchor\" href=\"#dan-lie-duo-xuan\">¶</a> 单列多选</h3>\n<p>选择单列数据时使用 Checkbox。</p>\n<demo-block>\n        <div><p>传入<code>columnOptions</code>，配置<code>multipleConfig</code>以启用表格单列多选。当某一列的任一项的选中状态发生变化时，会派出事件 <code>item-checked-changed</code>，携带四个参数，分别是变化处的列的prop、变化处的行的下标、变化后的值和变化处的行信息。</p>\n</div>\n        <template slot=\"source\"><df-demo18 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      ref=&quot;multipleTable&quot;\n      :data=&quot;tableData&quot;\n      :columnOptions=&quot;columnOptions&quot;\n      @item-checked-changed=&quot;itemCheckedChanged&quot;\n      style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;age&quot; label=&quot;年龄&quot; width=&quot;180&quot; /&gt;\n      &lt;df-table-column prop=&quot;address&quot; label=&quot;地址&quot; /&gt;\n    &lt;/df-table&gt;\n    &lt;div style=&quot;margin-top: 20px&quot;&gt;\n      &lt;df-button @click=&quot;getCheckedItems('date')&quot;&gt;获取日期列已选择项&lt;/df-button&gt;\n      &lt;df-button @click=&quot;getCheckedItems('name')&quot;&gt;获取姓名列已选择项&lt;/df-button&gt;\n      &lt;df-button @click=&quot;getCheckedItems('address')&quot;&gt;获取地址列已选择项&lt;/df-button&gt;\n      &lt;br&gt;&lt;br&gt;\n      &lt;df-button @click=&quot;setItemChecked('date', tableData[1])&quot;&gt;选择日期列的第二项&lt;/df-button&gt;\n      &lt;df-button @click=&quot;setAllItemsChecked('name')&quot;&gt;选择姓名列的所有项&lt;/df-button&gt;\n      &lt;df-button @click=&quot;removeAllItemsChecked('address')&quot;&gt;取消选择地址列的所有项&lt;/df-button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      columnOptions: {\n        multipleConfig: {\n          multipleColumns: [\n            {\n              columnProp: 'date',\n              disableRowsIndex: [2]\n            },\n            'name',\n            'age',\n            {\n              columnProp: 'address'\n            }\n          ]\n        }\n      },\n      tableData: [\n        {\n          date: '2016-05-01',\n          name: '李时珍',\n          age: '20岁',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        },\n        {\n          date: '2016-05-02',\n          name: '李时珍',\n          age: '12岁',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        },\n        {\n          date: '2016-05-03',\n          name: '李时珍',\n          age: '34岁',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        },\n        {\n          date: '2016-05-04',\n          name: '李时珍',\n          age: '27岁',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }\n      ]\n    }\n  },\n  methods: {\n    itemCheckedChanged (columnProp, index, value, rowData) {\n      console.log(`${columnProp} 列的第 ${index + 1} 项的 checkbox 选中状态切换到了 ${value}, 切换处的行数据是`, rowData)\n    },\n    getCheckedItems (columnProp) {\n      console.log(this.$refs.multipleTable.getCheckedItems(columnProp))\n    },\n    setItemChecked (columnProp, row) {\n      this.$refs.multipleTable.setItemChecked(columnProp, row, true)\n    },\n    setAllItemsChecked (columnProp) {\n      this.$refs.multipleTable.setAllItemsChecked(columnProp)\n    },\n    removeAllItemsChecked (columnProp) {\n      this.$refs.multipleTable.removeAllItemsChecked(columnProp)\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"pai-xu\"><a class=\"header-anchor\" href=\"#pai-xu\">¶</a> 排序</h3>\n<p>对表格进行排序，可快速查找或对比数据。</p>\n<demo-block>\n        <div><p>在列中设置<code>sortable</code>属性即可实现以该列为基准的排序，接受一个<code>Boolean</code>，默认为<code>false</code>。可以通过 Table 的<code>default-sort</code>属性设置默认的排序列和排序顺序。可以使用<code>sort-method</code>或者<code>sort-by</code>使用自定义的排序规则。如果需要后端排序，需将<code>sortable</code>设置为<code>custom</code>，同时在 Table 上监听<code>sort-change</code>事件，在事件回调中可以获取当前排序的字段名和排序顺序，从而向接口请求排序后的表格数据。在本例中，我们还使用了<code>formatter</code>属性，它用于格式化指定列的值，接受一个<code>Function</code>，会传入两个参数：<code>row</code>和<code>column</code>，可以根据自己的需求进行处理。</p>\n</div>\n        <template slot=\"source\"><df-demo19 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;\n    :default-sort = &quot;{prop: 'date', order: 'descending'}&quot;\n    &gt;\n    &lt;df-table-column\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      sortable\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      sortable\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;\n      :formatter=&quot;formatter&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shai-xuan\"><a class=\"header-anchor\" href=\"#shai-xuan\">¶</a> 筛选</h3>\n<p>对表格进行筛选，可快速查找到自己想看的数据。</p>\n<demo-block>\n        <div><p>在列中设置<code>filters</code> <code>filter-method</code>属性即可开启该列的筛选，filters 是一个数组，<code>filter-method</code>是一个方法，它用于决定某些数据是否显示，会传入三个参数：<code>value</code>, <code>row</code> 和 <code>column</code>。也可以通过配置属性<code>use-input-filter</code>来启用 input 框模式的筛选，参见下面<code>地址</code>列的筛选示例。</p>\n</div>\n        <template slot=\"source\"><df-demo20 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-button @click=&quot;resetDateFilter&quot;&gt;清除日期过滤器&lt;/df-button&gt;\n    &lt;df-button @click=&quot;clearFilter&quot;&gt;清除所有过滤器&lt;/df-button&gt;\n    &lt;df-table\n      ref=&quot;filterTable&quot;\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;date&quot;\n        label=&quot;日期&quot;\n        sortable\n        width=&quot;180&quot;\n        column-key=&quot;date&quot;\n        :filters=&quot;[{text: '2016-05-01', value: '2016-05-01'}, {text: '2016-05-02', value: '2016-05-02'}, {text: '2016-05-03', value: '2016-05-03'}, {text: '2016-05-04', value: '2016-05-04'}]&quot;\n        :filter-method=&quot;filterHandler&quot;\n      &gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;address&quot;\n        label=&quot;地址&quot;\n        :filter-method=&quot;filterAddress&quot;\n        use-input-filter\n        &gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;tag&quot;\n        label=&quot;标签&quot;\n        width=&quot;100&quot;\n        :filters=&quot;[{ text: '家', value: '家' }, { text: '公司', value: '公司' }]&quot;\n        :filter-method=&quot;filterTag&quot;\n        filter-placement=&quot;bottom-end&quot;&gt;\n        &lt;template slot-scope=&quot;scope&quot;&gt;\n          &lt;df-tag\n            :type=&quot;scope.row.tag === '家' ? 'primary' : 'success'&quot;\n            disable-transitions&gt;{{scope.row.tag}}&lt;/df-tag&gt;\n        &lt;/template&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1 弄',\n          tag: '家'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 2 弄',\n          tag: '公司'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 3 弄',\n          tag: '家'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 4 弄',\n          tag: '公司'\n        }]\n      }\n    },\n    methods: {\n      resetDateFilter () {\n        this.$refs.filterTable.clearFilter('date')\n      },\n      clearFilter () {\n        this.$refs.filterTable.clearFilter()\n      },\n      filterTag (value, row) {\n        return row.tag === value\n      },\n      filterAddress (value, row, column) {\n        const property = column.property\n        return row[property].includes(value)\n      },\n      filterHandler (value, row, column) {\n        const property = column.property\n        return row[property] === value\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zi-ding-yi-lie-mo-ban\"><a class=\"header-anchor\" href=\"#zi-ding-yi-lie-mo-ban\">¶</a> 自定义列模板</h3>\n<p>自定义列的显示内容，可组合其他组件使用。</p>\n<demo-block>\n        <div><p>通过 <code>Scoped slot</code> 可以获取到 row, column, $index 和 store（table 内部的状态管理）的数据，用法参考 demo。</p>\n</div>\n        <template slot=\"source\"><df-demo21 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      label=&quot;日期&quot;\n      width=&quot;180&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;i class=&quot;df-icon-time-c-o&quot;&gt;&lt;/i&gt;\n        &lt;span style=&quot;margin-left: 10px&quot;&gt;{{ scope.row.date }}&lt;/span&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;姓名&quot;\n      width=&quot;180&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;df-popover trigger=&quot;hover&quot; placement=&quot;top&quot;&gt;\n          &lt;p&gt;姓名: {{ scope.row.name }}&lt;/p&gt;\n          &lt;p&gt;住址: {{ scope.row.address }}&lt;/p&gt;\n          &lt;div slot=&quot;reference&quot; class=&quot;name-wrapper&quot;&gt;\n            &lt;df-tag size=&quot;medium&quot;&gt;{{ scope.row.name }}&lt;/df-tag&gt;\n          &lt;/div&gt;\n        &lt;/df-popover&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column label=&quot;操作&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;df-button\n          size=&quot;mini&quot;\n          @click=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;编辑&lt;/df-button&gt;\n        &lt;df-button\n          size=&quot;mini&quot;\n          type=&quot;danger&quot;\n          @click=&quot;handleDelete(scope.$index, scope.row)&quot;&gt;删除&lt;/df-button&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      handleEdit(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zhan-kai-xing\"><a class=\"header-anchor\" href=\"#zhan-kai-xing\">¶</a> 展开行</h3>\n<p>当行内容过多并且不想显示横向滚动条时，可以使用 Table 展开行功能。</p>\n<demo-block>\n        <div><p>通过设置 type=&quot;expand&quot; 和 <code>Scoped slot</code> 可以开启展开行功能，<code>df-table-column</code> 的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 <code>Scoped slot</code> 相同。</p>\n</div>\n        <template slot=\"source\"><df-demo22 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column type=&quot;expand&quot;&gt;\n      &lt;template slot-scope=&quot;props&quot;&gt;\n        &lt;df-form label-position=&quot;left&quot; inline class=&quot;demo-table-expand&quot;&gt;\n          &lt;df-form-item label=&quot;商品名称&quot;&gt;\n            &lt;span&gt;{{ props.row.name }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;所属店铺&quot;&gt;\n            &lt;span&gt;{{ props.row.shop }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;商品 ID&quot;&gt;\n            &lt;span&gt;{{ props.row.id }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;店铺 ID&quot;&gt;\n            &lt;span&gt;{{ props.row.shopId }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;商品分类&quot;&gt;\n            &lt;span&gt;{{ props.row.category }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;店铺地址&quot;&gt;\n            &lt;span&gt;{{ props.row.address }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;商品描述&quot;&gt;\n            &lt;span&gt;{{ props.row.desc }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n        &lt;/df-form&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;商品 ID&quot;\n      prop=&quot;id&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;商品名称&quot;\n      prop=&quot;name&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;描述&quot;\n      prop=&quot;desc&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n  .demo-table-expand {\n    font-size: 0;\n  }\n  .demo-table-expand label {\n    width: 90px;\n    color: #99a9bf;\n  }\n  .demo-table-expand .df-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 50%;\n  }\n&lt;/style&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: '12987122',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987123',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987125',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987126',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zhan-kai-xing-yin-cang-mou-xie-zhan-kai-tu-biao\"><a class=\"header-anchor\" href=\"#zhan-kai-xing-yin-cang-mou-xie-zhan-kai-tu-biao\">¶</a> 展开行(隐藏某些展开图标)</h3>\n<p>通过<code>hide-expand-icon</code>回调函数控制某些展开功能的显隐。</p>\n<demo-block>\n        <div><p>通过设置 expand column 的<code>hide-expand-icon</code>属性, 来控制某些行的展开图标隐藏, 这个属性是一个函数, 自带三个参数, 行数据, 列数据和行下标, 通过判断这些参数并最终返回<code>true</code>来控制某些行的展开图标隐藏。</p>\n</div>\n        <template slot=\"source\"><df-demo23 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column type=&quot;expand&quot; :hide-expand-icon=&quot;hideExpandIcon&quot;&gt;\n      &lt;template slot-scope=&quot;props&quot;&gt;\n        &lt;df-form label-position=&quot;left&quot; inline class=&quot;demo-table-expand&quot;&gt;\n          &lt;df-form-item label=&quot;商品名称&quot;&gt;\n            &lt;span&gt;{{ props.row.name }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;所属店铺&quot;&gt;\n            &lt;span&gt;{{ props.row.shop }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;商品 ID&quot;&gt;\n            &lt;span&gt;{{ props.row.id }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;店铺 ID&quot;&gt;\n            &lt;span&gt;{{ props.row.shopId }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;商品分类&quot;&gt;\n            &lt;span&gt;{{ props.row.category }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;店铺地址&quot;&gt;\n            &lt;span&gt;{{ props.row.address }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n          &lt;df-form-item label=&quot;商品描述&quot;&gt;\n            &lt;span&gt;{{ props.row.desc }}&lt;/span&gt;\n          &lt;/df-form-item&gt;\n        &lt;/df-form&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;商品 ID&quot;\n      prop=&quot;id&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;商品名称&quot;\n      prop=&quot;name&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;描述&quot;\n      prop=&quot;desc&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n  .demo-table-expand {\n    font-size: 0;\n  }\n  .demo-table-expand label {\n    width: 90px;\n    color: #99a9bf;\n  }\n  .demo-table-expand .df-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 50%;\n  }\n&lt;/style&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      tableData: [{\n        id: '12987122',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987123',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987125',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987126',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }]\n    }\n  },\n  methods: {\n    hideExpandIcon (row, column, rowIndex) {\n      if (rowIndex === 2) return true\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shu-xing-shu-ju-yu-lan-jia-zai\"><a class=\"header-anchor\" href=\"#shu-xing-shu-ju-yu-lan-jia-zai\">¶</a> 树形数据与懒加载</h3>\n<demo-block>\n        <div><p>支持树类型的数据的显示。当 row 中包含 <code>children</code> 字段时，被视为树形数据。渲染树形数据时，必须要指定 <code>row-key</code>。支持子节点数据异步加载。设置 Table 的 <code>lazy</code> 属性为 true 与加载函数 <code>load</code> 。通过指定 row 中的 <code>hasChildren</code> 字段来指定哪些行是包含子节点。<code>children</code> 与 <code>hasChildren</code> 都可以通过 <code>tree-props</code> 配置。</p>\n</div>\n        <template slot=\"source\"><df-demo24 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      style=&quot;width: 100%;margin-bottom: 20px;&quot;\n      row-key=&quot;id&quot;\n      border\n      use-tree\n      default-expand-all\n      :tree-props=&quot;{children: 'children', hasChildren: 'hasChildren'}&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;date&quot;\n        label=&quot;日期&quot;\n        sortable\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        sortable\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;address&quot;\n        label=&quot;地址&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n\n    &lt;df-table\n      :data=&quot;tableData1&quot;\n      style=&quot;width: 100%&quot;\n      row-key=&quot;id&quot;\n      border\n      use-tree\n      lazy\n      :load=&quot;load&quot;\n      :tree-props=&quot;{children: 'children', hasChildren: 'hasChildren'}&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;date&quot;\n        label=&quot;日期&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;address&quot;\n        label=&quot;地址&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: 1,\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          id: 2,\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          id: 3,\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          children: [{\n              id: 31,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }, {\n              id: 32,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n          }]\n        }, {\n          id: 4,\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }],\n        tableData1: [{\n          id: 1,\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          id: 2,\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          id: 3,\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          hasChildren: true\n        }, {\n          id: 4,\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      load(tree, treeNode, resolve) {\n        setTimeout(() =&gt; {\n          resolve([\n            {\n              id: 31,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }, {\n              id: 32,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }\n          ])\n        }, 1000)\n      }\n    },\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zi-ding-yi-biao-tou\"><a class=\"header-anchor\" href=\"#zi-ding-yi-biao-tou\">¶</a> 自定义表头</h3>\n<p>表头支持自定义。</p>\n<demo-block>\n        <div><p>通过设置 <a href=\"https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD\">Scoped slot</a> 来自定义表头。</p>\n</div>\n        <template slot=\"source\"><df-demo25 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData.filter(data =&gt; !search || data.name.toLowerCase().includes(search.toLowerCase()))&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      label=&quot;Date&quot;\n      prop=&quot;date&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      label=&quot;Name&quot;\n      prop=&quot;name&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      align=&quot;right&quot;&gt;\n      &lt;template slot=&quot;header&quot; slot-scope=&quot;scope&quot;&gt;\n        &lt;df-input\n          v-model=&quot;search&quot;\n          size=&quot;mini&quot;\n          placeholder=&quot;输入关键字搜索&quot;/&gt;\n      &lt;/template&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;df-button\n          size=&quot;mini&quot;\n          @click=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;Edit&lt;/df-button&gt;\n        &lt;df-button\n          size=&quot;mini&quot;\n          type=&quot;danger&quot;\n          @click=&quot;handleDelete(scope.$index, scope.row)&quot;&gt;Delete&lt;/df-button&gt;\n      &lt;/template&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }],\n        search: ''\n      }\n    },\n    methods: {\n      handleEdit(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    },\n  }\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"biao-wei-he-ji-xing\"><a class=\"header-anchor\" href=\"#biao-wei-he-ji-xing\">¶</a> 表尾合计行</h3>\n<p>若表格展示的是各类数字，可以在表尾显示各列的合计。</p>\n<demo-block>\n        <div><p>将<code>show-summary</code>设置为<code>true</code>就会在表格尾部展示合计行。默认情况下，对于合计行，第一列不进行数据求合操作，而是显示「合计」二字（可通过<code>sum-text</code>配置），其余列会将本列所有数值进行求合操作，并显示出来。当然，你也可以定义自己的合计逻辑。使用<code>summary-method</code>并传入一个方法，返回一个数组，这个数组中的各项就会显示在合计行的各列中，具体可以参考本例中的第二个表格。你也可以使用自定义合计行插槽，来定制合计行的要展示的内容，具体可以参考本例中的第三个表格。</p>\n</div>\n        <template slot=\"source\"><df-demo26 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      border\n      show-summary\n      style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;id&quot;\n        label=&quot;ID&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount1&quot;\n        sortable\n        label=&quot;数值 1&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount2&quot;\n        sortable\n        label=&quot;数值 2&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount3&quot;\n        sortable\n        label=&quot;数值 3&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      border\n      height=&quot;200&quot;\n      :summary-method=&quot;getSummaries&quot;\n      show-summary\n      style=&quot;width: 100%; margin-top: 20px&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;id&quot;\n        label=&quot;ID&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount1&quot;\n        label=&quot;数值 1（元）&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount2&quot;\n        label=&quot;数值 2（元）&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount3&quot;\n        label=&quot;数值 3（元）&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      border\n      show-summary\n      style=&quot;width: 100%; margin-top: 20px&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;id&quot;\n        label=&quot;ID&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount1&quot;\n        sortable\n        label=&quot;数值 1&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount2&quot;\n        sortable\n        label=&quot;数值 2&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount3&quot;\n        sortable\n        label=&quot;数值 3&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;div slot=&quot;customSummary&quot; class=&quot;custom-summary&quot;&gt;自定义求和（在这里进行任何布局）&lt;/div&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: '12987122',\n          name: '李时珍',\n          amount1: '234',\n          amount2: '3.2',\n          amount3: 10\n        }, {\n          id: '12987123',\n          name: '李时珍',\n          amount1: '165',\n          amount2: '4.43',\n          amount3: 12\n        }, {\n          id: '12987124',\n          name: '李时珍',\n          amount1: '324',\n          amount2: '1.9',\n          amount3: 9\n        }, {\n          id: '12987125',\n          name: '李时珍',\n          amount1: '621',\n          amount2: '2.2',\n          amount3: 17\n        }, {\n          id: '12987126',\n          name: '李时珍',\n          amount1: '539',\n          amount2: '4.1',\n          amount3: 15\n        }]\n      };\n    },\n    methods: {\n      getSummaries(param) {\n        const { columns, data } = param;\n        const sums = [];\n        columns.forEach((column, index) =&gt; {\n          if (index === 0) {\n            sums[index] = '总价';\n            return;\n          }\n          const values = data.map(item =&gt; Number(item[column.property]));\n          if (!values.every(value =&gt; isNaN(value))) {\n            sums[index] = values.reduce((prev, curr) =&gt; {\n              const value = Number(curr);\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0);\n            sums[index] += ' 元';\n          } else {\n            sums[index] = 'N/A';\n          }\n        });\n\n        return sums;\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"he-bing-xing-huo-lie\"><a class=\"header-anchor\" href=\"#he-bing-xing-huo-lie\">¶</a> 合并行或列</h3>\n<p>多行或多列共用一个数据时，可以合并行或列。</p>\n<demo-block>\n        <div><p>通过给<code>table</code>传入<code>span-method</code>方法可以实现合并行或列，方法的参数是一个对象，里面包含当前行<code>row</code>、当前列<code>column</code>、当前行号<code>rowIndex</code>、当前列号<code>columnIndex</code>四个属性。该函数可以返回一个包含两个元素的数组，第一个元素代表<code>rowspan</code>，第二个元素代表<code>colspan</code>。 也可以返回一个键名为<code>rowspan</code>和<code>colspan</code>的对象。</p>\n</div>\n        <template slot=\"source\"><df-demo27 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      :span-method=&quot;arraySpanMethod&quot;\n      border\n      style=&quot;width: 100%&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;id&quot;\n        label=&quot;ID&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount1&quot;\n        sortable\n        label=&quot;数值 1&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount2&quot;\n        sortable\n        label=&quot;数值 2&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount3&quot;\n        sortable\n        label=&quot;数值 3&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n\n    &lt;df-table\n      :data=&quot;tableData&quot;\n      :span-method=&quot;objectSpanMethod&quot;\n      border\n      style=&quot;width: 100%; margin-top: 20px&quot;&gt;\n      &lt;df-table-column\n        prop=&quot;id&quot;\n        label=&quot;ID&quot;\n        width=&quot;180&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;name&quot;\n        label=&quot;姓名&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount1&quot;\n        label=&quot;数值 1（元）&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount2&quot;\n        label=&quot;数值 2（元）&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;amount3&quot;\n        label=&quot;数值 3（元）&quot;&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          id: '12987122',\n          name: '李时珍',\n          amount1: '234',\n          amount2: '3.2',\n          amount3: 10\n        }, {\n          id: '12987123',\n          name: '李时珍',\n          amount1: '165',\n          amount2: '4.43',\n          amount3: 12\n        }, {\n          id: '12987124',\n          name: '李时珍',\n          amount1: '324',\n          amount2: '1.9',\n          amount3: 9\n        }, {\n          id: '12987125',\n          name: '李时珍',\n          amount1: '621',\n          amount2: '2.2',\n          amount3: 17\n        }, {\n          id: '12987126',\n          name: '李时珍',\n          amount1: '539',\n          amount2: '4.1',\n          amount3: 15\n        }]\n      };\n    },\n    methods: {\n      arraySpanMethod({ row, column, rowIndex, columnIndex }) {\n        if (rowIndex % 2 === 0) {\n          if (columnIndex === 0) {\n            return [1, 2];\n          } else if (columnIndex === 1) {\n            return [0, 0];\n          }\n        }\n      },\n\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n        if (columnIndex === 0) {\n          if (rowIndex % 2 === 0) {\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zi-ding-yi-suo-yin\"><a class=\"header-anchor\" href=\"#zi-ding-yi-suo-yin\">¶</a> 自定义索引</h3>\n<p>自定义 <code>type=index</code> 列的行号。</p>\n<demo-block>\n        <div><p>通过给 <code>type=index</code> 的列传入 <code>index</code> 属性，可以自定义索引。该属性传入数字时，将作为索引的起始值。也可以传入一个方法，它提供当前行的行号（从 <code>0</code> 开始）作为参数，返回值将作为索引展示。</p>\n</div>\n        <template slot=\"source\"><df-demo28 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-table\n    :data=&quot;tableData&quot;\n    style=&quot;width: 100%&quot;&gt;\n    &lt;df-table-column\n      type=&quot;index&quot;\n      :index=&quot;indexMethod&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;date&quot;\n      label=&quot;日期&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;name&quot;\n      label=&quot;姓名&quot;\n      width=&quot;180&quot;&gt;\n    &lt;/df-table-column&gt;\n    &lt;df-table-column\n      prop=&quot;address&quot;\n      label=&quot;地址&quot;&gt;\n    &lt;/df-table-column&gt;\n  &lt;/df-table&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333,\n          tag: '家'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1517 弄',\n          zip: 200333,\n          tag: '公司'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          zip: 200333,\n          tag: '家'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1516 弄',\n          zip: 200333,\n          tag: '公司'\n        }],\n      }\n    },\n    methods: {\n      indexMethod(index) {\n        return index * 2;\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shuang-lie-biao-ge-gu-ding-gao-du\"><a class=\"header-anchor\" href=\"#shuang-lie-biao-ge-gu-ding-gao-du\">¶</a> 双列表格(固定高度)</h3>\n<p>使用两个表格拼接成一个表格, 应对特殊业务需求, 一般来讲左边表格负责奇数行, 右边表格负责偶数行, 需要兼顾好左右表格之间的关系, 且某一个表格滚动时, 另一个表格也需要同步滚动同样的距离。</p>\n<demo-block>\n        <div><p>对于固定高度的需求, 外壳需要设定一个高度css样式, 内层的<code>table</code>需要设置属性<code>height</code>为<code>100%</code>, 同时, 需求一般会要求只能显示一个滚动条, 所以我们需要隐藏左边表格的滚动条, 左边的表格设定属性<code>hide-scroll-bar</code>即可。另外, 当两侧表格高度不一致时, 需求一般要求补齐缺少的行高, 所以右侧的表格需要设定属性<code>supplement-row-height</code>, 生效情况是右边的表格数据少于左边的表格数据时。</p>\n</div>\n        <template slot=\"source\"><df-demo29 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div style=&quot;display: flex; height: 200px&quot;&gt;\n    &lt;!-- 左侧表格 --&gt;\n    &lt;df-table\n      :data=&quot;leftTableData&quot;\n      hide-scroll-bar\n      style=&quot;width: 50%&quot;\n      :column-options=&quot;columnOptions&quot;\n      @switch-to-editing-slot=&quot;leftSwitchToEditingSlot&quot;\n      border\n      @button-click=&quot;leftButtonClick&quot;\n      height=&quot;100%&quot;\n      @table-body-scroll=&quot;leftTableBodyScroll&quot;\n      ref=&quot;leftTable&quot;&gt;\n      &lt;df-table-column\n        label=&quot;序号&quot;\n        prop=&quot;index&quot;\n        width=&quot;50&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yaoPinMc&quot;\n        label=&quot;药品名称&quot;\n        width=&quot;80&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.yaoPinMc&quot; :ref=&quot;`left-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;jiLiang&quot;\n        label=&quot;剂量&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.jiLiang&quot; :ref=&quot;`left-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;danWei&quot;\n        label=&quot;单位&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.danWei&quot; :ref=&quot;`left-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;biaoZhunJia&quot;\n        label=&quot;标准价&quot;\n        width=&quot;70&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yiBaoDengJi&quot;\n        label=&quot;医保等级&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        width=&quot;80&quot;\n        type=&quot;buttons&quot;\n        button-type=&quot;icon&quot;\n        :buttons='[&quot;remove-circle&quot;, &quot;add-circle&quot;, &quot;down-circle&quot;]'&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n    &lt;!-- 右侧表格 --&gt;\n    &lt;df-table\n      :data=&quot;rightTableData&quot;\n      :supplement-row-height=&quot;rightTableData.length &lt; leftTableData.length&quot;\n      style=&quot;width: 50%&quot;\n      :column-options=&quot;columnOptions&quot;\n      @switch-to-editing-slot=&quot;rightSwitchToEditingSlot&quot;\n      border\n      @button-click=&quot;rightButtonClick&quot;\n      height=&quot;100%&quot;\n      @table-body-scroll=&quot;rightTableBodyScroll&quot;\n      ref=&quot;rightTable&quot;&gt;\n      &lt;df-table-column\n        label=&quot;序号&quot;\n        prop=&quot;index&quot;\n        width=&quot;50&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yaoPinMc&quot;\n        label=&quot;药品名称&quot;\n        width=&quot;80&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.yaoPinMc&quot; :ref=&quot;`right-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;jiLiang&quot;\n        label=&quot;剂量&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.jiLiang&quot; :ref=&quot;`right-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;danWei&quot;\n        label=&quot;单位&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.danWei&quot; :ref=&quot;`right-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;biaoZhunJia&quot;\n        label=&quot;标准价&quot;\n        width=&quot;70&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yiBaoDengJi&quot;\n        label=&quot;医保等级&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        width=&quot;80&quot;\n        type=&quot;buttons&quot;\n        button-type=&quot;icon&quot;\n        :buttons='[&quot;remove-circle&quot;, &quot;add-circle&quot;, &quot;down-circle&quot;]'&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      columnOptions: {\n        editConfig: {\n          trigger: 'click',\n          mode: 'slot',\n          editableColumns: [\n            'yaoPinMc',\n            'jiLiang',\n            'danWei'\n          ]\n        }\n      },\n      tableData: new Array(10).fill().map((row, rowIndex) =&gt; ({\n        yaoPinMc: `人参${rowIndex + 1}`,\n        jiLiang: 1,\n        danWei: 'g',\n        biaoZhunJia: '0.2011',\n        shuLiang: 0,\n        yiBaoDengJi: '二级'\n      }))\n    }\n  },\n  computed: {\n    leftTableData () {\n      return this.tableData\n        .filter((row, rowIndex) =&gt; rowIndex % 2 === 0)\n        .map((row, rowIndex) =&gt; {\n          return {\n            index: rowIndex * 2 + 1,\n            ...row\n          }\n        })\n    },\n    rightTableData () {\n      return this.tableData.filter((row, rowIndex) =&gt; rowIndex % 2 === 1)\n        .map((row, rowIndex) =&gt; {\n          return {\n            index: rowIndex * 2 + 2,\n            ...row\n          }\n        })\n    }\n  },\n  methods: {\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2)\n    },\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2 + 1)\n    },\n    buttonClick (button, rowIndex) {\n      switch (button) {\n        case 'remove-circle':\n          this.tableData.splice(rowIndex, 1)\n          break\n        case 'add-circle':\n          this.tableData.push({\n            yaoPinMc: '',\n            jiLiang: 1,\n            danWei: 'g',\n            biaoZhunJia: '0.2011',\n            shuLiang: 0,\n            yiBaoDengJi: '二级'\n          })\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\n          if (this.tableData.length % 2 === 0) {\n            const addedRowIndex = (this.tableData.length - 2) / 2\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() =&gt; {\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          } else {\n            const addedRowIndex = (this.tableData.length - 1) / 2\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() =&gt; {\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          }\n          break\n        case 'down-circle':\n          if (rowIndex === this.tableData.length - 1) return\n          const currentRow = this.tableData[rowIndex]\n          const nextRow = this.tableData[rowIndex + 1]\n          this.tableData.splice(rowIndex, 1, nextRow)\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\n          break\n        default:\n          break\n      }\n    },\n    leftTableBodyScroll (scrollTop) {\n      this.$refs.rightTable.setTableBodyScrollTop(scrollTop)\n    },\n    rightTableBodyScroll (scrollTop) {\n      this.$refs.leftTable.setTableBodyScrollTop(scrollTop)\n    },\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.rightTable.restoreAllEditingSlot()\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' &amp;&amp; this.$nextTick(() =&gt; {\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    },\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.leftTable.restoreAllEditingSlot()\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' &amp;&amp; this.$nextTick(() =&gt; {\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shuang-lie-biao-ge-bu-gu-ding-gao-du\"><a class=\"header-anchor\" href=\"#shuang-lie-biao-ge-bu-gu-ding-gao-du\">¶</a> 双列表格(不固定高度)</h3>\n<p>高度不要求固定, 即不需要滚动条, 总高度随着数据的增加自由伸展高度。</p>\n<demo-block>\n        <div><p>去除外壳的高度css样式和内层<code>table</code>的<code>height</code>属性即可, 相应的, 所有的关联滚动逻辑也可以去除。</p>\n</div>\n        <template slot=\"source\"><df-demo30 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div style=&quot;display: flex&quot;&gt;\n    &lt;!-- 左侧表格 --&gt;\n    &lt;df-table\n      :data=&quot;leftTableData&quot;\n      style=&quot;width: 50%&quot;\n      :column-options=&quot;columnOptions&quot;\n      @switch-to-editing-slot=&quot;leftSwitchToEditingSlot&quot;\n      border\n      @button-click=&quot;leftButtonClick&quot;\n      ref=&quot;leftTable&quot;&gt;\n      &lt;df-table-column\n        label=&quot;序号&quot;\n        prop=&quot;index&quot;\n        width=&quot;50&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yaoPinMc&quot;\n        label=&quot;药品名称&quot;\n        width=&quot;80&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.yaoPinMc&quot; :ref=&quot;`left-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;jiLiang&quot;\n        label=&quot;剂量&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.jiLiang&quot; :ref=&quot;`left-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;danWei&quot;\n        label=&quot;单位&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.danWei&quot; :ref=&quot;`left-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;biaoZhunJia&quot;\n        label=&quot;标准价&quot;\n        width=&quot;70&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yiBaoDengJi&quot;\n        label=&quot;医保等级&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        width=&quot;80&quot;\n        type=&quot;buttons&quot;\n        button-type=&quot;icon&quot;\n        :buttons='[&quot;remove-circle&quot;, &quot;add-circle&quot;, &quot;down-circle&quot;]'&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n    &lt;!-- 右侧表格 --&gt;\n    &lt;df-table\n      :data=&quot;rightTableData&quot;\n      :supplement-row-height=&quot;rightTableData.length &lt; leftTableData.length&quot;\n      style=&quot;width: 50%&quot;\n      :column-options=&quot;columnOptions&quot;\n      @switch-to-editing-slot=&quot;rightSwitchToEditingSlot&quot;\n      border\n      @button-click=&quot;rightButtonClick&quot;\n      ref=&quot;rightTable&quot;&gt;\n      &lt;df-table-column\n        label=&quot;序号&quot;\n        prop=&quot;index&quot;\n        width=&quot;50&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yaoPinMc&quot;\n        label=&quot;药品名称&quot;\n        width=&quot;80&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.yaoPinMc&quot; :ref=&quot;`right-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;jiLiang&quot;\n        label=&quot;剂量&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.jiLiang&quot; :ref=&quot;`right-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;danWei&quot;\n        label=&quot;单位&quot;\n        width=&quot;50&quot;&gt;\n        &lt;div slot=&quot;editing&quot; slot-scope=&quot;scope&quot;&gt;\n          &lt;df-input v-model=&quot;scope.row.danWei&quot; :ref=&quot;`right-${scope.column.property}-${scope.$index}`&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;biaoZhunJia&quot;\n        label=&quot;标准价&quot;\n        width=&quot;70&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        prop=&quot;yiBaoDengJi&quot;\n        label=&quot;医保等级&quot;&gt;\n      &lt;/df-table-column&gt;\n      &lt;df-table-column\n        width=&quot;80&quot;\n        type=&quot;buttons&quot;\n        button-type=&quot;icon&quot;\n        :buttons='[&quot;remove-circle&quot;, &quot;add-circle&quot;, &quot;down-circle&quot;]'&gt;\n      &lt;/df-table-column&gt;\n    &lt;/df-table&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      columnOptions: {\n        editConfig: {\n          trigger: 'click',\n          mode: 'slot',\n          editableColumns: [\n            'yaoPinMc',\n            'jiLiang',\n            'danWei'\n          ]\n        }\n      },\n      tableData: new Array(10).fill().map((row, rowIndex) =&gt; ({\n        yaoPinMc: `人参${rowIndex + 1}`,\n        jiLiang: 1,\n        danWei: 'g',\n        biaoZhunJia: '0.2011',\n        shuLiang: 0,\n        yiBaoDengJi: '二级'\n      }))\n    }\n  },\n  computed: {\n    leftTableData () {\n      return this.tableData\n        .filter((row, rowIndex) =&gt; rowIndex % 2 === 0)\n        .map((row, rowIndex) =&gt; {\n          return {\n            index: rowIndex * 2 + 1,\n            ...row\n          }\n        })\n    },\n    rightTableData () {\n      return this.tableData.filter((row, rowIndex) =&gt; rowIndex % 2 === 1)\n        .map((row, rowIndex) =&gt; {\n          return {\n            index: rowIndex * 2 + 2,\n            ...row\n          }\n        })\n    }\n  },\n  methods: {\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2)\n    },\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2 + 1)\n    },\n    buttonClick (button, rowIndex) {\n      switch (button) {\n        case 'remove-circle':\n          this.tableData.splice(rowIndex, 1)\n          break\n        case 'add-circle':\n          this.tableData.push({\n            yaoPinMc: '',\n            jiLiang: 1,\n            danWei: 'g',\n            biaoZhunJia: '0.2011',\n            shuLiang: 0,\n            yiBaoDengJi: '二级'\n          })\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\n          if (this.tableData.length % 2 === 0) {\n            const addedRowIndex = (this.tableData.length - 2) / 2\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() =&gt; {\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          } else {\n            const addedRowIndex = (this.tableData.length - 1) / 2\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() =&gt; {\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          }\n          break\n        case 'down-circle':\n          if (rowIndex === this.tableData.length - 1) return\n          const currentRow = this.tableData[rowIndex]\n          const nextRow = this.tableData[rowIndex + 1]\n          this.tableData.splice(rowIndex, 1, nextRow)\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\n          break\n        default:\n          break\n      }\n    },\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.rightTable.restoreAllEditingSlot()\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' &amp;&amp; this.$nextTick(() =&gt; {\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    },\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.leftTable.restoreAllEditingSlot()\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' &amp;&amp; this.$nextTick(() =&gt; {\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"table-attributes\"><a class=\"header-anchor\" href=\"#table-attributes\">¶</a> Table Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>显示的数据</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>height</td>\n<td>Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。</td>\n<td>string/number</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>max-height</td>\n<td>Table 的最大高度。合法的值为数字或者单位为 px 的高度。</td>\n<td>string/number</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>stripe</td>\n<td>是否为斑马纹 table</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>border</td>\n<td>是否带有纵向边框</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>size</td>\n<td>Table 的尺寸</td>\n<td>string</td>\n<td>medium / small / mini</td>\n<td>—</td>\n</tr>\n<tr>\n<td>fit</td>\n<td>列的宽度是否自撑开</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>show-header</td>\n<td>是否显示表头</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>highlight-current-row</td>\n<td>是否要高亮当前行</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>current-row-key</td>\n<td>当前行的 key，只写属性</td>\n<td>String,Number</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>row-class-name</td>\n<td>行的 className 的回调方法，也可以使用字符串为所有行设置一个固定的 className。</td>\n<td>Function({row, rowIndex})/String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>row-style</td>\n<td>行的 style 的回调方法，也可以使用一个固定的 Object 为所有行设置一样的 Style。</td>\n<td>Function({row, rowIndex})/Object</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>cell-class-name</td>\n<td>单元格的 className 的回调方法，也可以使用字符串为所有单元格设置一个固定的 className。</td>\n<td>Function({row, column, rowIndex, columnIndex})/String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>cell-style</td>\n<td>单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有单元格设置一样的 Style。</td>\n<td>Function({row, column, rowIndex, columnIndex})/Object</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>header-row-class-name</td>\n<td>表头行的 className 的回调方法，也可以使用字符串为所有表头行设置一个固定的 className。</td>\n<td>Function({row, rowIndex})/String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>header-row-style</td>\n<td>表头行的 style 的回调方法，也可以使用一个固定的 Object 为所有表头行设置一样的 Style。</td>\n<td>Function({row, rowIndex})/Object</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>header-cell-class-name</td>\n<td>表头单元格的 className 的回调方法，也可以使用字符串为所有表头单元格设置一个固定的 className。</td>\n<td>Function({row, column, rowIndex, columnIndex})/String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>header-cell-style</td>\n<td>表头单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有表头单元格设置一样的 Style。</td>\n<td>Function({row, column, rowIndex, columnIndex})/Object</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>row-key</td>\n<td>行数据的 Key，用来优化 Table 的渲染；在使用 reserve-selection 功能与显示树形数据时，该属性是必填的。类型为 String 时，支持多层访问：<code>user.info.id</code>，但不支持 <code>user.info[0].id</code>，此种情况请使用 <code>Function</code>。</td>\n<td>Function(row)/String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>empty-text</td>\n<td>空数据时显示的文本内容，也可以通过 <code>slot=&quot;empty&quot;</code> 设置</td>\n<td>String</td>\n<td>—</td>\n<td>暂无数据</td>\n</tr>\n<tr>\n<td>no-empty-img</td>\n<td>/<em>新增</em>/ 空数据时不信啊是图片提示</td>\n<td>Boolean</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>default-expand-all</td>\n<td>是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效</td>\n<td>Boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>expand-row-keys</td>\n<td>可以通过该属性设置 Table 目前的展开行，需要设置 row-key 属性才能使用，该属性为展开行的 keys 数组。</td>\n<td>Array</td>\n<td>—</td>\n<td></td>\n</tr>\n<tr>\n<td>default-sort</td>\n<td>默认的排序列的 prop 和顺序。它的<code>prop</code>属性指定默认的排序的列，<code>order</code>指定默认排序的顺序</td>\n<td>Object</td>\n<td><code>order</code>: ascending, descending</td>\n<td>如果只指定了<code>prop</code>, 没有指定<code>order</code>, 则默认顺序是ascending</td>\n</tr>\n<tr>\n<td>tooltip-effect</td>\n<td>tooltip <code>effect</code> 属性</td>\n<td>String</td>\n<td>dark/light</td>\n<td></td>\n</tr>\n<tr>\n<td>show-summary</td>\n<td>是否在表尾显示合计行</td>\n<td>Boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>sum-text</td>\n<td>合计行第一列的文本</td>\n<td>String</td>\n<td>—</td>\n<td>合计</td>\n</tr>\n<tr>\n<td>summary-method</td>\n<td>自定义的合计计算方法</td>\n<td>Function({ columns, data })</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>span-method</td>\n<td>合并行或列的计算方法</td>\n<td>Function({ row, column, rowIndex, columnIndex })</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>select-on-indeterminate</td>\n<td>在多选表格中，当仅有部分行被选中时，点击表头的多选框时的行为。若为 true，则选中所有行；若为 false，则取消选择所有行</td>\n<td>Boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>indent</td>\n<td>展示树形数据时，树节点的缩进</td>\n<td>Number</td>\n<td>—</td>\n<td>16</td>\n</tr>\n<tr>\n<td>lazy</td>\n<td>是否懒加载子节点数据</td>\n<td>Boolean</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>load</td>\n<td>加载子节点数据的函数，lazy 为 true 时生效，函数第二个参数包含了节点的层级信息</td>\n<td>Function(row, treeNode, resolve)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>tree-props</td>\n<td>渲染嵌套数据的配置选项</td>\n<td>Object</td>\n<td>—</td>\n<td>{ hasChildren: 'hasChildren', children: 'children' }</td>\n</tr>\n<tr>\n<td>need-hide-columns</td>\n<td>/<em>新增</em>/ 是否需要开启列显隐功能</td>\n<td>Boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>need-toggle-hidden-button</td>\n<td>/<em>新增</em>/ 开启列显隐功能后是否需要开启显隐控制按钮</td>\n<td>Boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>default-hidden-columns</td>\n<td>/<em>新增</em>/ 开启列显隐功能后默认隐藏的列</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>tooltip-attrs</td>\n<td>/<em>新增</em>/ 配置 column 的 show-overflow-tooltip 之后，通过此属性设置 tooltip 的 attributes，请参考 tooltip 的 <a href=\"#/component/tooltip\">attributes</a></td>\n<td>Object</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>use-tree</td>\n<td>/<em>新增</em>/ 使用树表格</td>\n<td>Boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-events\"><a class=\"header-anchor\" href=\"#table-events\">¶</a> Table Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>select</td>\n<td>当用户手动勾选数据行的 Checkbox 时触发的事件</td>\n<td>selection, row</td>\n</tr>\n<tr>\n<td>select-all</td>\n<td>当用户手动勾选全选 Checkbox 时触发的事件</td>\n<td>selection</td>\n</tr>\n<tr>\n<td>selection-change</td>\n<td>当选择项发生变化时会触发该事件</td>\n<td>selection</td>\n</tr>\n<tr>\n<td>cell-mouse-enter</td>\n<td>当单元格 hover 进入时会触发该事件</td>\n<td>row, column, cell, event</td>\n</tr>\n<tr>\n<td>cell-mouse-leave</td>\n<td>当单元格 hover 退出时会触发该事件</td>\n<td>row, column, cell, event</td>\n</tr>\n<tr>\n<td>cell-click</td>\n<td>当某个单元格被点击时会触发该事件</td>\n<td>row, column, cell, event, rowIndex</td>\n</tr>\n<tr>\n<td>cell-dblclick</td>\n<td>当某个单元格被双击击时会触发该事件</td>\n<td>row, column, cell, event</td>\n</tr>\n<tr>\n<td>row-click</td>\n<td>当某一行被点击时会触发该事件</td>\n<td>row, column, event, rowIndex</td>\n</tr>\n<tr>\n<td>row-contextmenu</td>\n<td>当某一行被鼠标右键点击时会触发该事件</td>\n<td>row, column, event</td>\n</tr>\n<tr>\n<td>row-dblclick</td>\n<td>当某一行被双击时会触发该事件</td>\n<td>row, column, event</td>\n</tr>\n<tr>\n<td>header-click</td>\n<td>当某一列的表头被点击时会触发该事件</td>\n<td>column, event</td>\n</tr>\n<tr>\n<td>header-contextmenu</td>\n<td>当某一列的表头被鼠标右键点击时触发该事件</td>\n<td>column, event</td>\n</tr>\n<tr>\n<td>sort-change</td>\n<td>当表格的排序条件发生变化的时候会触发该事件</td>\n<td>{ column, prop, order }</td>\n</tr>\n<tr>\n<td>filter-change</td>\n<td>当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的 key 是 column 的 columnKey，对应的 value 为用户选择的筛选条件的数组。</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>current-change</td>\n<td>当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的 highlight-current-row 属性，参数为：当前选中的 row、上一次选中的 row、row 的切换方式（click: 点击切换、set: 主动调用 setCurrentRow 方法切换、auto: 数据更新时自动切换）</td>\n<td>currentRow, oldCurrentRow, changeMode</td>\n</tr>\n<tr>\n<td>header-dragend</td>\n<td>当拖动表头改变了列的宽度的时候会触发该事件</td>\n<td>newWidth, oldWidth, column, event</td>\n</tr>\n<tr>\n<td>expand-change</td>\n<td>当用户对某一行展开或者关闭的时候会触发该事件（展开行时，回调的第二个参数为 expandedRows；树形表格时第二参数为 expanded）</td>\n<td>row, (expandedRows | expanded)</td>\n</tr>\n<tr>\n<td>hidden-status-change</td>\n<td>/<em>新增</em>/ 当列显隐时触发</td>\n<td>{ currentHiddenColumns, currentDisplayedColumns }</td>\n</tr>\n<tr>\n<td>edit-disabled</td>\n<td>/<em>新增</em>/ 开启表格编辑时，想要编辑被禁用的单元格后触发（参数：禁用处的列信息、禁用处的行下标、禁用处的行信息）</td>\n<td>newVal, rowIndex, row, column</td>\n</tr>\n<tr>\n<td>item-checked-changed</td>\n<td>/<em>新增</em>/ 开启表格单列多选时时，任一checkbox 的选中状态发生变化时触发（参数：变化处的列的prop、变化处的行的下标、变化后的值和变化处的行信息）</td>\n<td>columnProp, rowIndex, value, row</td>\n</tr>\n<tr>\n<td>operation-click</td>\n<td>/<em>新增</em>/ 使用表格行更多操作时，触发任一操作后触发（参数：操作名称、操作在操作组中的下标、操作处的行和操作处的行下标）</td>\n<td>operation, operationIndex, row, rowIndex</td>\n</tr>\n<tr>\n<td>operation-dblclick</td>\n<td>/<em>新增</em>/ 使用表格行更多操作时，双击任一操作后触发（参数：操作名称、操作在操作组中的下标、操作处的行和操作处的行下标）</td>\n<td>operation, operationIndex, row, rowIndex</td>\n</tr>\n<tr>\n<td>button-click</td>\n<td>/<em>新增</em>/ 使用表格按钮组操作列时，点击按钮组里的按钮时触发（参数：按钮名称、按钮在按钮组中的下标、按钮处的行和按钮处的行下标）</td>\n<td>button, buttonIndex, row, rowIndex</td>\n</tr>\n<tr>\n<td>button-dblclick</td>\n<td>/<em>新增</em>/ 使用表格按钮组操作列时，双击按钮组里的按钮时触发（参数：按钮名称、按钮在按钮组中的下标、按钮处的行和按钮处的行下标）</td>\n<td>button, buttonIndex, row, rowIndex</td>\n</tr>\n<tr>\n<td>table-body-scroll</td>\n<td>/<em>新增</em>/ 当表格列表发生滚动时触发（参数：竖向滚动坐标和横向滚动坐标）</td>\n<td>scrollTop, scrollLeft</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-methods\"><a class=\"header-anchor\" href=\"#table-methods\">¶</a> Table Methods</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clearSelection</td>\n<td>用于多选表格，清空用户的选择</td>\n<td>—</td>\n</tr>\n<tr>\n<td>toggleRowSelection</td>\n<td>用于多选表格，切换某一行的选中状态，如果使用了第二个参数，则是设置这一行选中与否（selected 为 true 则选中）</td>\n<td>row, selected</td>\n</tr>\n<tr>\n<td>toggleAllSelection</td>\n<td>用于多选表格，切换所有行的选中状态</td>\n<td>selected（想要切换至的目标状态, 必须是 boolean 类型）</td>\n</tr>\n<tr>\n<td>toggleRowExpansion</td>\n<td>用于可展开表格与树形表格，切换某一行的展开状态，如果使用了第二个参数，则是设置这一行展开与否（expanded 为 true 则展开）</td>\n<td>row, expanded</td>\n</tr>\n<tr>\n<td>setCurrentRow</td>\n<td>用于单选表格，设定某一行为选中行，如果调用时不加参数，则会取消目前高亮行的选中状态。</td>\n<td>row</td>\n</tr>\n<tr>\n<td>clearSort</td>\n<td>用于清空排序条件，数据会恢复成未排序的状态</td>\n<td>—</td>\n</tr>\n<tr>\n<td>clearFilter</td>\n<td>不传入参数时用于清空所有过滤条件，数据会恢复成未过滤的状态，也可传入由columnKey组成的数组以清除指定列的过滤条件</td>\n<td>columnKey</td>\n</tr>\n<tr>\n<td>doLayout</td>\n<td>对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换为显示时，可能需要调用此方法</td>\n<td>—</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>手动对 Table 进行排序。参数<code>prop</code>属性指定排序列，<code>order</code>指定排序顺序。</td>\n<td>prop: string, order: string</td>\n</tr>\n<tr>\n<td>openAllTree</td>\n<td>/<em>新增</em>/ 用于可展开表格与树形表格，展开所有的树</td>\n<td>—</td>\n</tr>\n<tr>\n<td>closeAllTree</td>\n<td>/<em>新增</em>/ 用于可展开表格与树形表格，关闭所有的树</td>\n<td>—</td>\n</tr>\n<tr>\n<td>getCheckedItems</td>\n<td>/<em>新增</em>/ 用于获取单列多选中某一列的已选择项</td>\n<td>columnProp</td>\n</tr>\n<tr>\n<td>setItemChecked</td>\n<td>/<em>新增</em>/ 用于单列多选中设置某一列的某一行处的选择状态</td>\n<td>columnProp, row, value</td>\n</tr>\n<tr>\n<td>setAllItemsChecked</td>\n<td>/<em>新增</em>/ 用于单列多选中设置某一列的选择状态</td>\n<td>columnProp</td>\n</tr>\n<tr>\n<td>removeAllItemsChecked</td>\n<td>/<em>新增</em>/ 用于单列多选中移除某一列的选择状态</td>\n<td>columnProp</td>\n</tr>\n<tr>\n<td>setColumnShowStatus</td>\n<td>/<em>新增</em>/ 用于列显隐中设置某一列的显隐状态</td>\n<td>columnProp, showStatus</td>\n</tr>\n<tr>\n<td>toggleColumnShowStatus</td>\n<td>/<em>新增</em>/ 用于列显隐中切换某一列的显隐状态</td>\n<td>columnProp</td>\n</tr>\n<tr>\n<td>setColumnShowList</td>\n<td>/<em>新增</em>/ 用于列显隐中设置当前显示列的数组</td>\n<td>array[columnProp, columnProp, ...]</td>\n</tr>\n<tr>\n<td>getCurrentRowOffsetTop</td>\n<td>/<em>新增</em>/ 获取单选行的位置距离表格顶端的距离，如果想要滚动至此距离，你也可以直接使用下面的 scrollToCurrentRow 方法</td>\n<td>—</td>\n</tr>\n<tr>\n<td>scrollToCurrentRow</td>\n<td>/<em>新增</em>/ 滚动至单选行所在位置</td>\n<td>—</td>\n</tr>\n<tr>\n<td>scrollToRowIndex</td>\n<td>/<em>新增</em>/ 滚动至行下标所在位置</td>\n<td>rowIndex</td>\n</tr>\n<tr>\n<td>getTreeRowKeysByLevel</td>\n<td>/<em>新增</em>/ 获取树表某一层级的rowKeys</td>\n<td>层级</td>\n</tr>\n<tr>\n<td>setTableBodyScrollTop</td>\n<td>/<em>新增</em>/ 设置表格的竖向滚动坐标</td>\n<td>scrollTop</td>\n</tr>\n<tr>\n<td>setTableBodyScrollLeft</td>\n<td>/<em>新增</em>/ 设置表格的横向滚动坐标</td>\n<td>scrollLeft</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-slot\"><a class=\"header-anchor\" href=\"#table-slot\">¶</a> Table Slot</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>empty</td>\n<td>自定义空数据展示内容。</td>\n</tr>\n<tr>\n<td>append</td>\n<td>插入至表格最后一行之后的内容，如果需要对表格的内容进行无限滚动操作，可能需要用到这个 slot。若表格有合计行，该 slot 会位于合计行之上。</td>\n</tr>\n<tr>\n<td>customSummary</td>\n<td>开启合计行之后，自定义合计行内容。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-column-attributes\"><a class=\"header-anchor\" href=\"#table-column-attributes\">¶</a> Table-column Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>对应列的类型。如果设置了 <code>selection</code> 则显示多选框；如果设置了 <code>operation</code> 则显示更多操作；如果设置了 <code>index</code> 则显示该行的索引（从 1 开始计算）；如果设置了 <code>expand</code> 则显示为一个可展开的按钮；如果设置了 <code>buttons</code> 则显示为一组按钮组</td>\n<td>string</td>\n<td>selection/operation/index/expand/buttons</td>\n<td>—</td>\n</tr>\n<tr>\n<td>index</td>\n<td>如果设置了 <code>type=index</code>，可以通过传递 <code>index</code> 属性来自定义索引</td>\n<td>number, Function(index)</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>column-key</td>\n<td>column 的 key，如果需要使用 filter-change 事件，则需要此属性标识是哪个 column 的筛选条件</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>label</td>\n<td>显示的标题</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>prop</td>\n<td>对应列内容的字段名，也可以使用 property 属性</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>width</td>\n<td>对应列的宽度</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>min-width</td>\n<td>对应列的最小宽度，与 width 的区别是 width 是固定的，min-width 会把剩余宽度按比例分配给设置了 min-width 的列</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>列是否固定在左侧或者右侧，true 表示固定在左侧</td>\n<td>string, boolean</td>\n<td>true, left, right</td>\n<td>—</td>\n</tr>\n<tr>\n<td>render-header</td>\n<td>列标题 Label 区域渲染使用的 Function</td>\n<td>Function(h, { column, $index })</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>sortable</td>\n<td>对应列是否可以排序，如果设置为 'custom'，则代表用户希望远程排序，需要监听 Table 的 sort-change 事件</td>\n<td>boolean, string</td>\n<td>true, false, 'custom'</td>\n<td>false</td>\n</tr>\n<tr>\n<td>sort-method</td>\n<td>对数据进行排序的时候使用的方法，仅当 sortable 设置为 true 的时候有效，需返回一个数字，和 Array.sort 表现一致</td>\n<td>Function(a, b)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>sort-by</td>\n<td>指定数据按照哪个属性进行排序，仅当 sortable 设置为 true 且没有设置 sort-method 的时候有效。如果 sort-by 为数组，则先按照第 1 个属性排序，如果第 1 个相等，再按照第 2 个排序，以此类推</td>\n<td>String/Array/Function(row, index)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>sort-orders</td>\n<td>数据在排序时所使用排序策略的轮转顺序，仅当 sortable 为 true 时有效。需传入一个数组，随着用户点击表头，该列依次按照数组中元素的顺序进行排序</td>\n<td>array</td>\n<td>数组中的元素需为以下三者之一：<code>ascending</code> 表示升序，<code>descending</code> 表示降序，<code>null</code> 表示还原为原始顺序</td>\n<td>['ascending', 'descending', null]</td>\n</tr>\n<tr>\n<td>resizable</td>\n<td>对应列是否可以通过拖动改变宽度（需要在 df-table 上设置 border 属性为真）</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>formatter</td>\n<td>用来格式化内容</td>\n<td>Function(cellValue, row, column, index)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>show-overflow-tooltip</td>\n<td>当内容过长被隐藏时显示 tooltip</td>\n<td>Boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>align</td>\n<td>对齐方式</td>\n<td>String</td>\n<td>left/center/right</td>\n<td>left</td>\n</tr>\n<tr>\n<td>header-align</td>\n<td>表头对齐方式，若不设置该项，则使用表格的对齐方式</td>\n<td>String</td>\n<td>left/center/right</td>\n<td>—</td>\n</tr>\n<tr>\n<td>class-name</td>\n<td>列的 className</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>label-class-name</td>\n<td>当前列标题的自定义类名</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>selectable</td>\n<td>仅对 type=selection 的列有效，类型为 Function，Function 的返回值用来决定这一行的 CheckBox 是否可以勾选</td>\n<td>Function(row, index)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>reserve-selection</td>\n<td>仅对 type=selection 的列有效，类型为 Boolean，为 true 则会在数据更新之后保留之前选中的数据（需指定 <code>row-key</code>）</td>\n<td>Boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>filters</td>\n<td>数据过滤的选项，数组格式，数组中的元素需要有 text 和 value 属性。</td>\n<td>Array[{ text, value }]</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>filter-placement</td>\n<td>过滤弹出框的定位</td>\n<td>String</td>\n<td>与 Tooltip 的 <code>placement</code> 属性相同</td>\n<td>—</td>\n</tr>\n<tr>\n<td>filter-multiple</td>\n<td>数据过滤的选项是否多选</td>\n<td>Boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>filter-method</td>\n<td>数据过滤使用的方法，如果是多选的筛选项，对每一条数据会执行多次，任意一次返回 true 就会显示。</td>\n<td>Function(value, row, column)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>filtered-value</td>\n<td>选中的数据过滤项，如果需要自定义表头过滤的渲染方式，可能会需要此属性。</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>use-input-filter</td>\n<td>是否使用 input 框模式的筛选。</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>set-operations</td>\n<td>/<em>新增</em>/ 动态配置按钮组操作列的按钮组名称，当此项存在时，operations 属性将置为无效</td>\n<td>Function(row, rowIndex)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>operations</td>\n<td>/<em>新增</em>/ 动态配置弹出式操作列的按钮组</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>hidden-operations</td>\n<td>/<em>新增</em>/ 设置弹出操作列的操作隐藏</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>loading-operations</td>\n<td>/<em>新增</em>/ 设置弹出操作列的操作 loading 状态</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>disabled-operations</td>\n<td>/<em>新增</em>/ 设置弹出操作列的操作 disabled 状态</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>hide-on-click</td>\n<td>/<em>新增</em>/ 是否在弹出操作列点击操作项后隐藏弹出框</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>button-type</td>\n<td>/<em>新增</em>/ 按钮组操作列的按钮类型</td>\n<td>String</td>\n<td>text/icon</td>\n<td>text</td>\n</tr>\n<tr>\n<td>set-buttons</td>\n<td>/<em>新增</em>/ 动态配置按钮组操作列的按钮组名称，当此项存在时，buttons 属性将置为无效</td>\n<td>Function(row, rowIndex)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>buttons</td>\n<td>/<em>新增</em>/ 按钮组操作列的按钮组名称</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>display-buttons-length</td>\n<td>/<em>新增</em>/ 设置按钮组操作列的按钮展示数量</td>\n<td>Number</td>\n<td>—</td>\n<td>2</td>\n</tr>\n<tr>\n<td>hidden-buttons</td>\n<td>/<em>新增</em>/ 设置按钮组操作列的按钮隐藏</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>loading-buttons</td>\n<td>/<em>新增</em>/ 设置按钮组操作列的按钮 loading 状态</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>disabled-buttons</td>\n<td>/<em>新增</em>/ 设置按钮组操作列的按钮 disabled 状态</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"table-column-scoped-slot\"><a class=\"header-anchor\" href=\"#table-column-scoped-slot\">¶</a> Table-column Scoped Slot</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>—</td>\n<td>自定义列的内容，参数为 { row, column, $index }</td>\n</tr>\n<tr>\n<td>header</td>\n<td>自定义表头的内容. 参数为 { column, $index }</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"columnoptions.multipleconfig-dan-lie-duo-xuan-can-shu-gui-ze\"><a class=\"header-anchor\" href=\"#columnoptions.multipleconfig-dan-lie-duo-xuan-can-shu-gui-ze\">¶</a> columnOptions.multipleConfig 单列多选 参数规则</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>multipleColumns</td>\n<td>多选列选项</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>item</td>\n<td>/<em>代号</em>/ 这里用 item 表示 multipleColumns 的每一项</td>\n<td>object</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>item &gt; columnProp</td>\n<td>多选列的 prop</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>item &gt; disableRowsIndex</td>\n<td>多选列中禁止选择的行的下标，如果你想禁用此列的某一行处的选择功能，把行下标放进去即可</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"df-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n      data() {\n        return {\n          tableData: [{\n            date: '2016-05-02',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1518 弄'\n          }, {\n            date: '2016-05-04',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1517 弄'\n          }, {\n            date: '2016-05-01',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1519 弄'\n          }, {\n            date: '2016-05-03',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1516 弄'\n          }]\n        }\n      }\n    }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo1\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"useVirtual\":\"\",\"data\":_vm.tableData,\"height\":\"400px\"}},[_c('df-table-column',{attrs:{\"type\":\"index\",\"width\":\"80\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n      data() {\n        return {\n          \n          tableData: Array.from({length: 100}, () => ({\n            date: '2016-05-02',\n            name: '李时珍',\n            address: '四川省武当山普陀区金沙江路 1518 弄'\n          }))\n        }\n      }\n    }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo2\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('div',{staticClass:\"demonstration\"},[_vm._v(\"自定义文本提示\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":[],\"empty-text\":\"这里没有数据了\"}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"width\":\"1800\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"demonstration\"},[_vm._v(\"需要图片提示\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":[],\"no-empty-img\":false}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"width\":\"1800\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"demonstration\"},[_vm._v(\"自定义提示区域\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":[]}},[_c('template',{slot:\"empty\"},[_c('div',{staticClass:\"custom-empty-block\"},[_vm._v(\"真的没有数据了\")])]),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"width\":\"1800\"}})],2)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo3\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{ref:\"table\",staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"20px\"},attrs:{\"data\":_vm.tableData,\"need-hide-columns\":\"\",\"need-toggle-hidden-button\":_vm.needToggleHiddenButton,\"default-hidden-columns\":_vm.defaultHiddenColumns},on:{\"hidden-status-change\":_vm.hiddenStatusChange}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"150\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"150\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"gender\",\"label\":\"性别\",\"width\":\"150\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.showDate}},[_vm._v(\"显示日期列\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.hideDate}},[_vm._v(\"隐藏日期列\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.toggleName}},[_vm._v(\"切换姓名列显隐\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.toggleButton}},[_vm._v(\"切换控制按钮显隐\")])],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      needToggleHiddenButton: false,\n      defaultHiddenColumns: ['date'],\n      tableData: [\n        {\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        },\n        {\n          date: '2016-05-02',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        },\n        {\n          date: '2016-05-04',\n          name: '李时珍',\n          gender: '男',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }\n      ]\n    }\n  },\n  methods: {\n    hiddenStatusChange (hiddenStatus) {\n      console.log(hiddenStatus)\n    },\n    showDate () {\n      this.$refs.table.setColumnShowStatus('date', true)\n    },\n    hideDate () {\n      this.$refs.table.setColumnShowStatus('date', false)\n    },\n    toggleName () {\n      this.$refs.table.toggleColumnShowStatus('name')\n    },\n    toggleButton () {\n      this.needToggleHiddenButton = !this.needToggleHiddenButton\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo4\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"20px\"},attrs:{\"data\":_vm.tableData},on:{\"button-click\":_vm.buttonClick}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"200\",\"type\":\"buttons\",\"button-type\":\"text\",\"buttons\":[\"删除\", \"创建\", \"开单\"],\"hidden-buttons\":_vm.hiddenButtons}})],1),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.hideFirstRowFirstButtons}},[_vm._v(\"隐藏第一行第一个按钮\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.showFirstRowFirstButtons}},[_vm._v(\"显示第一行第一个按钮\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin\":\"20px 0\"},attrs:{\"data\":_vm.tableData},on:{\"button-click\":_vm.buttonClick}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"200\",\"type\":\"buttons\",\"button-type\":\"text\",\"set-buttons\":_vm.setButtons,\"loading-buttons\":_vm.loadingButtons}})],1),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.loadingFirstRowButtons}},[_vm._v(\"设置第一行的按钮组为 loading\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.unLoadingAllButtons}},[_vm._v(\"清除所有按钮的 loading\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin\":\"20px 0\"},attrs:{\"data\":_vm.tableData},on:{\"button-click\":_vm.buttonClick}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"200\",\"type\":\"buttons\",\"button-type\":\"icon\",\"buttons\":[\"add-square\", \"reduce-square\", \"content\"],\"disabled-buttons\":_vm.disabledButtons}})],1),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.disableFirstRowFirstButtons}},[_vm._v(\"设置第一行第一个按钮为 disabled\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.enableFirstRowFirstButtons}},[_vm._v(\"清除第一行第一个按钮的 disabled\")]),_vm._v(\" \"),_c('div',{staticClass:\"demonstration\",staticStyle:{\"margin-top\":\"20px\"}},[_vm._v(\"文字类型按钮组的按钮展示数量有上限，默认展示 2 个，但是可以通过属性 display-buttons-length 配置，超出部分使用弹出方式展示，弹出的按钮支持属性 hide-on-click 配置\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"20px\"},attrs:{\"data\":_vm.tableData,\"border\":\"\"},on:{\"button-click\":_vm.buttonClick}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"200\",\"type\":\"buttons\",\"button-type\":\"text\",\"display-buttons-length\":3,\"hide-on-click\":false,\"buttons\":[\"删除\", \"创建\", \"开单\", \"编辑\", \"查看\", \"更新\"]}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      tableData: [{\n        date: '2016-05-02',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1518 弄'\n      }, {\n        date: '2016-05-04',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1517 弄'\n      }, {\n        date: '2016-05-01',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1519 弄'\n      }],\n      hiddenButtons: [],\n      loadingButtons: [],\n      disabledButtons: [{buttonIndex: 2, rowIndex: 0}]\n    }\n  },\n  methods: {\n    setButtons (row, rowIndex) {\n      if (rowIndex === 1) return ['删除', '创建', '开单']\n      else return ['编辑', '查看', '更新']\n    },\n    buttonClick (button, buttonIndex, row, rowIndex) {\n      console.log(`第 ${rowIndex + 1} 行的按钮组中的第 ${buttonIndex + 1} 个按钮被点击了，这个按钮名称是 ${button}，这一行的信息是`, row)\n    },\n    hideFirstRowFirstButtons () {\n      this.hiddenButtons.push({buttonIndex: 0, rowIndex: 0})\n    },\n    showFirstRowFirstButtons () {\n      const index = this.hiddenButtons.findIndex(hiddenButton => hiddenButton.buttonIndex === 0 && hiddenButton.rowIndex === 0)\n      this.hiddenButtons.splice(index, 1)\n    },\n    loadingFirstRowButtons () {\n      this.loadingButtons.push({buttonIndex: 0, rowIndex: 0}, {buttonIndex: 1, rowIndex: 0}, {buttonIndex: 2, rowIndex: 0})\n    },\n    unLoadingAllButtons () {\n      this.loadingButtons.splice(0, this.loadingButtons.length)\n    },\n    disableFirstRowFirstButtons () {\n      this.disabledButtons.push({buttonIndex: 0, rowIndex: 0})\n    },\n    enableFirstRowFirstButtons () {\n      const index = this.disabledButtons.findIndex(disabledButton => disabledButton.buttonIndex === 0 && disabledButton.rowIndex === 0)\n      this.disabledButtons.splice(index, 1)\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo5\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"20px\"},attrs:{\"data\":_vm.tableData},on:{\"operation-click\":_vm.operationClick}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"type\":\"operation\",\"operations\":[\"删除\", \"创建\", \"开单\"],\"width\":\"55\",\"hidden-operations\":_vm.hiddenOperations}})],1),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.hideFirstRowFirstOperation.apply(null, arguments)}}},[_vm._v(\"隐藏第一行第一个操作\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.showFirstRowFirstOperation.apply(null, arguments)}}},[_vm._v(\"显示第一行第一个操作\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin\":\"20px 0\"},attrs:{\"data\":_vm.tableData},on:{\"operation-click\":_vm.operationClick}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"type\":\"operation\",\"set-operations\":_vm.setOperations,\"width\":\"55\",\"loading-operations\":_vm.loadingOperations}})],1),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.loadingFirstRowOperations.apply(null, arguments)}}},[_vm._v(\"设置第一行的操作组为 loading\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.unLoadingAllOperations.apply(null, arguments)}}},[_vm._v(\"清除所有操作的 loading\")]),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin\":\"20px 0\"},attrs:{\"data\":_vm.tableData},on:{\"operation-click\":_vm.operationClick}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"type\":\"operation\",\"operations\":[\"删除\", \"创建\", \"开单\"],\"width\":\"55\",\"disabled-operations\":_vm.disabledOperations}})],1),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.disableFirstRowFirstOperation.apply(null, arguments)}}},[_vm._v(\"设置第一行第一个操作为 disabled\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.enableFirstRowFirstOperation.apply(null, arguments)}}},[_vm._v(\"清除第一行第一个操作的 disabled\")])],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      tableData: [{\n        date: '2016-05-02',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1518 弄'\n      }, {\n        date: '2016-05-04',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1517 弄'\n      }, {\n        date: '2016-05-01',\n        name: '李时珍',\n        address: '四川省武当山普陀区金沙江路 1519 弄'\n      }],\n      hiddenOperations: [],\n      loadingOperations: [],\n      disabledOperations: [{operationIndex: 2, rowIndex: 0}]\n    }\n  },\n  methods: {\n    setOperations (row, rowIndex) {\n      if (rowIndex === 1) return ['删除', '创建', '开单']\n      else return ['编辑', '查看', '更新']\n    },\n    operationClick (operation, operationIndex, row, rowIndex) {\n      console.log(`第 ${rowIndex + 1} 行的弹出操作组中的第 ${operationIndex + 1} 个操作被点击了，这个操作名称是 ${operation}，这一行的信息是`, row)\n    },\n    hideFirstRowFirstOperation () {\n      this.hiddenOperations.push({operationIndex: 0, rowIndex: 0})\n    },\n    showFirstRowFirstOperation () {\n      const index = this.hiddenOperations.findIndex(hiddenOperation => hiddenOperation.operationIndex === 0 && hiddenOperation.rowIndex === 0)\n      this.hiddenOperations.splice(index, 1)\n    },\n    loadingFirstRowOperations () {\n      this.loadingOperations.push({operationIndex: 0, rowIndex: 0}, {operationIndex: 1, rowIndex: 0}, {operationIndex: 2, rowIndex: 0})\n    },\n    unLoadingAllOperations () {\n      this.loadingOperations.splice(0, this.loadingOperations.length)\n    },\n    disableFirstRowFirstOperation () {\n      this.disabledOperations.push({operationIndex: 0, rowIndex: 0})\n    },\n    enableFirstRowFirstOperation () {\n      const index = this.disabledOperations.findIndex(disabledOperation => disabledOperation.operationIndex === 0 && disabledOperation.rowIndex === 0)\n      this.disabledOperations.splice(index, 1)\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo6\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"label\":\"日期\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.date))])]}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"姓名\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.name))])]}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('df-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleClick(scope.row)}}},[_vm._v(\"查看\")]),_vm._v(\" \"),_c('df-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":_vm.handleDelete}},[_vm._v(\"删除\")])]}}])})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      handleClick(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo7\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-radio-group',{attrs:{\"size\":\"small\"},model:{value:(_vm.labelSize),callback:function ($$v) {_vm.labelSize=$$v},expression:\"labelSize\"}},[_c('df-radio-button',{attrs:{\"label\":\"medium\"}}),_vm._v(\" \"),_c('df-radio-button',{attrs:{\"label\":\"small\"}}),_vm._v(\" \"),_c('df-radio-button',{attrs:{\"label\":\"mini\"}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"20px\"}}),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"size\":_vm.labelSize,\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        labelSize: 'small',\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo8\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"stripe\":false}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo9\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":false}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo10\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"row-class-name\":_vm.tableRowClassName,\"stripe\":false}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    methods: {\n      tableRowClassName({row, rowIndex}) {\n        if (rowIndex === 1) {\n          return 'warning-row';\n        } else if (rowIndex === 3) {\n          return 'success-row';\n        }\n        return '';\n      }\n    },\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo11\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"height\":\"250\",\"border\":\"\"}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo12\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\"}},[_c('df-table-column',{attrs:{\"fixed\":\"\",\"prop\":\"date\",\"label\":\"日期\",\"width\":\"150\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"province\",\"label\":\"省份\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"city\",\"label\":\"市区\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"width\":\"300\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"zip\",\"label\":\"邮编\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('df-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleClick(scope.row)}}},[_vm._v(\"查看\")]),_vm._v(\" \"),_c('df-button',{attrs:{\"type\":\"text\",\"size\":\"small\"}},[_vm._v(\"编辑\")])]}}])})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    methods: {\n      handleClick(row) {\n        console.log(row);\n      }\n    },\n\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1517 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1516 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo13\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"height\":\"250\"}},[_c('df-table-column',{attrs:{\"fixed\":\"\",\"prop\":\"date\",\"label\":\"日期\",\"width\":\"150\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"province\",\"label\":\"省份\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"city\",\"label\":\"市区\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"zip\",\"label\":\"邮编\",\"width\":\"120\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo14\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"max-height\":\"250\"}},[_c('df-table-column',{attrs:{\"fixed\":\"\",\"prop\":\"date\",\"label\":\"日期\",\"width\":\"150\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"province\",\"label\":\"省份\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"city\",\"label\":\"市区\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"width\":\"300\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"zip\",\"label\":\"邮编\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('df-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.deleteRow(scope.$index, _vm.tableData)}}},[_vm._v(\"\\n          移除\\n        \")])]}}])})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    methods: {\n      deleteRow(index, rows) {\n        rows.splice(index, 1);\n      }\n    },\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo15\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"150\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"配送信息\"}},[_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"地址\"}},[_c('df-table-column',{attrs:{\"prop\":\"province\",\"label\":\"省份\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"city\",\"label\":\"市区\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"width\":\"300\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"zip\",\"label\":\"邮编\",\"width\":\"120\"}})],1)],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo16\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{ref:\"singleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"highlight-current-row\":\"\"},on:{\"current-change\":_vm.handleCurrentChange}},[_c('df-table-column',{attrs:{\"type\":\"index\",\"width\":\"50\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"property\":\"date\",\"label\":\"日期\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"property\":\"name\",\"label\":\"姓名\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"property\":\"address\",\"label\":\"地址\"}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('df-button',{on:{\"click\":function($event){return _vm.setCurrent(_vm.tableData[1])}}},[_vm._v(\"选中第二行\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){return _vm.setCurrent()}}},[_vm._v(\"取消选择\")])],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }],\n        currentRow: null\n      }\n    },\n\n    methods: {\n      setCurrent(row) {\n        this.$refs.singleTable.setCurrentRow(row);\n      },\n      handleCurrentChange(val) {\n        this.currentRow = val;\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo17\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{ref:\"multipleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"tooltip-effect\":\"dark\"},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('df-table-column',{attrs:{\"type\":\"selection\",\"width\":\"55\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"日期\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(scope.row.date))]}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"120\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"show-overflow-tooltip\":\"\"}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('df-button',{on:{\"click\":function($event){return _vm.toggleSelection([_vm.tableData[1], _vm.tableData[2]])}}},[_vm._v(\"切换第二、第三行的选中状态\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){return _vm.toggleSelection()}}},[_vm._v(\"取消选择\")])],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-08',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-06',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-07',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }],\n        multipleSelection: []\n      }\n    },\n\n    methods: {\n      toggleSelection(rows) {\n        if (rows) {\n          rows.forEach(row => {\n            this.$refs.multipleTable.toggleRowSelection(row);\n          });\n        } else {\n          this.$refs.multipleTable.clearSelection();\n        }\n      },\n      handleSelectionChange(val) {\n        this.multipleSelection = val;\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo18\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{ref:\"multipleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"columnOptions\":_vm.columnOptions},on:{\"item-checked-changed\":_vm.itemCheckedChanged}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"age\",\"label\":\"年龄\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('df-button',{on:{\"click\":function($event){return _vm.getCheckedItems('date')}}},[_vm._v(\"获取日期列已选择项\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){return _vm.getCheckedItems('name')}}},[_vm._v(\"获取姓名列已选择项\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){return _vm.getCheckedItems('address')}}},[_vm._v(\"获取地址列已选择项\")]),_vm._v(\" \"),_c('br'),_c('br'),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){return _vm.setItemChecked('date', _vm.tableData[1])}}},[_vm._v(\"选择日期列的第二项\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){return _vm.setAllItemsChecked('name')}}},[_vm._v(\"选择姓名列的所有项\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){return _vm.removeAllItemsChecked('address')}}},[_vm._v(\"取消选择地址列的所有项\")])],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      columnOptions: {\n        multipleConfig: {\n          multipleColumns: [\n            {\n              columnProp: 'date',\n              disableRowsIndex: [2]\n            },\n            'name',\n            'age',\n            {\n              columnProp: 'address'\n            }\n          ]\n        }\n      },\n      tableData: [\n        {\n          date: '2016-05-01',\n          name: '李时珍',\n          age: '20岁',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        },\n        {\n          date: '2016-05-02',\n          name: '李时珍',\n          age: '12岁',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        },\n        {\n          date: '2016-05-03',\n          name: '李时珍',\n          age: '34岁',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        },\n        {\n          date: '2016-05-04',\n          name: '李时珍',\n          age: '27岁',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }\n      ]\n    }\n  },\n  methods: {\n    itemCheckedChanged (columnProp, index, value, rowData) {\n      console.log(`${columnProp} 列的第 ${index + 1} 项的 checkbox 选中状态切换到了 ${value}, 切换处的行数据是`, rowData)\n    },\n    getCheckedItems (columnProp) {\n      console.log(this.$refs.multipleTable.getCheckedItems(columnProp))\n    },\n    setItemChecked (columnProp, row) {\n      this.$refs.multipleTable.setItemChecked(columnProp, row, true)\n    },\n    setAllItemsChecked (columnProp) {\n      this.$refs.multipleTable.setAllItemsChecked(columnProp)\n    },\n    removeAllItemsChecked (columnProp) {\n      this.$refs.multipleTable.removeAllItemsChecked(columnProp)\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo19\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"default-sort\":{prop: 'date', order: 'descending'}}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"sortable\":\"\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"sortable\":\"\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"formatter\":_vm.formatter}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo20\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-button',{on:{\"click\":_vm.resetDateFilter}},[_vm._v(\"清除日期过滤器\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.clearFilter}},[_vm._v(\"清除所有过滤器\")]),_vm._v(\" \"),_c('df-table',{ref:\"filterTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"sortable\":\"\",\"width\":\"180\",\"column-key\":\"date\",\"filters\":[{text: '2016-05-01', value: '2016-05-01'}, {text: '2016-05-02', value: '2016-05-02'}, {text: '2016-05-03', value: '2016-05-03'}, {text: '2016-05-04', value: '2016-05-04'}],\"filter-method\":_vm.filterHandler}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"filter-method\":_vm.filterAddress,\"use-input-filter\":\"\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"tag\",\"label\":\"标签\",\"width\":\"100\",\"filters\":[{ text: '家', value: '家' }, { text: '公司', value: '公司' }],\"filter-method\":_vm.filterTag,\"filter-placement\":\"bottom-end\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('df-tag',{attrs:{\"type\":scope.row.tag === '家' ? 'primary' : 'success',\"disable-transitions\":\"\"}},[_vm._v(_vm._s(scope.row.tag))])]}}])})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1 弄',\n          tag: '家'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 2 弄',\n          tag: '公司'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 3 弄',\n          tag: '家'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 4 弄',\n          tag: '公司'\n        }]\n      }\n    },\n    methods: {\n      resetDateFilter () {\n        this.$refs.filterTable.clearFilter('date')\n      },\n      clearFilter () {\n        this.$refs.filterTable.clearFilter()\n      },\n      filterTag (value, row) {\n        return row.tag === value\n      },\n      filterAddress (value, row, column) {\n        const property = column.property\n        return row[property].includes(value)\n      },\n      filterHandler (value, row, column) {\n        const property = column.property\n        return row[property] === value\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo21\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"label\":\"日期\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('i',{staticClass:\"df-icon-time-c-o\"}),_vm._v(\" \"),_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(_vm._s(scope.row.date))])]}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"姓名\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('df-popover',{attrs:{\"trigger\":\"hover\",\"placement\":\"top\"}},[_c('p',[_vm._v(\"姓名: \"+_vm._s(scope.row.name))]),_vm._v(\" \"),_c('p',[_vm._v(\"住址: \"+_vm._s(scope.row.address))]),_vm._v(\" \"),_c('div',{staticClass:\"name-wrapper\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_c('df-tag',{attrs:{\"size\":\"medium\"}},[_vm._v(_vm._s(scope.row.name))])],1)])]}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('df-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('df-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      handleEdit(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo22\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('df-form',{staticClass:\"demo-table-expand\",attrs:{\"label-position\":\"left\",\"inline\":\"\"}},[_c('df-form-item',{attrs:{\"label\":\"商品名称\"}},[_c('span',[_vm._v(_vm._s(props.row.name))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"所属店铺\"}},[_c('span',[_vm._v(_vm._s(props.row.shop))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"商品 ID\"}},[_c('span',[_vm._v(_vm._s(props.row.id))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"店铺 ID\"}},[_c('span',[_vm._v(_vm._s(props.row.shopId))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"商品分类\"}},[_c('span',[_vm._v(_vm._s(props.row.category))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"店铺地址\"}},[_c('span',[_vm._v(_vm._s(props.row.address))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"商品描述\"}},[_c('span',[_vm._v(_vm._s(props.row.desc))])])],1)]}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"商品 ID\",\"prop\":\"id\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"商品名称\",\"prop\":\"name\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"描述\",\"prop\":\"desc\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          id: '12987122',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987123',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987125',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }, {\n          id: '12987126',\n          name: '好滋好味鸡蛋仔',\n          category: '江浙小吃、小吃零食',\n          desc: '荷兰优质淡奶，奶香浓而不腻',\n          address: '上海市普陀区真北路',\n          shop: '李时珍夫妻店',\n          shopId: '10333'\n        }]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo23\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"type\":\"expand\",\"hide-expand-icon\":_vm.hideExpandIcon},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('df-form',{staticClass:\"demo-table-expand\",attrs:{\"label-position\":\"left\",\"inline\":\"\"}},[_c('df-form-item',{attrs:{\"label\":\"商品名称\"}},[_c('span',[_vm._v(_vm._s(props.row.name))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"所属店铺\"}},[_c('span',[_vm._v(_vm._s(props.row.shop))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"商品 ID\"}},[_c('span',[_vm._v(_vm._s(props.row.id))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"店铺 ID\"}},[_c('span',[_vm._v(_vm._s(props.row.shopId))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"商品分类\"}},[_c('span',[_vm._v(_vm._s(props.row.category))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"店铺地址\"}},[_c('span',[_vm._v(_vm._s(props.row.address))])]),_vm._v(\" \"),_c('df-form-item',{attrs:{\"label\":\"商品描述\"}},[_c('span',[_vm._v(_vm._s(props.row.desc))])])],1)]}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"商品 ID\",\"prop\":\"id\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"商品名称\",\"prop\":\"name\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"描述\",\"prop\":\"desc\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      tableData: [{\n        id: '12987122',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987123',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987125',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }, {\n        id: '12987126',\n        name: '好滋好味鸡蛋仔',\n        category: '江浙小吃、小吃零食',\n        desc: '荷兰优质淡奶，奶香浓而不腻',\n        address: '上海市普陀区真北路',\n        shop: '李时珍夫妻店',\n        shopId: '10333'\n      }]\n    }\n  },\n  methods: {\n    hideExpandIcon (row, column, rowIndex) {\n      if (rowIndex === 2) return true\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo24\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"20px\"},attrs:{\"data\":_vm.tableData,\"row-key\":\"id\",\"border\":\"\",\"use-tree\":\"\",\"default-expand-all\":\"\",\"tree-props\":{children: 'children', hasChildren: 'hasChildren'}}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"sortable\":\"\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"sortable\":\"\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData1,\"row-key\":\"id\",\"border\":\"\",\"use-tree\":\"\",\"lazy\":\"\",\"load\":_vm.load,\"tree-props\":{children: 'children', hasChildren: 'hasChildren'}}},[_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          id: 1,\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          id: 2,\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          id: 3,\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          children: [{\n              id: 31,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }, {\n              id: 32,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n          }]\n        }, {\n          id: 4,\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }],\n        tableData1: [{\n          id: 1,\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          id: 2,\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          id: 3,\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          hasChildren: true\n        }, {\n          id: 4,\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      load(tree, treeNode, resolve) {\n        setTimeout(() => {\n          resolve([\n            {\n              id: 31,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }, {\n              id: 32,\n              date: '2016-05-01',\n              name: '李时珍',\n              address: '四川省武当山普陀区金沙江路 1519 弄'\n            }\n          ])\n        }, 1000)\n      }\n    },\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo25\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData.filter(function (data) { return !_vm.search || data.name.toLowerCase().includes(_vm.search.toLowerCase()); })}},[_c('df-table-column',{attrs:{\"label\":\"Date\",\"prop\":\"date\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"label\":\"Name\",\"prop\":\"name\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"align\":\"right\"},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('df-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入关键字搜索\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})]}},{key:\"default\",fn:function(scope){return [_c('df-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"Edit\")]),_vm._v(\" \"),_c('df-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v(\"Delete\")])]}}])})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          address: '四川省武当山普陀区金沙江路 1516 弄'\n        }],\n        search: ''\n      }\n    },\n    methods: {\n      handleEdit(index, row) {\n        console.log(index, row);\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      }\n    },\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo26\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"show-summary\":\"\"}},[_c('df-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount1\",\"sortable\":\"\",\"label\":\"数值 1\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount2\",\"sortable\":\"\",\"label\":\"数值 2\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount3\",\"sortable\":\"\",\"label\":\"数值 3\"}})],1),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"20px\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"height\":\"200\",\"summary-method\":_vm.getSummaries,\"show-summary\":\"\"}},[_c('df-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount1\",\"label\":\"数值 1（元）\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount2\",\"label\":\"数值 2（元）\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount3\",\"label\":\"数值 3（元）\"}})],1),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"20px\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"show-summary\":\"\"}},[_c('df-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount1\",\"sortable\":\"\",\"label\":\"数值 1\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount2\",\"sortable\":\"\",\"label\":\"数值 2\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount3\",\"sortable\":\"\",\"label\":\"数值 3\"}}),_vm._v(\" \"),_c('div',{staticClass:\"custom-summary\",attrs:{\"slot\":\"customSummary\"},slot:\"customSummary\"},[_vm._v(\"自定义求和（在这里进行任何布局）\")])],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          id: '12987122',\n          name: '李时珍',\n          amount1: '234',\n          amount2: '3.2',\n          amount3: 10\n        }, {\n          id: '12987123',\n          name: '李时珍',\n          amount1: '165',\n          amount2: '4.43',\n          amount3: 12\n        }, {\n          id: '12987124',\n          name: '李时珍',\n          amount1: '324',\n          amount2: '1.9',\n          amount3: 9\n        }, {\n          id: '12987125',\n          name: '李时珍',\n          amount1: '621',\n          amount2: '2.2',\n          amount3: 17\n        }, {\n          id: '12987126',\n          name: '李时珍',\n          amount1: '539',\n          amount2: '4.1',\n          amount3: 15\n        }]\n      };\n    },\n    methods: {\n      getSummaries(param) {\n        const { columns, data } = param;\n        const sums = [];\n        columns.forEach((column, index) => {\n          if (index === 0) {\n            sums[index] = '总价';\n            return;\n          }\n          const values = data.map(item => Number(item[column.property]));\n          if (!values.every(value => isNaN(value))) {\n            sums[index] = values.reduce((prev, curr) => {\n              const value = Number(curr);\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0);\n            sums[index] += ' 元';\n          } else {\n            sums[index] = 'N/A';\n          }\n        });\n\n        return sums;\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo27\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"span-method\":_vm.arraySpanMethod,\"border\":\"\"}},[_c('df-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount1\",\"sortable\":\"\",\"label\":\"数值 1\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount2\",\"sortable\":\"\",\"label\":\"数值 2\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount3\",\"sortable\":\"\",\"label\":\"数值 3\"}})],1),_vm._v(\" \"),_c('df-table',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"20px\"},attrs:{\"data\":_vm.tableData,\"span-method\":_vm.objectSpanMethod,\"border\":\"\"}},[_c('df-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount1\",\"label\":\"数值 1（元）\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount2\",\"label\":\"数值 2（元）\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"amount3\",\"label\":\"数值 3（元）\"}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          id: '12987122',\n          name: '李时珍',\n          amount1: '234',\n          amount2: '3.2',\n          amount3: 10\n        }, {\n          id: '12987123',\n          name: '李时珍',\n          amount1: '165',\n          amount2: '4.43',\n          amount3: 12\n        }, {\n          id: '12987124',\n          name: '李时珍',\n          amount1: '324',\n          amount2: '1.9',\n          amount3: 9\n        }, {\n          id: '12987125',\n          name: '李时珍',\n          amount1: '621',\n          amount2: '2.2',\n          amount3: 17\n        }, {\n          id: '12987126',\n          name: '李时珍',\n          amount1: '539',\n          amount2: '4.1',\n          amount3: 15\n        }]\n      };\n    },\n    methods: {\n      arraySpanMethod({ row, column, rowIndex, columnIndex }) {\n        if (rowIndex % 2 === 0) {\n          if (columnIndex === 0) {\n            return [1, 2];\n          } else if (columnIndex === 1) {\n            return [0, 0];\n          }\n        }\n      },\n\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n        if (columnIndex === 0) {\n          if (rowIndex % 2 === 0) {\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo28\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('df-table-column',{attrs:{\"type\":\"index\",\"index\":_vm.indexMethod}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"width\":\"180\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          zip: 200333,\n          tag: '家'\n        }, {\n          date: '2016-05-04',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1517 弄',\n          zip: 200333,\n          tag: '公司'\n        }, {\n          date: '2016-05-01',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1519 弄',\n          zip: 200333,\n          tag: '家'\n        }, {\n          date: '2016-05-03',\n          name: '李时珍',\n          province: '上海',\n          city: '普陀区',\n          address: '四川省武当山普陀区金沙江路 1516 弄',\n          zip: 200333,\n          tag: '公司'\n        }],\n      }\n    },\n    methods: {\n      indexMethod(index) {\n        return index * 2;\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo29\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticStyle:{\"display\":\"flex\",\"height\":\"200px\"}},[_c('df-table',{ref:\"leftTable\",staticStyle:{\"width\":\"50%\"},attrs:{\"data\":_vm.leftTableData,\"hide-scroll-bar\":\"\",\"column-options\":_vm.columnOptions,\"border\":\"\",\"height\":\"100%\"},on:{\"switch-to-editing-slot\":_vm.leftSwitchToEditingSlot,\"button-click\":_vm.leftButtonClick,\"table-body-scroll\":_vm.leftTableBodyScroll}},[_c('df-table-column',{attrs:{\"label\":\"序号\",\"prop\":\"index\",\"width\":\"50\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yaoPinMc\",\"label\":\"药品名称\",\"width\":\"80\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"left-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.yaoPinMc),callback:function ($$v) {_vm.$set(scope.row, \"yaoPinMc\", $$v)},expression:\"scope.row.yaoPinMc\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"jiLiang\",\"label\":\"剂量\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"left-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.jiLiang),callback:function ($$v) {_vm.$set(scope.row, \"jiLiang\", $$v)},expression:\"scope.row.jiLiang\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"danWei\",\"label\":\"单位\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"left-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.danWei),callback:function ($$v) {_vm.$set(scope.row, \"danWei\", $$v)},expression:\"scope.row.danWei\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"biaoZhunJia\",\"label\":\"标准价\",\"width\":\"70\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yiBaoDengJi\",\"label\":\"医保等级\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"80\",\"type\":\"buttons\",\"button-type\":\"icon\",\"buttons\":[\"remove-circle\", \"add-circle\", \"down-circle\"]}})],1),_vm._v(\" \"),_c('df-table',{ref:\"rightTable\",staticStyle:{\"width\":\"50%\"},attrs:{\"data\":_vm.rightTableData,\"supplement-row-height\":_vm.rightTableData.length < _vm.leftTableData.length,\"column-options\":_vm.columnOptions,\"border\":\"\",\"height\":\"100%\"},on:{\"switch-to-editing-slot\":_vm.rightSwitchToEditingSlot,\"button-click\":_vm.rightButtonClick,\"table-body-scroll\":_vm.rightTableBodyScroll}},[_c('df-table-column',{attrs:{\"label\":\"序号\",\"prop\":\"index\",\"width\":\"50\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yaoPinMc\",\"label\":\"药品名称\",\"width\":\"80\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"right-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.yaoPinMc),callback:function ($$v) {_vm.$set(scope.row, \"yaoPinMc\", $$v)},expression:\"scope.row.yaoPinMc\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"jiLiang\",\"label\":\"剂量\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"right-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.jiLiang),callback:function ($$v) {_vm.$set(scope.row, \"jiLiang\", $$v)},expression:\"scope.row.jiLiang\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"danWei\",\"label\":\"单位\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"right-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.danWei),callback:function ($$v) {_vm.$set(scope.row, \"danWei\", $$v)},expression:\"scope.row.danWei\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"biaoZhunJia\",\"label\":\"标准价\",\"width\":\"70\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yiBaoDengJi\",\"label\":\"医保等级\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"80\",\"type\":\"buttons\",\"button-type\":\"icon\",\"buttons\":[\"remove-circle\", \"add-circle\", \"down-circle\"]}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      columnOptions: {\n        editConfig: {\n          trigger: 'click',\n          mode: 'slot',\n          editableColumns: [\n            'yaoPinMc',\n            'jiLiang',\n            'danWei'\n          ]\n        }\n      },\n      tableData: new Array(10).fill().map((row, rowIndex) => ({\n        yaoPinMc: `人参${rowIndex + 1}`,\n        jiLiang: 1,\n        danWei: 'g',\n        biaoZhunJia: '0.2011',\n        shuLiang: 0,\n        yiBaoDengJi: '二级'\n      }))\n    }\n  },\n  computed: {\n    leftTableData () {\n      return this.tableData\n        .filter((row, rowIndex) => rowIndex % 2 === 0)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 1,\n            ...row\n          }\n        })\n    },\n    rightTableData () {\n      return this.tableData.filter((row, rowIndex) => rowIndex % 2 === 1)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 2,\n            ...row\n          }\n        })\n    }\n  },\n  methods: {\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2)\n    },\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2 + 1)\n    },\n    buttonClick (button, rowIndex) {\n      switch (button) {\n        case 'remove-circle':\n          this.tableData.splice(rowIndex, 1)\n          break\n        case 'add-circle':\n          this.tableData.push({\n            yaoPinMc: '',\n            jiLiang: 1,\n            danWei: 'g',\n            biaoZhunJia: '0.2011',\n            shuLiang: 0,\n            yiBaoDengJi: '二级'\n          })\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\n          if (this.tableData.length % 2 === 0) {\n            const addedRowIndex = (this.tableData.length - 2) / 2\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          } else {\n            const addedRowIndex = (this.tableData.length - 1) / 2\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          }\n          break\n        case 'down-circle':\n          if (rowIndex === this.tableData.length - 1) return\n          const currentRow = this.tableData[rowIndex]\n          const nextRow = this.tableData[rowIndex + 1]\n          this.tableData.splice(rowIndex, 1, nextRow)\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\n          break\n        default:\n          break\n      }\n    },\n    leftTableBodyScroll (scrollTop) {\n      this.$refs.rightTable.setTableBodyScrollTop(scrollTop)\n    },\n    rightTableBodyScroll (scrollTop) {\n      this.$refs.leftTable.setTableBodyScrollTop(scrollTop)\n    },\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.rightTable.restoreAllEditingSlot()\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' && this.$nextTick(() => {\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    },\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.leftTable.restoreAllEditingSlot()\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' && this.$nextTick(() => {\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo30\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('df-table',{ref:\"leftTable\",staticStyle:{\"width\":\"50%\"},attrs:{\"data\":_vm.leftTableData,\"column-options\":_vm.columnOptions,\"border\":\"\"},on:{\"switch-to-editing-slot\":_vm.leftSwitchToEditingSlot,\"button-click\":_vm.leftButtonClick}},[_c('df-table-column',{attrs:{\"label\":\"序号\",\"prop\":\"index\",\"width\":\"50\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yaoPinMc\",\"label\":\"药品名称\",\"width\":\"80\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"left-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.yaoPinMc),callback:function ($$v) {_vm.$set(scope.row, \"yaoPinMc\", $$v)},expression:\"scope.row.yaoPinMc\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"jiLiang\",\"label\":\"剂量\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"left-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.jiLiang),callback:function ($$v) {_vm.$set(scope.row, \"jiLiang\", $$v)},expression:\"scope.row.jiLiang\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"danWei\",\"label\":\"单位\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"left-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.danWei),callback:function ($$v) {_vm.$set(scope.row, \"danWei\", $$v)},expression:\"scope.row.danWei\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"biaoZhunJia\",\"label\":\"标准价\",\"width\":\"70\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yiBaoDengJi\",\"label\":\"医保等级\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"80\",\"type\":\"buttons\",\"button-type\":\"icon\",\"buttons\":[\"remove-circle\", \"add-circle\", \"down-circle\"]}})],1),_vm._v(\" \"),_c('df-table',{ref:\"rightTable\",staticStyle:{\"width\":\"50%\"},attrs:{\"data\":_vm.rightTableData,\"supplement-row-height\":_vm.rightTableData.length < _vm.leftTableData.length,\"column-options\":_vm.columnOptions,\"border\":\"\"},on:{\"switch-to-editing-slot\":_vm.rightSwitchToEditingSlot,\"button-click\":_vm.rightButtonClick}},[_c('df-table-column',{attrs:{\"label\":\"序号\",\"prop\":\"index\",\"width\":\"50\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yaoPinMc\",\"label\":\"药品名称\",\"width\":\"80\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"right-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.yaoPinMc),callback:function ($$v) {_vm.$set(scope.row, \"yaoPinMc\", $$v)},expression:\"scope.row.yaoPinMc\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"jiLiang\",\"label\":\"剂量\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"right-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.jiLiang),callback:function ($$v) {_vm.$set(scope.row, \"jiLiang\", $$v)},expression:\"scope.row.jiLiang\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"danWei\",\"label\":\"单位\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"editing\",fn:function(scope){return _c('div',{},[_c('df-input',{ref:(\"right-\" + (scope.column.property) + \"-\" + (scope.$index)),model:{value:(scope.row.danWei),callback:function ($$v) {_vm.$set(scope.row, \"danWei\", $$v)},expression:\"scope.row.danWei\"}})],1)}}])}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"biaoZhunJia\",\"label\":\"标准价\",\"width\":\"70\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"prop\":\"yiBaoDengJi\",\"label\":\"医保等级\"}}),_vm._v(\" \"),_c('df-table-column',{attrs:{\"width\":\"80\",\"type\":\"buttons\",\"button-type\":\"icon\",\"buttons\":[\"remove-circle\", \"add-circle\", \"down-circle\"]}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      columnOptions: {\n        editConfig: {\n          trigger: 'click',\n          mode: 'slot',\n          editableColumns: [\n            'yaoPinMc',\n            'jiLiang',\n            'danWei'\n          ]\n        }\n      },\n      tableData: new Array(10).fill().map((row, rowIndex) => ({\n        yaoPinMc: `人参${rowIndex + 1}`,\n        jiLiang: 1,\n        danWei: 'g',\n        biaoZhunJia: '0.2011',\n        shuLiang: 0,\n        yiBaoDengJi: '二级'\n      }))\n    }\n  },\n  computed: {\n    leftTableData () {\n      return this.tableData\n        .filter((row, rowIndex) => rowIndex % 2 === 0)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 1,\n            ...row\n          }\n        })\n    },\n    rightTableData () {\n      return this.tableData.filter((row, rowIndex) => rowIndex % 2 === 1)\n        .map((row, rowIndex) => {\n          return {\n            index: rowIndex * 2 + 2,\n            ...row\n          }\n        })\n    }\n  },\n  methods: {\n    leftButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2)\n    },\n    rightButtonClick (button, buttonIndex, row, rowIndex) {\n      this.buttonClick(button, rowIndex * 2 + 1)\n    },\n    buttonClick (button, rowIndex) {\n      switch (button) {\n        case 'remove-circle':\n          this.tableData.splice(rowIndex, 1)\n          break\n        case 'add-circle':\n          this.tableData.push({\n            yaoPinMc: '',\n            jiLiang: 1,\n            danWei: 'g',\n            biaoZhunJia: '0.2011',\n            shuLiang: 0,\n            yiBaoDengJi: '二级'\n          })\n          // 添加一行数据之后，找到添加的数据的行下标，也就是最后一行，开启这一行的编辑\n          if (this.tableData.length % 2 === 0) {\n            const addedRowIndex = (this.tableData.length - 2) / 2\n            this.$refs.rightTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`right-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          } else {\n            const addedRowIndex = (this.tableData.length - 1) / 2\n            this.$refs.leftTable.addRowEditingSlot(addedRowIndex)\n            this.$nextTick(() => {\n              this.$refs[`left-yaoPinMc-${addedRowIndex}`].focus() // 开启新一行的编辑之后自动聚焦到新一行的第一个单元格\n            })\n          }\n          break\n        case 'down-circle':\n          if (rowIndex === this.tableData.length - 1) return\n          const currentRow = this.tableData[rowIndex]\n          const nextRow = this.tableData[rowIndex + 1]\n          this.tableData.splice(rowIndex, 1, nextRow)\n          this.tableData.splice(rowIndex + 1, 1, currentRow)\n          break\n        default:\n          break\n      }\n    },\n    leftSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.rightTable.restoreAllEditingSlot()\n      this.$refs.leftTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.leftTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' && this.$nextTick(() => {\n        this.$refs[`left-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    },\n    rightSwitchToEditingSlot (columnProp, rowIndex, row, triggerType) {\n      this.$refs.leftTable.restoreAllEditingSlot()\n      this.$refs.rightTable.addRowEditingSlot(rowIndex) // 当某一单元格被切换到编辑状态时，开启器所在行的所有编辑\n      this.$refs.rightTable.restoreAllEditingSlot({excludeMode: 'row', excludeRowIndex: rowIndex}) // 然后关闭其他行的编辑\n      triggerType === 'click' && this.$nextTick(() => {\n        this.$refs[`right-${columnProp}-${rowIndex}`].focus() // 自动聚焦当前单元格(只有这个单元格是通过点击触发编辑时, 才应该聚焦)\n      })\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js!../../../docs/md-loader/index.js!../../../node_modules/eslint-loader/index.js??ref--14-0!./table.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js!../../../docs/md-loader/index.js!../../../node_modules/eslint-loader/index.js??ref--14-0!./table.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./table.md?vue&type=template&id=22a94bba&\"\nimport script from \"./table.md?vue&type=script&lang=js&\"\nexport * from \"./table.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}