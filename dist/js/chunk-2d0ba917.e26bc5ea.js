(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ba917"],{3884:function(e,t,c){"use strict";c.r(t);var n=function(){var e=this,t=e._self._c;return t("section",{staticClass:"content df-doc"},[e._m(0),t("p",[e._v("一组备选项中进行多选")]),e._m(1),t("p",[e._v("单独使用可以表示两种状态之间的切换，写在标签中的内容为 checkbox 按钮后的介绍。")]),t("demo-block",[t("div",[t("p",[e._v("在"),t("code",[e._v("df-checkbox")]),e._v("元素中定义"),t("code",[e._v("v-model")]),e._v("绑定变量，单一的"),t("code",[e._v("checkbox")]),e._v("中，默认绑定变量的值会是"),t("code",[e._v("Boolean")]),e._v("，选中为"),t("code",[e._v("true")]),e._v("。")])]),t("template",{slot:"source"},[t("df-demo0")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  \x3c!-- `checked` 为 true 或 false --\x3e\n  <df-checkbox v-model="checked">备选项</df-checkbox>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        checked: true\n      };\n    }\n  };\n<\/script>\n')])])])],2),e._m(2),t("p",[e._v("多选框不可用状态。")]),t("demo-block",[t("div",[t("p",[e._v("设置"),t("code",[e._v("disabled")]),e._v("属性即可。")])]),t("template",{slot:"source"},[t("df-demo1")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <df-checkbox v-model="checked1" disabled>备选项1</df-checkbox>\n    <df-checkbox v-model="checked2" disabled>备选项</df-checkbox>\n  </div>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        checked1: false,\n        checked2: true\n      };\n    }\n  };\n<\/script>\n')])])])],2),e._m(3),t("p",[e._v("适用于多个勾选框绑定到同一个数组的情景，通过是否勾选来表示这一组选项中选中的项。")]),t("demo-block",[t("div",[t("p",[t("code",[e._v("checkbox-group")]),e._v("元素能把多个 checkbox 管理为一组，只需要在 Group 中使用"),t("code",[e._v("v-model")]),e._v("绑定"),t("code",[e._v("Array")]),e._v("类型的变量即可。 "),t("code",[e._v("df-checkbox")]),e._v(" 的 "),t("code",[e._v("label")]),e._v("属性是该 checkbox 对应的值，若该标签中无内容，则该属性也充当 checkbox 按钮后的介绍。"),t("code",[e._v("label")]),e._v("与数组中的元素值相对应，如果存在指定的值则为选中状态，否则为不选中。")])]),t("template",{slot:"source"},[t("df-demo2")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <df-checkbox-group v-model="checkList">\n    <df-checkbox label="复选框 A"></df-checkbox>\n    <df-checkbox label="复选框 B"></df-checkbox>\n    <df-checkbox label="复选框 C"></df-checkbox>\n    <df-checkbox label="禁用" disabled></df-checkbox>\n    <df-checkbox label="选中且禁用" disabled></df-checkbox>\n  </df-checkbox-group>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        checkList: [\'选中且禁用\',\'复选框 A\']\n      };\n    }\n  };\n<\/script>\n')])])])],2),e._m(4),e._m(5),t("demo-block",[t("template",{slot:"source"},[t("df-demo3")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <df-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @change="handleCheckAllChange">全选</df-checkbox>\n    <div style="margin: 15px 0;"></div>\n    <df-checkbox-group v-model="checkedCities" @change="handleCheckedCitiesChange">\n      <df-checkbox v-for="city in cities" :label="city" :key="city">{{city}}</df-checkbox>\n    </df-checkbox-group>\n  </div>\n</template>\n<script>\n  const cityOptions = [\'上海\', \'北京\', \'广州\', \'深圳\'];\n  export default {\n    data() {\n      return {\n        checkAll: false,\n        checkedCities: [\'上海\', \'北京\'],\n        cities: cityOptions,\n        isIndeterminate: true\n      };\n    },\n    methods: {\n      handleCheckAllChange(val) {\n        this.checkedCities = val ? cityOptions : [];\n        this.isIndeterminate = false;\n      },\n      handleCheckedCitiesChange(value) {\n        let checkedCount = value.length;\n        this.checkAll = checkedCount === this.cities.length;\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n      }\n    }\n  };\n<\/script>\n')])])])],2),e._m(6),e._m(7),t("demo-block",[t("template",{slot:"source"},[t("df-demo4")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-checkbox-group \n    v-model=\"checkedCities\"\n    :min=\"1\"\n    :max=\"2\">\n    <df-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</df-checkbox>\n  </df-checkbox-group>\n</template>\n<script>\n  const cityOptions = ['上海', '北京', '广州', '深圳'];\n  export default {\n    data() {\n      return {\n        checkedCities: ['上海', '北京'],\n        cities: cityOptions\n      };\n    }\n  };\n<\/script>\n")])])])],2),e._m(8),t("p",[e._v("按钮样式的多选组合。")]),t("demo-block",[t("div",[t("p",[e._v("只需要把"),t("code",[e._v("df-checkbox")]),e._v("元素替换为"),t("code",[e._v("df-checkbox-button")]),e._v("元素即可。此外，DfUI 还提供了"),t("code",[e._v("size")]),e._v("属性。如果需要设置组件为圆形边框，那么添加属性"),t("code",[e._v("circle-border")]),e._v("即可。")])]),t("template",{slot:"source"},[t("df-demo5")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <div>\n      <df-checkbox-group v-model="checkboxGroup1" circle-border>\n        <df-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</df-checkbox-button>\n      </df-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <df-checkbox-group v-model="checkboxGroup2" size="medium">\n        <df-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</df-checkbox-button>\n      </df-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <df-checkbox-group v-model="checkboxGroup3" size="small">\n        <df-checkbox-button v-for="city in cities" :label="city" :disabled="city === \'北京\'" :key="city">{{city}}</df-checkbox-button>\n      </df-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <df-checkbox-group v-model="checkboxGroup4" size="mini" disabled>\n        <df-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</df-checkbox-button>\n      </df-checkbox-group>\n    </div>\n  </div>\n</template>\n<script>\n  const cityOptions = [\'上海\', \'北京\', \'广州\', \'深圳\'];\n  export default {\n    data () {\n      return {\n        checkboxGroup1: [\'上海\'],\n        checkboxGroup2: [\'上海\'],\n        checkboxGroup3: [\'上海\'],\n        checkboxGroup4: [\'上海\'],\n        cities: cityOptions\n      };\n    }\n  }\n<\/script>\n')])])])],2),e._m(9),t("demo-block",[t("div",[t("p",[e._v("设置"),t("code",[e._v("border")]),e._v("属性可以渲染为带有边框的多选框。")])]),t("template",{slot:"source"},[t("df-demo6")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <div>\n      <df-checkbox v-model="checked1" label="备选项1" border></df-checkbox>\n      <df-checkbox v-model="checked2" label="备选项2" border></df-checkbox>\n    </div>\n    <div style="margin-top: 20px">\n      <df-checkbox v-model="checked3" label="备选项1" border size="medium"></df-checkbox>\n      <df-checkbox v-model="checked4" label="备选项2" border size="medium"></df-checkbox>\n    </div>\n    <div style="margin-top: 20px">\n      <df-checkbox-group v-model="checkboxGroup1" size="small">\n        <df-checkbox label="备选项1" border></df-checkbox>\n        <df-checkbox label="备选项2" border disabled></df-checkbox>\n      </df-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <df-checkbox-group v-model="checkboxGroup2" size="mini" disabled>\n        <df-checkbox label="备选项1" border></df-checkbox>\n        <df-checkbox label="备选项2" border></df-checkbox>\n      </df-checkbox-group>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        checked1: true,\n        checked2: false,\n        checked3: false,\n        checked4: true,\n        checkboxGroup1: [],\n        checkboxGroup2: []\n      };\n    }\n  }\n<\/script>\n')])])])],2),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),e._m(16),e._m(17),e._m(18),e._m(19)],1)},d=[function(){var e=this,t=e._self._c;return t("h2",{attrs:{id:"checkbox-duo-xuan-kuang"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkbox-duo-xuan-kuang"}},[e._v("¶")]),e._v(" Checkbox 多选框")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"ji-chu-yong-fa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-yong-fa"}},[e._v("¶")]),e._v(" 基础用法")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"jin-yong-zhuang-tai"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jin-yong-zhuang-tai"}},[e._v("¶")]),e._v(" 禁用状态")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"duo-xuan-kuang-zu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#duo-xuan-kuang-zu"}},[e._v("¶")]),e._v(" 多选框组")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"indeterminate-zhuang-tai"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indeterminate-zhuang-tai"}},[e._v("¶")]),e._v(" indeterminate 状态")])},function(){var e=this,t=e._self._c;return t("p",[t("code",[e._v("indeterminate")]),e._v(" 属性用以表示 checkbox 的不确定状态，一般用于实现全选的效果")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"ke-xuan-xiang-mu-shu-liang-de-xian-zhi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ke-xuan-xiang-mu-shu-liang-de-xian-zhi"}},[e._v("¶")]),e._v(" 可选项目数量的限制")])},function(){var e=this,t=e._self._c;return t("p",[e._v("使用 "),t("code",[e._v("min")]),e._v(" 和 "),t("code",[e._v("max")]),e._v(" 属性能够限制可以被勾选的项目的数量。")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"an-niu-yang-shi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#an-niu-yang-shi"}},[e._v("¶")]),e._v(" 按钮样式")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"dai-you-bian-kuang"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dai-you-bian-kuang"}},[e._v("¶")]),e._v(" 带有边框")])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"checkbox-attributes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkbox-attributes"}},[e._v("¶")]),e._v(" Checkbox Attributes")])},function(){var e=this,t=e._self._c;return t("table",[t("thead",[t("tr",[t("th",[e._v("参数")]),t("th",[e._v("说明")]),t("th",[e._v("类型")]),t("th",[e._v("可选值")]),t("th",[e._v("默认值")])])]),t("tbody",[t("tr",[t("td",[e._v("value / v-model")]),t("td",[e._v("绑定值")]),t("td",[e._v("string / number / boolean")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("label")]),t("td",[e._v("选中状态的值（只有在"),t("code",[e._v("checkbox-group")]),e._v("或者绑定对象类型为"),t("code",[e._v("array")]),e._v("时有效）")]),t("td",[e._v("string / number / boolean")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("true-label")]),t("td",[e._v("选中时的值")]),t("td",[e._v("string / number")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("false-label")]),t("td",[e._v("没有选中时的值")]),t("td",[e._v("string / number")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("disabled")]),t("td",[e._v("是否禁用")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("border")]),t("td",[e._v("是否显示边框")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("size")]),t("td",[e._v("Checkbox 的尺寸，仅在 border 为真时有效")]),t("td",[e._v("string")]),t("td",[e._v("medium / small / mini")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("name")]),t("td",[e._v("原生 name 属性")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("checked")]),t("td",[e._v("当前是否勾选")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("indeterminate")]),t("td",[e._v("设置 indeterminate 状态，只负责样式控制")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])])])])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"checkbox-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkbox-events"}},[e._v("¶")]),e._v(" Checkbox Events")])},function(){var e=this,t=e._self._c;return t("table",[t("thead",[t("tr",[t("th",[e._v("事件名称")]),t("th",[e._v("说明")]),t("th",[e._v("回调参数")])])]),t("tbody",[t("tr",[t("td",[e._v("change")]),t("td",[e._v("当绑定值变化时触发的事件")]),t("td",[e._v("更新后的值")])])])])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"checkbox-group-attributes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkbox-group-attributes"}},[e._v("¶")]),e._v(" Checkbox-group Attributes")])},function(){var e=this,t=e._self._c;return t("table",[t("thead",[t("tr",[t("th",[e._v("参数")]),t("th",[e._v("说明")]),t("th",[e._v("类型")]),t("th",[e._v("可选值")]),t("th",[e._v("默认值")])])]),t("tbody",[t("tr",[t("td",[e._v("value / v-model")]),t("td",[e._v("绑定值")]),t("td",[e._v("array")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("size")]),t("td",[e._v("多选框组尺寸，仅对按钮形式的 Checkbox 或带有边框的 Checkbox 有效")]),t("td",[e._v("string")]),t("td",[e._v("medium / small / mini")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("disabled")]),t("td",[e._v("是否禁用")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("min")]),t("td",[e._v("可被勾选的 checkbox 的最小数量")]),t("td",[e._v("number")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("max")]),t("td",[e._v("可被勾选的 checkbox 的最大数量")]),t("td",[e._v("number")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("text-color")]),t("td",[e._v("按钮形式的 Checkbox 激活时的文本颜色")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("#ffffff")])]),t("tr",[t("td",[e._v("fill")]),t("td",[e._v("按钮形式的 Checkbox 激活时的填充色和边框色")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("#409EFF")])]),t("tr",[t("td",[e._v("use-flex")]),t("td",[e._v("/"),t("em",[e._v("新增")]),e._v("/ 让 Checkbox-group 下的子元素按照 flex 布局排列")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("circle-border")]),t("td",[e._v("/"),t("em",[e._v("新增")]),e._v("/ 将 Radio-group 下的边框设置为圆角")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])])])])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"checkbox-group-events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkbox-group-events"}},[e._v("¶")]),e._v(" Checkbox-group Events")])},function(){var e=this,t=e._self._c;return t("table",[t("thead",[t("tr",[t("th",[e._v("事件名称")]),t("th",[e._v("说明")]),t("th",[e._v("回调参数")])])]),t("tbody",[t("tr",[t("td",[e._v("change")]),t("td",[e._v("当绑定值变化时触发的事件")]),t("td",[e._v("更新后的值")])])])])},function(){var e=this,t=e._self._c;return t("h3",{attrs:{id:"checkbox-button-attributes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkbox-button-attributes"}},[e._v("¶")]),e._v(" Checkbox-button Attributes")])},function(){var e=this,t=e._self._c;return t("table",[t("thead",[t("tr",[t("th",[e._v("参数")]),t("th",[e._v("说明")]),t("th",[e._v("类型")]),t("th",[e._v("可选值")]),t("th",[e._v("默认值")])])]),t("tbody",[t("tr",[t("td",[e._v("label")]),t("td",[e._v("选中状态的值（只有在"),t("code",[e._v("checkbox-group")]),e._v("或者绑定对象类型为"),t("code",[e._v("array")]),e._v("时有效）")]),t("td",[e._v("string / number / boolean")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("true-label")]),t("td",[e._v("选中时的值")]),t("td",[e._v("string / number")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("false-label")]),t("td",[e._v("没有选中时的值")]),t("td",[e._v("string / number")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("disabled")]),t("td",[e._v("是否禁用")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("name")]),t("td",[e._v("原生 name 属性")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("checked")]),t("td",[e._v("当前是否勾选")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])])])])}],o=c("5530"),r={name:"component-doc",components:{"df-demo0":function(){var e=function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("div",[[c("df-checkbox",{model:{value:e.checked,callback:function(t){e.checked=t},expression:"checked"}},[e._v("备选项")])]],2)},t=[],c={data:function(){return{checked:!0}}};return Object(o["a"])({render:e,staticRenderFns:t},c)}(),"df-demo1":function(){var e=function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("div",[[c("div",[c("df-checkbox",{attrs:{disabled:""},model:{value:e.checked1,callback:function(t){e.checked1=t},expression:"checked1"}},[e._v("备选项1")]),e._v(" "),c("df-checkbox",{attrs:{disabled:""},model:{value:e.checked2,callback:function(t){e.checked2=t},expression:"checked2"}},[e._v("备选项")])],1)]],2)},t=[],c={data:function(){return{checked1:!1,checked2:!0}}};return Object(o["a"])({render:e,staticRenderFns:t},c)}(),"df-demo2":function(){var e=function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("div",[[c("df-checkbox-group",{model:{value:e.checkList,callback:function(t){e.checkList=t},expression:"checkList"}},[c("df-checkbox",{attrs:{label:"复选框 A"}}),e._v(" "),c("df-checkbox",{attrs:{label:"复选框 B"}}),e._v(" "),c("df-checkbox",{attrs:{label:"复选框 C"}}),e._v(" "),c("df-checkbox",{attrs:{label:"禁用",disabled:""}}),e._v(" "),c("df-checkbox",{attrs:{label:"选中且禁用",disabled:""}})],1)]],2)},t=[],c={data:function(){return{checkList:["选中且禁用","复选框 A"]}}};return Object(o["a"])({render:e,staticRenderFns:t},c)}(),"df-demo3":function(){var e=function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("div",[[c("div",[c("df-checkbox",{attrs:{indeterminate:e.isIndeterminate},on:{change:e.handleCheckAllChange},model:{value:e.checkAll,callback:function(t){e.checkAll=t},expression:"checkAll"}},[e._v("全选")]),e._v(" "),c("div",{staticStyle:{margin:"15px 0"}}),e._v(" "),c("df-checkbox-group",{on:{change:e.handleCheckedCitiesChange},model:{value:e.checkedCities,callback:function(t){e.checkedCities=t},expression:"checkedCities"}},e._l(e.cities,(function(t){return c("df-checkbox",{key:t,attrs:{label:t}},[e._v(e._s(t))])})),1)],1)]],2)},t=[],c=["上海","北京","广州","深圳"],n={data:function(){return{checkAll:!1,checkedCities:["上海","北京"],cities:c,isIndeterminate:!0}},methods:{handleCheckAllChange:function(e){this.checkedCities=e?c:[],this.isIndeterminate=!1},handleCheckedCitiesChange:function(e){var t=e.length;this.checkAll=t===this.cities.length,this.isIndeterminate=t>0&&t<this.cities.length}}};return Object(o["a"])({render:e,staticRenderFns:t},n)}(),"df-demo4":function(){var e=function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("div",[[c("df-checkbox-group",{attrs:{min:1,max:2},model:{value:e.checkedCities,callback:function(t){e.checkedCities=t},expression:"checkedCities"}},e._l(e.cities,(function(t){return c("df-checkbox",{key:t,attrs:{label:t}},[e._v(e._s(t))])})),1)]],2)},t=[],c=["上海","北京","广州","深圳"],n={data:function(){return{checkedCities:["上海","北京"],cities:c}}};return Object(o["a"])({render:e,staticRenderFns:t},n)}(),"df-demo5":function(){var e=function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("div",[[c("div",[c("div",[c("df-checkbox-group",{attrs:{"circle-border":""},model:{value:e.checkboxGroup1,callback:function(t){e.checkboxGroup1=t},expression:"checkboxGroup1"}},e._l(e.cities,(function(t){return c("df-checkbox-button",{key:t,attrs:{label:t}},[e._v(e._s(t))])})),1)],1),e._v(" "),c("div",{staticStyle:{"margin-top":"20px"}},[c("df-checkbox-group",{attrs:{size:"medium"},model:{value:e.checkboxGroup2,callback:function(t){e.checkboxGroup2=t},expression:"checkboxGroup2"}},e._l(e.cities,(function(t){return c("df-checkbox-button",{key:t,attrs:{label:t}},[e._v(e._s(t))])})),1)],1),e._v(" "),c("div",{staticStyle:{"margin-top":"20px"}},[c("df-checkbox-group",{attrs:{size:"small"},model:{value:e.checkboxGroup3,callback:function(t){e.checkboxGroup3=t},expression:"checkboxGroup3"}},e._l(e.cities,(function(t){return c("df-checkbox-button",{key:t,attrs:{label:t,disabled:"北京"===t}},[e._v(e._s(t))])})),1)],1),e._v(" "),c("div",{staticStyle:{"margin-top":"20px"}},[c("df-checkbox-group",{attrs:{size:"mini",disabled:""},model:{value:e.checkboxGroup4,callback:function(t){e.checkboxGroup4=t},expression:"checkboxGroup4"}},e._l(e.cities,(function(t){return c("df-checkbox-button",{key:t,attrs:{label:t}},[e._v(e._s(t))])})),1)],1)])]],2)},t=[],c=["上海","北京","广州","深圳"],n={data:function(){return{checkboxGroup1:["上海"],checkboxGroup2:["上海"],checkboxGroup3:["上海"],checkboxGroup4:["上海"],cities:c}}};return Object(o["a"])({render:e,staticRenderFns:t},n)}(),"df-demo6":function(){var e=function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("div",[[c("div",[c("div",[c("df-checkbox",{attrs:{label:"备选项1",border:""},model:{value:e.checked1,callback:function(t){e.checked1=t},expression:"checked1"}}),e._v(" "),c("df-checkbox",{attrs:{label:"备选项2",border:""},model:{value:e.checked2,callback:function(t){e.checked2=t},expression:"checked2"}})],1),e._v(" "),c("div",{staticStyle:{"margin-top":"20px"}},[c("df-checkbox",{attrs:{label:"备选项1",border:"",size:"medium"},model:{value:e.checked3,callback:function(t){e.checked3=t},expression:"checked3"}}),e._v(" "),c("df-checkbox",{attrs:{label:"备选项2",border:"",size:"medium"},model:{value:e.checked4,callback:function(t){e.checked4=t},expression:"checked4"}})],1),e._v(" "),c("div",{staticStyle:{"margin-top":"20px"}},[c("df-checkbox-group",{attrs:{size:"small"},model:{value:e.checkboxGroup1,callback:function(t){e.checkboxGroup1=t},expression:"checkboxGroup1"}},[c("df-checkbox",{attrs:{label:"备选项1",border:""}}),e._v(" "),c("df-checkbox",{attrs:{label:"备选项2",border:"",disabled:""}})],1)],1),e._v(" "),c("div",{staticStyle:{"margin-top":"20px"}},[c("df-checkbox-group",{attrs:{size:"mini",disabled:""},model:{value:e.checkboxGroup2,callback:function(t){e.checkboxGroup2=t},expression:"checkboxGroup2"}},[c("df-checkbox",{attrs:{label:"备选项1",border:""}}),e._v(" "),c("df-checkbox",{attrs:{label:"备选项2",border:""}})],1)],1)])]],2)},t=[],c={data:function(){return{checked1:!0,checked2:!1,checked3:!1,checked4:!0,checkboxGroup1:[],checkboxGroup2:[]}}};return Object(o["a"])({render:e,staticRenderFns:t},c)}()}},a=r,i=c("2877"),l=Object(i["a"])(a,n,d,!1,null,null,null);t["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d0ba917.e26bc5ea.js.map