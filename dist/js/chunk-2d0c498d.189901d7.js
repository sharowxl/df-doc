(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c498d"],{"3c07":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e._self._c;return n("section",{staticClass:"content df-doc"},[e._m(0),n("p",[e._v("当表格数据量过多时，使用分页表格分解数据。")]),e._m(1),n("demo-block",[n("div",[n("p",[e._v("x-table 组件内部封装了 pagination 分页组件和 table 表格组件，保留了它们的所有功能，你可以像下面的例子那样使用它来进行常规的表格数据分页。内置的匿名插槽的功能同 table，这使得你可以像使用 table 组件一样使用 table-column 组件来渲染表格的列。需要注意的是，x-table 需要设定有效的高度 css 样式，这样 table 才能撑满中间区域。")])]),n("template",{slot:"source"},[n("df-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <df-x-table\n    :data="tableData"\n    :page-sizes="pageSizes"\n    :page-size="pageSize"\n    :layout="layout"\n    :total="total"\n    :small="false"\n    style=\'height: 413px\'\n    @pagination-change="handlePaginationChange"\n  >\n    <df-table-column prop="index" label="序号" width="50" />\n    <df-table-column prop="date" label="日期" width="150" />\n    <df-table-column prop="name" label="姓名" width="150" />\n    <df-table-column prop="gender" label="性别" width="150" />\n    <df-table-column prop="address" label="地址" />\n  </df-x-table>\n</template>\n\n<script>\n// 生成大量数据\nconst total = 1000\nconst tableData = new Array(total)\n  .fill(0)\n  .map((item, index) => ({\n    index: index + 1,\n    date: \'2016-05-03\',\n    name: \'李时珍\',\n    gender: \'女\',\n    address: \'四川省武当山普陀区金沙江路 1518 弄\'\n  }))\n\n// 这里的方法可以看做接口模拟，用来获取表格数据和总长度的\nconst getData = (page, pageSize) => {\n  console.log(`开始查询表格数据，当前页是第 ${page} 页，每一页请求 ${pageSize} 条数据`)\n  const result = tableData.slice(\n    pageSize * (page - 1),\n    pageSize * page\n  )\n  console.log(\'本次查询的结果是\', result)\n  return result\n}\nconst getTotal = () => total\n\nexport default {\n  name: \'Demo\',\n  data () {\n    return {\n      tableData: [],\n      total: 1,\n      pageSizes: [5, 10, 20, 50, 100, 200, 300, 400],\n      pageSize: 10,\n      currentPage: 1,\n      layout: \'total, sizes, prev, pager, next, jumper\'\n    }\n  },\n  methods: {\n    getTotal () {\n      this.total = getTotal()\n    },\n    getData () {\n      this.tableData = getData(this.currentPage, this.pageSize)\n    },\n    handlePaginationChange (paginationStatus) {\n      this.currentPage = paginationStatus.currentPage\n      this.pageSize = paginationStatus.pageSize\n      this.getData()\n    }\n  },\n  created () {\n    this.getTotal()\n    this.getData()\n  }\n}\n<\/script>\n')])])])],2),e._m(2),n("demo-block",[n("div",[n("p",[e._v("若不需要底部的 "),n("code",[e._v("pagination")]),e._v("，则配置 "),n("code",[e._v("needPagination")]),e._v(" 为 "),n("code",[e._v("false")]),e._v("即可，所以 "),n("code",[e._v("x-table")]),e._v(" 可以作为纯净的 "),n("code",[e._v("table")]),e._v(" 组件来使用。")])]),n("template",{slot:"source"},[n("df-demo1")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <df-x-table\n    :data="tableData"\n    :needPagination="false"\n    style="height: 353px"\n  >\n    <df-table-column prop="index" label="序号" width="50" />\n    <df-table-column prop="date" label="日期" width="150" />\n    <df-table-column prop="name" label="姓名" width="150" />\n    <df-table-column prop="gender" label="性别" width="150" />\n    <df-table-column prop="address" label="地址" />\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: \'Demo\',\n  data () {\n    return {\n      tableData: new Array(10)\n        .fill(0)\n        .map((item, index) => ({\n          index: index + 1,\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          gender: \'女\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }))\n    }\n  }\n}\n<\/script>\n')])])])],2),e._m(3),n("demo-block",[n("div",[n("p",[e._v("合理利用头部插槽，以实现业务需求。")])]),n("template",{slot:"source"},[n("df-demo2")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <df-x-table\n    :data="tableData"\n    :needPagination="false"\n    style="height: 387px"\n  >\n   <template slot="header">\n      <df-button type="success">\n        <i class="df-icon-add"></i>\n        开单\n      </df-button>\n      <df-button plain>打印</df-button>\n      <df-button plain icon="df-icon-refresh"></df-button>\n   </template>\n    <df-table-column prop="index" label="序号" width="50" />\n    <df-table-column prop="date" label="日期" width="150" />\n    <df-table-column prop="name" label="姓名" width="150" />\n    <df-table-column prop="gender" label="性别" width="150" />\n    <df-table-column prop="address" label="地址" />\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: \'Demo\',\n  data () {\n    return {\n      tableData: new Array(10)\n        .fill(0)\n        .map((item, index) => ({\n          index: index + 1,\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          gender: \'女\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }))\n    }\n  }\n}\n<\/script>\n')])])])],2),e._m(4),n("demo-block",[n("div",[n("p",[e._v("合理利用尾部插槽，以实现业务需求。")])]),n("template",{slot:"source"},[n("df-demo3")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <df-x-table\n    :data="tableData"\n    :needPagination="false"\n    style="height: 387px"\n  >\n    <df-table-column prop="index" label="序号" width="50" />\n    <df-table-column prop="date" label="日期" width="150" />\n    <df-table-column prop="name" label="姓名" width="150" />\n    <df-table-column prop="gender" label="性别" width="150" />\n    <df-table-column prop="address" label="地址" />\n   <template slot="footer">\n      <df-button type="success">\n        <i class="df-icon-add"></i>\n        开单\n      </df-button>\n      <df-button plain>打印</df-button>\n      <df-button plain icon="df-icon-refresh"></df-button>\n   </template>\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: \'Demo\',\n  data () {\n    return {\n      tableData: new Array(10)\n        .fill(0)\n        .map((item, index) => ({\n          index: index + 1,\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          gender: \'女\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        }))\n    }\n  }\n}\n<\/script>\n')])])])],2),e._m(5),n("p",[e._v("传入columns=[column={}]配置直接渲染表格，column的内容与df-table-column的属性配置一致")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo4")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    ref=\"table\"\n    style=\"height: 387px\"\n    has-index\n    :data=\"data\"\n    :columns=\"columns\"\n    :needPagination=\"false\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      data: new Array(10)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        })),\n      columns: [{\n        label: '日期',\n        prop: 'date'\n      }, {\n        label: '姓名',\n        prop: 'name'\n      }, {\n        label: '性别',\n        prop: 'gender'\n      }, {\n        label: '地址',\n        prop: 'address',\n        minWidth: 250\n      }]\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(6),n("p",[e._v("传入columns=[column={}]配置直接渲染表格，column的内容与df-table-column的属性配置一致")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo5")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    ref=\"table\"\n    style=\"height: 387px\"\n    has-index\n    :data=\"data\"\n    :columns=\"columns\"\n    :needPagination=\"false\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      data: new Array(10)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        })),\n      columns: [{\n        label: '日期',\n        prop: 'date'\n      }, {\n        label: '人员信息',\n        children: [{\n          label: '姓名',\n          prop: 'name'\n        }, {\n          label: '性别',\n          prop: 'gender'\n        }, {\n          label: '地址',\n          prop: 'address',\n          minWidth: 250\n        }]\n      }]\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(7),n("p",[e._v("传入columns=[column={}]配置直接渲染表格，column的内容与df-table-column的属性配置一致")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo6")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    ref=\"table\"\n    style=\"height: 387px\"\n    :data=\"data\"\n    :columns=\"columns\"\n    :needPagination=\"false\"\n    row-key=\"id\"\n    border\n    use-tree\n    default-expand-all\n    :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      columns: [{\n        label: '日期',\n        prop: 'date'\n      }, {\n        label: '姓名',\n        prop: 'name'\n      }, {\n        label: '性别',\n        prop: 'gender'\n      }, {\n        label: '地址',\n        prop: 'address',\n        minWidth: 250\n      }],\n      data: new Array(5)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄',\n          children: [{\n            id: Number(`${index + 1}${index + 1}`),\n            date: '2016-05-03',\n            name: '李时珍',\n            gender: '女',\n            address: '四川省武当山普陀区金沙江路 1518 弄'\n          }, {\n            id: Number(`${index + 1}${index + 2}`),\n            date: '2016-05-03',\n            name: '李时珍',\n            gender: '女',\n            address: '四川省武当山普陀区金沙江路 1518 弄'\n          }]\n        }))\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(8),n("p",[e._v("使用operationButtons时，需设置has-operation为true")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo7")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    ref=\"table\"\n    style=\"height: 387px\"\n    :data=\"data\"\n    :columns=\"columns\"\n    has-index\n    has-operation\n    :operation-buttons=\"operationButtons\"\n    :operation-width=\"120\"\n    :toolbar-list=\"toolbarList\"\n    :needPagination=\"false\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      data: new Array(10)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        })),\n      columns: [{\n        label: '日期',\n        prop: 'date'\n      }, {\n        label: '姓名',\n        prop: 'name'\n      }, {\n        label: '性别',\n        prop: 'gender'\n      }, {\n        label: '地址',\n        prop: 'address',\n        minWidth: 250\n      }],\n      operationButtons: [{ // 操作列\n        name: '编辑',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }, {\n        name: '删除',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }],\n      toolbarList: [{ // 工具栏\n        name: '新增',\n        icon: 'df-icon-add',\n        type: 'success',\n        click: () => {}\n      }]\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(9),n("p",[e._v("diyPageData为true时，需要自行计算total（数据总数）、pageSize（每页条数）、currentPage（当前页）、切换页数后分割表格数据；")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo8")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    ref=\"table\"\n    style=\"height: 387px\"\n    :data=\"pageData\"\n    :columns=\"columns\"\n    has-index\n    has-operation\n    :operation-buttons=\"operationButtons\"\n    :operation-width=\"120\"\n    :toolbar-list=\"toolbarList\"\n    need-pagination\n    :total=\"total\"\n    :pageSize=\"pageSize\"\n    :currentPage=\"currentPage\"\n    :pageSizes=\"pageSizes\"\n    :defaultPageSizeIndex=\"1\"\n    @pagination-change=\"handlePaginationChange\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      data: new Array(18)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        })),\n      columns: [{\n        label: '日期',\n        prop: 'date'\n      }, {\n        label: '姓名',\n        prop: 'name'\n      }, {\n        label: '性别',\n        prop: 'gender'\n      }, {\n        label: '地址',\n        prop: 'address',\n        minWidth: 250\n      }],\n      operationButtons: [{ // 操作列\n        name: '编辑',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }, {\n        name: '删除',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }],\n      toolbarList: [{ // 工具栏\n        name: '新增',\n        icon: 'df-icon-add',\n        type: 'success',\n        click: () => {}\n      }],\n      pageSize: 10,\n      currentPage: 1,\n      pageSizes: [5, 10, 20, 50]\n    }\n  },\n  computed: {\n    total () {\n      return this.data.length\n    },\n    pageData () {\n      const start = (this.currentPage - 1) * this.pageSize\n      const end = this.currentPage * this.pageSize\n      return this.data.slice(start, end)\n    }\n  },\n  methods: {\n    // 分页器的change事件\n    handlePaginationChange (paginationStatus) {\n      this.currentPage = paginationStatus.currentPage || 1\n      this.pageSize = paginationStatus.pageSize || 10\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(10),n("demo-block",[n("template",{slot:"source"},[n("df-demo9")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    v-loading=\"loading\"\n    ref=\"table\"\n    style=\"height: 387px\"\n    :data=\"data\"\n    :columns=\"columns\"\n    has-index\n    has-operation\n    :operation-buttons=\"operationButtons\"\n    :operation-width=\"120\"\n    :toolbar-list=\"toolbarList\"\n    need-pagination\n    :diyPageData=\"false\"\n    :pageSizes=\"pageSizes\"\n    :defaultPageSizeIndex=\"1\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      loading: false,\n      data: [],\n      columns: [{\n        label: '日期',\n        prop: 'date'\n      }, {\n        label: '姓名',\n        prop: 'name'\n      }, {\n        label: '性别',\n        prop: 'gender'\n      }, {\n        label: '地址',\n        prop: 'address',\n        minWidth: 250\n      }],\n      operationButtons: [{ // 操作列\n        name: '编辑',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }, {\n        name: '删除',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }],\n      toolbarList: [{ // 工具栏\n        name: '刷新',\n        icon: 'df-icon-refresh',\n        type: 'success',\n        click: () => {\n          this.$refs.table.updateCurrentPage(1)\n          this.getTableData()\n        }\n      }],\n      pageSizes: [5, 10, 20, 50]\n    }\n  },\n  methods: {\n    getTableData () {\n      const data = new Array(27)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: '女',\n          address: '四川省武当山普陀区金沙江路 1518 弄'\n        }))\n      this.loading = true\n      setTimeout(() => {\n        this.$set(this, 'data', data)\n        this.loading = false\n      }, 2000)\n    }\n  },\n  created () {\n    this.getTableData()\n  }\n}\n<\/script>\n")])])])],2),e._m(11),n("p",[e._v("开启使用接口模式needApi: true，传入接口方法apiFunc，则表格在切换分页信息时，将自动更新表格数据；")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo10")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    ref=\"table\"\n    style=\"height: 387px\"\n    :columns=\"columns\"\n    has-index\n    has-operation\n    :operation-buttons=\"operationButtons\"\n    :operation-width=\"120\"\n    :toolbar-list=\"toolbarList\"\n    need-pagination\n    :diyPageData=\"false\"\n    :pageSizes=\"pageSizes\"\n    :defaultPageSizeIndex=\"1\"\n    needApi\n    :apiFunc=\"getData\"\n    :finishPostApi=\"handleFollowUp\"\n    :resPonseKey=\"resPonseKey\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      columns: [{\n        label: '日期',\n        prop: 'date'\n      }, {\n        label: '姓名',\n        prop: 'name'\n      }, {\n        label: '性别',\n        prop: 'gender'\n      }, {\n        label: '地址',\n        prop: 'address',\n        minWidth: 250\n      }],\n      operationButtons: [{ // 操作列\n        name: '编辑',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }, {\n        name: '删除',\n        click: (row, buttonIndex, rowIndex) => {\n          console.log(row, buttonIndex, rowIndex)\n        }\n      }],\n      toolbarList: [{ // 工具栏\n        name: '刷新',\n        type: 'success',\n        icon: 'df-icon-refresh',\n        click: () => {\n          this.$refs.table.getTableData()\n        }\n      }],\n      pageSizes: [5, 10, 20, 50],\n      // 若接口返回的是一个对象，则需要定义对象里哪个字段作为表格数据，哪个字段作为表格总数\n      // 若接口返回的是数组，则应该直接通过data传入表格数据\n      resPonseKey: {\n        dataKey: 'list',\n        totalKey: 'totalRows'\n      }\n    }\n  },\n  methods: {\n    getData (pageInfo, xtable) {\n      // pageInfo = {pageSize, pageIndex} 分页信息, xtable 表格实例\n      function rand (min, max) {\n        return Math.floor(Math.random() * ( max - min )) + min\n      }\n      const sex = ['男', '女']\n      const data = new Array(pageInfo.pageSize)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: '2016-05-03',\n          name: '李时珍',\n          gender: sex[Number(rand(0, 2))],\n          address: `四川省武当山普陀区金沙江路 ${rand(100, 9999)} 弄`\n        }))\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({\n            list: data,\n            totalRows: 30\n          })\n        }, 2000)\n      })\n    },\n    handleFollowUp (data, pageInfo, xtable) {\n      // 处理接口调完后续\n      // data 表格数据, pageInfo = {pageSize, pageIndex} 分页信息, xtable 表格实例\n    }\n  }\n}\n<\/script>\n")])])])],2),e._m(12),n("p",[e._v("在column.form里配置对应每列的的表单类型与表单项配置")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo11")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    v-loading=\"loading\"\n    ref=\"table\"\n    style=\"height: 387px\"\n    :data=\"data\"\n    :columns=\"columns\"\n    :column-options=\"columnOptions\"\n    has-operation\n    :operation-buttons=\"operationButtons\"\n    :operation-width=\"120\"\n    :need-pagination=\"false\"\n    @enter=\"handleFormEnter\"\n    @formChange=\"handleFormChange\"\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      loading: false,\n      data: [],\n      columns: [{\n        label: '日期',\n        prop: 'date',\n        form: {\n          formType: 'date-picker'\n        }\n      }, {\n        label: '姓名',\n        prop: 'name',\n        form: {\n          type: 'input',\n          modelKey: 'nickName'\n        }\n      }, {\n        label: '性别',\n        prop: 'gender',\n        form: {\n          type: 'select',\n          itemType: 'option',\n          labelKey: 'label',\n          valueKey: 'value',\n          bindObj: true, // 选项值是否绑定为整个对象\n          dicData: [\n            { label: '男', value: 0 },\n            { label: '女', value: 1 }\n          ]\n        }\n      }, {\n        label: '地址',\n        prop: 'address',\n        minWidth: 250,\n        form: {\n          type: 'input'\n        }\n      }],\n      columnOptions: {\n        editConfig: {\n          trigger: 'click',\n          mode: 'slot',\n          editableColumns: ['date', 'name', 'gender', 'address']\n        }\n      },\n      operationButtons: [{ // 操作列\n        name: '新增',\n        showable: (row, rowIndex) => rowIndex === (this.data.length - 1),\n        click: (row, buttonIndex, rowIndex) => {\n          this.addRow()\n        }\n      }, {\n        name: '删除',\n        click: (row, buttonIndex, rowIndex) => {\n          this.data.splice(rowIndex, 1)\n        }\n      }]\n    }\n  },\n  methods: {\n    getData () {\n      function rand (min, max) {\n        return Math.floor(Math.random() * ( max - min )) + min\n      }\n      const data = new Array(5)\n        .fill(0)\n        .map((item, index) => ({\n          date: '2016-05-03 00:00:00',\n          name: '李时珍',\n          nickName: '小珍',\n          // gender: rand(0, 2),\n          gender: {value: rand(0, 2)},\n          address: `四川省武当山普陀区金沙江路 ${rand(100, 9999)} 弄`\n        }))\n      return new Promise((resolve) => {\n        this.loading = true\n        setTimeout(() => {\n          this.$set(this, 'data', data)\n          this.$nextTick(() => this.openEdit())\n          this.loading = false\n        }, 2000)\n      })\n    },\n    // 开启编辑\n    openEdit (index) {\n      const _XTable = this.$refs.table\n      _XTable.openEdit(index)\n      // 开启某一行时，聚焦第一个输入框\n      if (index || index === 0) this.$nextTick(() => _XTable.editFocus('date', index))\n    },\n    // 新增行\n    addRow () {\n      this.data.push({\n        date: '',\n        name: '',\n        nickName: '',\n        gender: null,\n        address: ''\n      })\n      const newRowIndex = this.data.length - 1\n      this.openEdit(newRowIndex)\n    },\n    handleFormEnter (prop, value, row, index) {\n      const _XTable = this.$refs.table\n      const _Table = _XTable.getRefTable()\n      const {columnProp, rowIndex, isFirstEditableSlot} = _Table.getNextEditableSlot(prop, index)\n      isFirstEditableSlot ? this.addRow() : _XTable.editFocus(columnProp, rowIndex)\n    },\n    handleFormChange (prop, value, row, rowIndex) {\n      console.log('prop', row)\n      this.handleFormEnter(prop, value, row, rowIndex)\n    }\n  },\n  mounted () {\n    this.getData()\n  }\n}\n<\/script>\n")])])])],2),e._m(13),n("p",[e._v("需要配置independent为true")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo12")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <df-x-table\n    v-loading=\"loading\"\n    ref=\"table\"\n    style=\"height: 387px\"\n    :data=\"data\"\n    :columns=\"columns\"\n    :column-options=\"columnOptions\"\n    has-operation\n    :operation-buttons=\"operationButtons\"\n    :operation-width=\"120\"\n    :need-pagination=\"false\"\n    border\n  >\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: 'Demo',\n  data () {\n    return {\n      loading: false,\n      data: [],\n      columns: [{\n        label: '日期',\n        prop: 'date',\n        form: {\n          formType: 'date-picker'\n        }\n      }, {\n        label: '人员信息',\n        children: [{\n          label: '姓名',\n          prop: 'name',\n          form: {\n            type: 'input'\n          }\n        }, {\n          label: '性别',\n          prop: 'gender',\n          form: {\n            type: 'select',\n            itemType: 'option',\n            labelKey: 'label',\n            valueKey: 'value',\n            selectLabel: 'label',\n            dicData: [],\n            bindObj: true,\n            independent: true, // 开启独立管理下拉选项\n            filterable: true,\n            remote: true,\n            events: {\n              'focus': (e, {row, vm, $index}) => {\n                const value = row.gender // 记录下当前值（为了在获取选项后，将下拉框里的值显示成label，需要在获取选项后重置一下当前值）\n                this.$set(row, 'gender', '')\n                vm.loading = true\n                setTimeout(() => {\n                  const options = row.name ? [\n                    {label: '男', value: 0},\n                    {label: '女', value: 1}\n                  ] : []\n                  this.$set(vm, 'options', options)\n                  this.$nextTick(() => this.$set(row, 'gender', value))\n                  vm.loading = false\n                }, 1000)\n              },\n              'blur': (e, {row, vm}) => {\n                this.$set(vm, 'options', [])\n              }\n            }\n          }\n        }, {\n          label: '地址',\n          prop: 'address',\n          minWidth: 250,\n          form: {\n            type: 'input'\n          }\n        }]\n      }],\n      columnOptions: {\n        editConfig: {\n          trigger: 'click',\n          mode: 'slot',\n          editableColumns: ['date', 'name', 'gender', 'address']\n        }\n      },\n      operationButtons: [{ // 操作列\n        name: '新增',\n        showable: (row, rowIndex) => rowIndex === (this.data.length - 1),\n        click: (row, buttonIndex, rowIndex) => {\n          this.addRow()\n        }\n      }, {\n        name: '删除',\n        click: (row, buttonIndex, rowIndex) => {\n          this.data.splice(rowIndex, 1)\n        }\n      }]\n    }\n  },\n  methods: {\n    getData () {\n      function rand (min, max) {\n        return Math.floor(Math.random() * ( max - min )) + min\n      }\n      const data = new Array(5)\n        .fill(0)\n        .map((item, index) => ({\n          date: '2016-05-03 00:00:00',\n          name: '李时珍',\n          gender: {label: '男', value: 0},\n          address: `四川省武当山普陀区金沙江路 ${rand(100, 9999)} 弄`\n        }))\n      return new Promise((resolve) => {\n        this.loading = true\n        setTimeout(() => {\n          this.$set(this, 'data', data)\n          this.$nextTick(() => this.openEdit())\n          this.loading = false\n        }, 2000)\n      })\n    },\n    // 开启编辑\n    openEdit (index) {\n      const _XTable = this.$refs.table\n      _XTable.openEdit(index)\n      // 开启某一行时，聚焦第一个输入框\n      if (index || index === 0) this.$nextTick(() => _XTable.editFocus('date', index))\n    },\n    // 新增行\n    addRow () {\n      this.data.push({\n        date: '',\n        name: '',\n        gender: null,\n        address: ''\n      })\n      const newRowIndex = this.data.length - 1\n      this.openEdit(newRowIndex)\n    }\n  },\n  mounted () {\n    this.getData()\n  }\n}\n<\/script>\n")])])])],2),e._m(14),n("p",[e._v("表头编辑一般被用来跳转到此列的某一位置，编辑主要是由插槽来决定的，你需要定义好具名插槽slots[列字段名+HeaderEditing]里的内容，并且配置columnOptions.headerEditConfig，事件及方法参见下方文档。")]),n("demo-block",[n("template",{slot:"source"},[n("df-demo13")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <df-x-table\n    ref="table"\n    style="height: 387px"\n    has-index\n    :data="data"\n    :columns="columns"\n    :needPagination="false"\n    :column-options="columnOptions"\n    :toolbar-list="toolbarList"\n  >\n    <df-select slot="dateHeaderEditing" slot-scope="scope" v-model="headerData.date" placeholder="请选择" @change="scrollToRowWithRowIndex" @blur="closeHeaderEdit(\'date\')">\n      <df-option\n        v-for="item in optionsId"\n        :key="item.value"\n        :label="item.label"\n        :value="item.value">\n      </df-option>\n    </df-select>\n    <df-input slot="nameHeaderEditing" slot-scope="scope" v-model.number="headerData.name" placeholder="输入行数并按下enter" @change="scrollToRowWithRowIndex(headerData.name - 1)" @blur="closeHeaderEdit(\'name\')"></df-input>\n  </df-x-table>\n</template>\n\n<script>\nexport default {\n  name: \'Demo\',\n  data () {\n    return {\n      data: new Array(30)\n        .fill(0)\n        .map((item, index) => ({\n          id: index + 1,\n          date: \'2016-05-03\',\n          name: \'李时珍\',\n          gender: \'女\',\n          address: \'四川省武当山普陀区金沙江路 1518 弄\'\n        })),\n      columns: [{\n        label: \'日期\',\n        prop: \'date\'\n      }, {\n        label: \'姓名\',\n        prop: \'name\',\n        minWidth: 120\n      }, {\n        label: \'性别\',\n        prop: \'gender\'\n      }, {\n        label: \'地址\',\n        prop: \'address\',\n        minWidth: 250\n      }],\n      toolbarList: [{\n        name: \'开启全部表头编辑\',\n        click: () => {\n          this.openHeaderEdit()\n        }\n      }, {\n        name: \'关闭全部表头编辑\',\n        click: () => {\n          this.closeHeaderEdit()\n        }\n      }],\n      columnOptions: {\n        headerEditConfig: {\n          editableHeaders: [\'date\', \'name\']\n        }\n      },\n      headerData: {\n        date: null,\n        name: \'\'\n      },\n      optionsId: []\n    }\n  },\n  methods: {\n    scrollToRowWithRowIndex (rowIndex) {\n      const _Table = this.$refs.table.getRefTable()\n      _Table.scrollToRowIndex(rowIndex)\n    },\n    openHeaderEdit (columnProp) {\n      this.$refs.table.openHeaderEdit(columnProp)\n    },\n    closeHeaderEdit (columnProp) {\n      this.$refs.table.closeHeaderEdit(columnProp)\n    }\n  },\n  created () {\n    this.optionsId = this.data.map((row, rowIndex) => {\n      return {\n        value: rowIndex,\n        label: `跳转到${row.id}`\n      }\n    })\n  },\n  mounted () {\n    this.$nextTick(() => this.openHeaderEdit())\n  }\n}\n<\/script>\n')])])])],2),e._m(15),e._m(16),e._m(17),e._m(18),e._m(19),e._m(20),e._m(21),e._m(22),e._m(23),e._m(24),e._m(25),e._m(26),e._m(27),e._m(28),e._m(29),e._m(30),e._m(31)],1)},o=[function(){var e=this,n=e._self._c;return n("h2",{attrs:{id:"xtable-fen-ye-biao-ge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xtable-fen-ye-biao-ge"}},[e._v("¶")]),e._v(" XTable 分页表格")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"ji-chu-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-yong-fa"}},[e._v("¶")]),e._v(" 基础用法")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"pagination-ke-xuan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pagination-ke-xuan"}},[e._v("¶")]),e._v(" pagination 可选")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"tou-bu-cha-cao"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tou-bu-cha-cao"}},[e._v("¶")]),e._v(" 头部插槽")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"wei-bu-cha-cao"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wei-bu-cha-cao"}},[e._v("¶")]),e._v(" 尾部插槽")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"yi-ji-biao-tou"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yi-ji-biao-tou"}},[e._v("¶")]),e._v(" 一级表头")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"duo-ji-biao-tou"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#duo-ji-biao-tou"}},[e._v("¶")]),e._v(" 多级表头")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"shu-biao"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shu-biao"}},[e._v("¶")]),e._v(" 树表")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"dai-cao-zuo-lie-gong-ju-lan-biao-ge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dai-cao-zuo-lie-gong-ju-lan-biao-ge"}},[e._v("¶")]),e._v(" 带操作列、工具栏表格")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"fen-ye-biao-ge-zi-ding-yi-fen-ye-shu-ju-diypagedatawei-true"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fen-ye-biao-ge-zi-ding-yi-fen-ye-shu-ju-diypagedatawei-true"}},[e._v("¶")]),e._v(" 分页表格-自定义分页数据(diyPageData为true)")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"fen-ye-biao-ge-shi-yong-nei-zhi-fen-ye-ji-suan-diypagedatawei-false"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fen-ye-biao-ge-shi-yong-nei-zhi-fen-ye-ji-suan-diypagedatawei-false"}},[e._v("¶")]),e._v(" 分页表格-使用内置分页计算(diyPageData为false)")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"chuan-ru-jie-kou-fang-fa-huo-qu-biao-ge-shu-ju"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chuan-ru-jie-kou-fang-fa-huo-qu-biao-ge-shu-ju"}},[e._v("¶")]),e._v(" 传入接口方法获取表格数据")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"jian-dan-de-ke-bian-ji-biao-ge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jian-dan-de-ke-bian-ji-biao-ge"}},[e._v("¶")]),e._v(" 简单的可编辑表格")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"mei-ge-dan-yuan-ge-de-xia-la-xuan-xiang-du-li"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mei-ge-dan-yuan-ge-de-xia-la-xuan-xiang-du-li"}},[e._v("¶")]),e._v(" 每个单元格的下拉选项独立")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"ke-bian-ji-biao-tou"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ke-bian-ji-biao-tou"}},[e._v("¶")]),e._v(" 可编辑表头")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"shu-xing-he-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shu-xing-he-pei-zhi"}},[e._v("¶")]),e._v(" 属性和配置")])},function(){var e=this,n=e._self._c;return n("p",[e._v("x-table 完整地保留了 pagination 和 table 的属性和事件，请前往 "),n("a",{attrs:{href:"#/component/pagination"}},[e._v("pagination")]),e._v(" 和 "),n("a",{attrs:{href:"#/component/table"}},[e._v("table")]),e._v(" 查看详细属性和事件，以下列举它们的一些区别：")])},function(){var e=this,n=e._self._c;return n("p",[e._v("1.x-table 的匿名插槽同 table，用于存放 table-column，具名插槽 header/footer 用于存放头部/尾部区域，一般来说，这里会放置一些按钮，像上面的例子那样；"),n("br"),e._v(" 2.x-table 提供了一个名为 "),n("code",[e._v("pagination-change")]),e._v(" 的事件，这是一个整合了 pagination 中 "),n("code",[e._v("size-change")]),e._v(" 和 "),n("code",[e._v("current-change")]),e._v(" 事件的事件，即当 "),n("code",[e._v("currentPage")]),e._v(" 或 "),n("code",[e._v("pageSize")]),e._v(" 中任一项发生变化都会触发此事件，携带的参数是一个对象，包含当前的"),n("code",[e._v("currentPage")]),e._v(" 和 "),n("code",[e._v("pageSize")]),e._v("；"),n("br"),e._v(" 3.x-table 必须配置一个有效的高度，否则 table 组件的高度的计算将出现问题；"),n("br"),e._v(" 4.x-table 也完整地保留了 pagination 和 table 的方法，但是由于它们被封装在了内部，所以你需要先取到它们的实例，才能使用对应的方法，方法名参见下方 Methods。")])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"xtable-e-wai-de-attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xtable-e-wai-de-attributes"}},[e._v("¶")]),e._v(" XTable 额外的 Attributes")])},function(){var e=this,n=e._self._c;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("header-height")]),n("td",[e._v("自定义头部高度")]),n("td",[e._v("string/number")]),n("td",[e._v("*")]),n("td",[e._v("34")])]),n("tr",[n("td",[e._v("hide-header-slot")]),n("td",[e._v("是否需要隐藏头部插槽(在头部插槽存在的情况下)")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("fasle")])]),n("tr",[n("td",[e._v("need-pagination")]),n("td",[e._v("是否需要 pagination 组件")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("true")])]),n("tr",[n("td",[e._v("pagination-height")]),n("td",[e._v("自定义分页组件高度")]),n("td",[e._v("string/number")]),n("td",[e._v("*")]),n("td",[e._v("36")])]),n("tr",[n("td",[e._v("footer-height")]),n("td",[e._v("自定义尾部高度")]),n("td",[e._v("string/number")]),n("td",[e._v("*")]),n("td",[e._v("34")])]),n("tr",[n("td",[e._v("hide-footer-slot")]),n("td",[e._v("是否需要隐藏尾部插槽(在尾部插槽存在的情况下)")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("fasle")])]),n("tr",[n("td",[e._v("data")]),n("td",[e._v("表格数据")]),n("td",[e._v("array")]),n("td",[e._v("*")]),n("td",[e._v("[]")])]),n("tr",[n("td",[e._v("columns")]),n("td",[e._v("列配置，详见下方")]),n("td",[e._v("array")]),n("td",[e._v("*")]),n("td",[e._v("[]")])]),n("tr",[n("td",[e._v("columnStrict")]),n("td",[e._v("是否开启列配置严格隔离模式,开启后,columns需要变化时,需要手动更新调用renderColumns")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("true")])]),n("tr",[n("td",[e._v("hasIndex")]),n("td",[e._v("是否需要序号列")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("false")])]),n("tr",[n("td",[e._v("hasSelection")]),n("td",[e._v("是否需要开启多选")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("false")])]),n("tr",[n("td",[e._v("hasOperation")]),n("td",[e._v("是否需要操作列")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("false")])]),n("tr",[n("td",[e._v("operationWidth")]),n("td",[e._v("操作列宽度")]),n("td",[e._v("string/number")]),n("td",[e._v("*")]),n("td",[e._v("120")])]),n("tr",[n("td",[e._v("operationConfig")]),n("td",[e._v("操作列的其他配置")]),n("td",[e._v("object")]),n("td",[e._v("*")]),n("td",[e._v("{}")])]),n("tr",[n("td",[e._v("operationButtons")]),n("td",[e._v("操作列按钮配置，详见下方")]),n("td",[e._v("array")]),n("td",[e._v("*")]),n("td",[e._v("[]")])]),n("tr",[n("td",[e._v("toolbarList")]),n("td",[e._v("工具栏按钮配置，详见下方")]),n("td",[e._v("array")]),n("td",[e._v("*")]),n("td",[e._v("[]")])]),n("tr",[n("td",[e._v("pageSizes")]),n("td",[e._v("可选每页条数")]),n("td",[e._v("array")]),n("td",[e._v("*")]),n("td",[e._v("[10, 20, 50, 100]")])]),n("tr",[n("td",[e._v("defaultPageSizeIndex")]),n("td",[e._v("默认每页条数，对应pageSizes的索引")]),n("td",[e._v("number")]),n("td",[e._v("*")]),n("td",[e._v("1")])]),n("tr",[n("td",[e._v("defaultCurrentPage")]),n("td",[e._v("默认当前页码")]),n("td",[e._v("number")]),n("td",[e._v("*")]),n("td",[e._v("1")])]),n("tr",[n("td",[e._v("diyPageData")]),n("td",[e._v("是否自定义分页数据")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("true")])]),n("tr",[n("td",[e._v("total")]),n("td",[e._v("数据总数（diyPageData：true时有效）")]),n("td",[e._v("number")]),n("td",[e._v("*")]),n("td",[e._v("0")])]),n("tr",[n("td",[e._v("pageSize")]),n("td",[e._v("每页数（diyPageData：true时有效）")]),n("td",[e._v("number")]),n("td",[e._v("*")]),n("td",[e._v("20")])]),n("tr",[n("td",[e._v("currentPage")]),n("td",[e._v("当前页数（diyPageData：true时有效）")]),n("td",[e._v("number")]),n("td",[e._v("*")]),n("td",[e._v("1")])]),n("tr",[n("td",[e._v("needApi")]),n("td",[e._v("是否需要调用api")]),n("td",[e._v("boolean")]),n("td",[e._v("*")]),n("td",[e._v("false")])]),n("tr",[n("td",[e._v("apiFunc")]),n("td",[e._v("请求表格数据方法,参数为分页信息")]),n("td",[e._v("function")]),n("td",[e._v("*")]),n("td",[e._v("function (pageInfo) { Promise.resolve({}) }")])]),n("tr",[n("td",[e._v("finishPostApi")]),n("td",[e._v("apiFunc请求完成并数据回填表格后的方法，参数依次为表格数据，分页信息，表格实例")]),n("td",[e._v("function")]),n("td",[e._v("*")]),n("td",[e._v("function (data, pageInfo, vm) {}")])]),n("tr",[n("td",[e._v("resPonseKey")]),n("td",[e._v("当接口返回数据格式为object时，作为表格数据的key名；")]),n("td",[e._v("object")]),n("td",[e._v("*")]),n("td",[e._v("{ dataKey: 'list', totalKey: 'totalRows' }")])]),n("tr",[n("td",[e._v("getDataAtOnce")]),n("td",[e._v("在配置了接口的情况下，是否在挂载完成后立刻请求接口")]),n("td",[e._v("Boolean")]),n("td",[e._v("*")]),n("td",[e._v("true")])])])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"cao-zuo-lie-an-niu-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cao-zuo-lie-an-niu-pei-zhi"}},[e._v("¶")]),e._v(" 操作列按钮配置")])},function(){var e=this,n=e._self._c;return n("table",[n("thead",[n("tr",[n("th",[e._v("name")]),n("th",[e._v("类型")]),n("th",[e._v("说明")])])]),n("tbody",[n("tr",[n("td",[e._v("name")]),n("td",[e._v("string")]),n("td",[e._v("按钮名称/图标类名（按钮默认以文本显示，若需要显示成图标，需在将operationConfig里配置buttonType: icon）")])]),n("tr",[n("td",[e._v("showable")]),n("td",[e._v("Function(button, buttonIndex, row, rowIndex)/Boolean")]),n("td",[e._v("是否显示")])]),n("tr",[n("td",[e._v("click")]),n("td",[e._v("Function(button, buttonIndex, row, rowIndex)")]),n("td",[e._v("按钮点击事件")])])])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"gong-ju-lan-an-niu-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gong-ju-lan-an-niu-pei-zhi"}},[e._v("¶")]),e._v(" 工具栏按钮配置")])},function(){var e=this,n=e._self._c;return n("table",[n("thead",[n("tr",[n("th",[e._v("name")]),n("th",[e._v("类型")]),n("th",[e._v("说明")])])]),n("tbody",[n("tr",[n("td",[e._v("—")]),n("td",[e._v("—")]),n("td",[e._v("按钮的内容，同 button")])]),n("tr",[n("td",[e._v("name")]),n("td",[e._v("string")]),n("td",[e._v("按钮名称")])]),n("tr",[n("td",[e._v("click")]),n("td",[e._v("Function(button)")]),n("td",[e._v("按钮点击事件")])])])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"lie-pei-zhi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lie-pei-zhi"}},[e._v("¶")]),e._v(" 列配置")])},function(){var e=this,n=e._self._c;return n("table",[n("thead",[n("tr",[n("th",[e._v("name")]),n("th",[e._v("类型")]),n("th",[e._v("说明")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("—")]),n("td",[e._v("—")]),n("td",[e._v("列的内容，同 Table-column")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("useSlotForm")]),n("td",[e._v("boolean")]),n("td",[e._v("使用插槽编辑项")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("form")]),n("td",[e._v("object")]),n("td",[e._v("单元格表单配置（支持表单项本身的属性配置，具体配置详见对应的文档）")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("form.diyType")]),n("td",[e._v("boolean")]),n("td",[e._v("是否使用自定义表单组件")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("form.type")]),n("td",[e._v("string")]),n("td",[e._v("表单组件；diyType为false时，支持组件库所有表单组件，去除‘df-’前缀即可(例如：input/select/input-number)；diyType为true时，为自定义表单组件的名字")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("form.itemType")]),n("td",[e._v("string")]),n("td",[e._v("type里面的子表单组件，用于需要两个标签搭配使用的表单组件；例如select搭配option")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("form.modelKey")]),n("td",[e._v("string")]),n("td",[e._v("表单绑定字段，无则默认绑定column.prop")]),n("td",[e._v("''")])]),n("tr",[n("td",[e._v("form.disabled")]),n("td",[e._v("boolean/function(value, row, column)")]),n("td",[e._v("表单是否禁用")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("form.dicData")]),n("td",[e._v("array")]),n("td",[e._v("选项数组")]),n("td",[e._v("[]")])]),n("tr",[n("td",[e._v("form.filterDic")]),n("td",[e._v("function(dicData, row)")]),n("td",[e._v("选项数组过滤方法")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("form.labelKey")]),n("td",[e._v("string")]),n("td",[e._v("选项绑定的名称字段")]),n("td",[e._v("'label'")])]),n("tr",[n("td",[e._v("form.valueKey")]),n("td",[e._v("string")]),n("td",[e._v("选项绑定的值字段")]),n("td",[e._v("'value'")])]),n("tr",[n("td",[e._v("form.bindObj")]),n("td",[e._v("boolean")]),n("td",[e._v("选项值是否绑定为整个对象（仅适用于select）")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("form.independent")]),n("td",[e._v("boolean")]),n("td",[e._v("否开启独立管理下拉选项，开启后，需要手动通过表单实例设置下拉选项options（仅适用于select）")]),n("td",[e._v("-")])]),n("tr",[n("td",[e._v("form.events")]),n("td",[e._v("{event: function}")]),n("td",[e._v("表单项的事件（change、foucus、blur...），回调参数为：事件原本的回调参数+{row: 当前行数据, vm: 当前单元格表单项示例, $index: 当前rowIndex}")]),n("td",[e._v("-")])])])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"slot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#slot"}},[e._v("¶")]),e._v(" Slot")])},function(){var e=this,n=e._self._c;return n("table",[n("thead",[n("tr",[n("th",[e._v("name")]),n("th",[e._v("说明")])])]),n("tbody",[n("tr",[n("td",[e._v("—")]),n("td",[e._v("表格的内容，同 table")])]),n("tr",[n("td",[e._v("列的属性名+Header")]),n("td",[e._v("自定义具体某一列的表头内容")])]),n("tr",[n("td",[e._v("列的属性名+HeaderEditing")]),n("td",[e._v("自定义具体某一列的表头内容")])]),n("tr",[n("td",[e._v("列的属性名+Edit")]),n("td",[e._v("自定义具体某一列的打开编辑插槽后的内容")])]),n("tr",[n("td",[e._v("列的属性名")]),n("td",[e._v("自定义具体某一列的内容")])]),n("tr",[n("td",[e._v("pre")]),n("td",[e._v("插入columns配置的列前面")])]),n("tr",[n("td",[e._v("empty")]),n("td",[e._v("自定义空数据展示内容，同 table。")])]),n("tr",[n("td",[e._v("append")]),n("td",[e._v("插入至表格最后一行之后的内容，如果需要对表格的内容进行无限滚动操作，可能需要用到这个 slot。若表格有合计行，该 slot 会位于合计行之上，同 table。")])]),n("tr",[n("td",[e._v("customSummary")]),n("td",[e._v("开启合计行之后，自定义合计行内容，同 table。")])]),n("tr",[n("td",[e._v("header")]),n("td",[e._v("头部内容")])]),n("tr",[n("td",[e._v("footer")]),n("td",[e._v("尾部内容")])])])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("¶")]),e._v(" Methods")])},function(){var e=this,n=e._self._c;return n("table",[n("thead",[n("tr",[n("th",[e._v("方法名")]),n("th",[e._v("说明")]),n("th",[e._v("参数")])])]),n("tbody",[n("tr",[n("td",[e._v("getRefTable")]),n("td",[e._v("获取 table 组件，以使用其方法")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("getRefPagination")]),n("td",[e._v("获取 pagination 组件，以使用其方法")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("getFormRef")]),n("td",[e._v("获取某一行某一列表单项的ref")]),n("td",[e._v("prop, rowIndex")])]),n("tr",[n("td",[e._v("openEdit")]),n("td",[e._v("开启编辑,有传入rowIndex时，则仅开启对应行的编辑项，反之开启全部")]),n("td",[e._v("rowIndex")])]),n("tr",[n("td",[e._v("closeEdit")]),n("td",[e._v("关闭编辑,有传入rowIndex时，则仅关闭对应行的编辑项，反之关闭全部")]),n("td",[e._v("rowIndex")])]),n("tr",[n("td",[e._v("editFocus")]),n("td",[e._v("编辑项聚焦")]),n("td",[e._v("prop, rowIndex")])]),n("tr",[n("td",[e._v("editFocusSelect")]),n("td",[e._v("编辑项聚焦并全选内容")]),n("td",[e._v("prop, rowIndex")])]),n("tr",[n("td",[e._v("editBlur")]),n("td",[e._v("编辑项失焦")]),n("td",[e._v("prop, rowIndex")])]),n("tr",[n("td",[e._v("getTableData")]),n("td",[e._v("获取表格数据,传入keepFirstPage时,将从第一页开始搜索")]),n("td",[e._v("'keepFirstPage'")])]),n("tr",[n("td",[e._v("updateColumns")]),n("td",[e._v("手动更新表格列配置（可在当列配置发生变化后手动调用）")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("openHeaderEdit")]),n("td",[e._v("开启表头编辑,有传入columnProp时，则仅开启对应列表头的编辑项，反之开启全部")]),n("td",[e._v("columnProp")])]),n("tr",[n("td",[e._v("closeHeaderEdit")]),n("td",[e._v("关闭表头编辑,有传入columnProp时，则仅关闭对应列表头的编辑项，反之关闭全部")]),n("td",[e._v("columnProp")])]),n("tr",[n("td",[e._v("updatePageSize")]),n("td",[e._v("更新每页条数, 入参需为数字")]),n("td",[e._v("size")])]),n("tr",[n("td",[e._v("updateCurrentPage")]),n("td",[e._v("更新当前页数, 入参需为数字")]),n("td",[e._v("pageNumber")])])])])},function(){var e=this,n=e._self._c;return n("h3",{attrs:{id:"xtable-e-wai-de-events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xtable-e-wai-de-events"}},[e._v("¶")]),e._v(" XTable 额外的 Events")])},function(){var e=this,n=e._self._c;return n("table",[n("thead",[n("tr",[n("th",[e._v("事件名称")]),n("th",[e._v("说明")]),n("th",[e._v("回调参数")])])]),n("tbody",[n("tr",[n("td",[e._v("pagination-change")]),n("td",[e._v("启用"),n("code",[e._v("pagination")]),e._v("后，当"),n("code",[e._v("pagination")]),e._v("的"),n("code",[e._v("currentPage")]),e._v("或"),n("code",[e._v("pageSize")]),e._v("中任一项发生变化都会触发此事件，携带的参数是一个对象，包含当前的"),n("code",[e._v("currentPage")]),e._v(" 和 "),n("code",[e._v("pageSize")])]),n("td",[e._v("{currentPage, pageSize}")])]),n("tr",[n("td",[e._v("getData")]),n("td",[e._v("表格接口请求成功后触发该事件")]),n("td",[e._v("tableData")])]),n("tr",[n("td",[e._v("formChange")]),n("td",[e._v("表格内的表单的change事件")]),n("td",[e._v("prop, value, row, rowIndex")])])])])}],d=t("5530"),r=(t("d81d"),t("cb29"),t("99af"),t("fb6a"),t("a9e3"),t("d3b7"),t("a434"),t("14d9"),t("b0c0"),{name:"component-doc",components:{"df-demo0":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{staticStyle:{height:"413px"},attrs:{data:e.tableData,"page-sizes":e.pageSizes,"page-size":e.pageSize,layout:e.layout,total:e.total,small:!1},on:{"pagination-change":e.handlePaginationChange}},[t("df-table-column",{attrs:{prop:"index",label:"序号",width:"50"}}),e._v(" "),t("df-table-column",{attrs:{prop:"date",label:"日期",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"name",label:"姓名",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"gender",label:"性别",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},n=[],t=1e3,a=new Array(t).fill(0).map((function(e,n){return{index:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}})),o=function(e,n){console.log("开始查询表格数据，当前页是第 ".concat(e," 页，每一页请求 ").concat(n," 条数据"));var t=a.slice(n*(e-1),n*e);return console.log("本次查询的结果是",t),t},r=function(){return t},i={name:"Demo",data:function(){return{tableData:[],total:1,pageSizes:[5,10,20,50,100,200,300,400],pageSize:10,currentPage:1,layout:"total, sizes, prev, pager, next, jumper"}},methods:{getTotal:function(){this.total=r()},getData:function(){this.tableData=o(this.currentPage,this.pageSize)},handlePaginationChange:function(e){this.currentPage=e.currentPage,this.pageSize=e.pageSize,this.getData()}},created:function(){this.getTotal(),this.getData()}};return Object(d["a"])({render:e,staticRenderFns:n},i)}(),"df-demo1":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{staticStyle:{height:"353px"},attrs:{data:e.tableData,needPagination:!1}},[t("df-table-column",{attrs:{prop:"index",label:"序号",width:"50"}}),e._v(" "),t("df-table-column",{attrs:{prop:"date",label:"日期",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"name",label:"姓名",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"gender",label:"性别",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"address",label:"地址"}})],1)]],2)},n=[],t={name:"Demo",data:function(){return{tableData:new Array(10).fill(0).map((function(e,n){return{index:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}}))}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo2":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{staticStyle:{height:"387px"},attrs:{data:e.tableData,needPagination:!1}},[t("template",{slot:"header"},[t("df-button",{attrs:{type:"success"}},[t("i",{staticClass:"df-icon-add"}),e._v("\n        开单\n      ")]),e._v(" "),t("df-button",{attrs:{plain:""}},[e._v("打印")]),e._v(" "),t("df-button",{attrs:{plain:"",icon:"df-icon-refresh"}})],1),e._v(" "),t("df-table-column",{attrs:{prop:"index",label:"序号",width:"50"}}),e._v(" "),t("df-table-column",{attrs:{prop:"date",label:"日期",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"name",label:"姓名",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"gender",label:"性别",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"address",label:"地址"}})],2)]],2)},n=[],t={name:"Demo",data:function(){return{tableData:new Array(10).fill(0).map((function(e,n){return{index:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}}))}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo3":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{staticStyle:{height:"387px"},attrs:{data:e.tableData,needPagination:!1}},[t("df-table-column",{attrs:{prop:"index",label:"序号",width:"50"}}),e._v(" "),t("df-table-column",{attrs:{prop:"date",label:"日期",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"name",label:"姓名",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"gender",label:"性别",width:"150"}}),e._v(" "),t("df-table-column",{attrs:{prop:"address",label:"地址"}}),e._v(" "),t("template",{slot:"footer"},[t("df-button",{attrs:{type:"success"}},[t("i",{staticClass:"df-icon-add"}),e._v("\n        开单\n      ")]),e._v(" "),t("df-button",{attrs:{plain:""}},[e._v("打印")]),e._v(" "),t("df-button",{attrs:{plain:"",icon:"df-icon-refresh"}})],1)],2)]],2)},n=[],t={name:"Demo",data:function(){return{tableData:new Array(10).fill(0).map((function(e,n){return{index:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}}))}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo4":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{ref:"table",staticStyle:{height:"387px"},attrs:{"has-index":"",data:e.data,columns:e.columns,needPagination:!1}})]],2)},n=[],t={name:"Demo",data:function(){return{data:new Array(10).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}})),columns:[{label:"日期",prop:"date"},{label:"姓名",prop:"name"},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}]}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo5":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{ref:"table",staticStyle:{height:"387px"},attrs:{"has-index":"",data:e.data,columns:e.columns,needPagination:!1}})]],2)},n=[],t={name:"Demo",data:function(){return{data:new Array(10).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}})),columns:[{label:"日期",prop:"date"},{label:"人员信息",children:[{label:"姓名",prop:"name"},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}]}]}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo6":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{ref:"table",staticStyle:{height:"387px"},attrs:{data:e.data,columns:e.columns,needPagination:!1,"row-key":"id",border:"","use-tree":"","default-expand-all":"","tree-props":{children:"children",hasChildren:"hasChildren"}}})]],2)},n=[],t={name:"Demo",data:function(){return{columns:[{label:"日期",prop:"date"},{label:"姓名",prop:"name"},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}],data:new Array(5).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄",children:[{id:Number("".concat(n+1).concat(n+1)),date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"},{id:Number("".concat(n+1).concat(n+2)),date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}]}}))}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo7":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{ref:"table",staticStyle:{height:"387px"},attrs:{data:e.data,columns:e.columns,"has-index":"","has-operation":"","operation-buttons":e.operationButtons,"operation-width":120,"toolbar-list":e.toolbarList,needPagination:!1}})]],2)},n=[],t={name:"Demo",data:function(){return{data:new Array(10).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}})),columns:[{label:"日期",prop:"date"},{label:"姓名",prop:"name"},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}],operationButtons:[{name:"编辑",click:function(e,n,t){console.log(e,n,t)}},{name:"删除",click:function(e,n,t){console.log(e,n,t)}}],toolbarList:[{name:"新增",icon:"df-icon-add",type:"success",click:function(){}}]}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo8":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{ref:"table",staticStyle:{height:"387px"},attrs:{data:e.pageData,columns:e.columns,"has-index":"","has-operation":"","operation-buttons":e.operationButtons,"operation-width":120,"toolbar-list":e.toolbarList,"need-pagination":"",total:e.total,pageSize:e.pageSize,currentPage:e.currentPage,pageSizes:e.pageSizes,defaultPageSizeIndex:1},on:{"pagination-change":e.handlePaginationChange}})]],2)},n=[],t={name:"Demo",data:function(){return{data:new Array(18).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}})),columns:[{label:"日期",prop:"date"},{label:"姓名",prop:"name"},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}],operationButtons:[{name:"编辑",click:function(e,n,t){console.log(e,n,t)}},{name:"删除",click:function(e,n,t){console.log(e,n,t)}}],toolbarList:[{name:"新增",icon:"df-icon-add",type:"success",click:function(){}}],pageSize:10,currentPage:1,pageSizes:[5,10,20,50]}},computed:{total:function(){return this.data.length},pageData:function(){var e=(this.currentPage-1)*this.pageSize,n=this.currentPage*this.pageSize;return this.data.slice(e,n)}},methods:{handlePaginationChange:function(e){this.currentPage=e.currentPage||1,this.pageSize=e.pageSize||10}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo9":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],ref:"table",staticStyle:{height:"387px"},attrs:{data:e.data,columns:e.columns,"has-index":"","has-operation":"","operation-buttons":e.operationButtons,"operation-width":120,"toolbar-list":e.toolbarList,"need-pagination":"",diyPageData:!1,pageSizes:e.pageSizes,defaultPageSizeIndex:1}})]],2)},n=[],t={name:"Demo",data:function(){var e=this;return{loading:!1,data:[],columns:[{label:"日期",prop:"date"},{label:"姓名",prop:"name"},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}],operationButtons:[{name:"编辑",click:function(e,n,t){console.log(e,n,t)}},{name:"删除",click:function(e,n,t){console.log(e,n,t)}}],toolbarList:[{name:"刷新",icon:"df-icon-refresh",type:"success",click:function(){e.$refs.table.updateCurrentPage(1),e.getTableData()}}],pageSizes:[5,10,20,50]}},methods:{getTableData:function(){var e=this,n=new Array(27).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}}));this.loading=!0,setTimeout((function(){e.$set(e,"data",n),e.loading=!1}),2e3)}},created:function(){this.getTableData()}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo10":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{ref:"table",staticStyle:{height:"387px"},attrs:{columns:e.columns,"has-index":"","has-operation":"","operation-buttons":e.operationButtons,"operation-width":120,"toolbar-list":e.toolbarList,"need-pagination":"",diyPageData:!1,pageSizes:e.pageSizes,defaultPageSizeIndex:1,needApi:"",apiFunc:e.getData,finishPostApi:e.handleFollowUp,resPonseKey:e.resPonseKey}})]],2)},n=[],t={name:"Demo",data:function(){var e=this;return{columns:[{label:"日期",prop:"date"},{label:"姓名",prop:"name"},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}],operationButtons:[{name:"编辑",click:function(e,n,t){console.log(e,n,t)}},{name:"删除",click:function(e,n,t){console.log(e,n,t)}}],toolbarList:[{name:"刷新",type:"success",icon:"df-icon-refresh",click:function(){e.$refs.table.getTableData()}}],pageSizes:[5,10,20,50],resPonseKey:{dataKey:"list",totalKey:"totalRows"}}},methods:{getData:function(e,n){function t(e,n){return Math.floor(Math.random()*(n-e))+e}var a=["男","女"],o=new Array(e.pageSize).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:a[Number(t(0,2))],address:"四川省武当山普陀区金沙江路 ".concat(t(100,9999)," 弄")}}));return new Promise((function(e){setTimeout((function(){e({list:o,totalRows:30})}),2e3)}))},handleFollowUp:function(e,n,t){}}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo11":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],ref:"table",staticStyle:{height:"387px"},attrs:{data:e.data,columns:e.columns,"column-options":e.columnOptions,"has-operation":"","operation-buttons":e.operationButtons,"operation-width":120,"need-pagination":!1},on:{enter:e.handleFormEnter,formChange:e.handleFormChange}})]],2)},n=[],t={name:"Demo",data:function(){var e=this;return{loading:!1,data:[],columns:[{label:"日期",prop:"date",form:{formType:"date-picker"}},{label:"姓名",prop:"name",form:{type:"input",modelKey:"nickName"}},{label:"性别",prop:"gender",form:{type:"select",itemType:"option",labelKey:"label",valueKey:"value",bindObj:!0,dicData:[{label:"男",value:0},{label:"女",value:1}]}},{label:"地址",prop:"address",minWidth:250,form:{type:"input"}}],columnOptions:{editConfig:{trigger:"click",mode:"slot",editableColumns:["date","name","gender","address"]}},operationButtons:[{name:"新增",showable:function(n,t){return t===e.data.length-1},click:function(n,t,a){e.addRow()}},{name:"删除",click:function(n,t,a){e.data.splice(a,1)}}]}},methods:{getData:function(){var e=this;function n(e,n){return Math.floor(Math.random()*(n-e))+e}var t=new Array(5).fill(0).map((function(e,t){return{date:"2016-05-03 00:00:00",name:"李时珍",nickName:"小珍",gender:{value:n(0,2)},address:"四川省武当山普陀区金沙江路 ".concat(n(100,9999)," 弄")}}));return new Promise((function(n){e.loading=!0,setTimeout((function(){e.$set(e,"data",t),e.$nextTick((function(){return e.openEdit()})),e.loading=!1}),2e3)}))},openEdit:function(e){var n=this.$refs.table;n.openEdit(e),(e||0===e)&&this.$nextTick((function(){return n.editFocus("date",e)}))},addRow:function(){this.data.push({date:"",name:"",nickName:"",gender:null,address:""});var e=this.data.length-1;this.openEdit(e)},handleFormEnter:function(e,n,t,a){var o=this.$refs.table,d=o.getRefTable(),r=d.getNextEditableSlot(e,a),i=r.columnProp,l=r.rowIndex,s=r.isFirstEditableSlot;s?this.addRow():o.editFocus(i,l)},handleFormChange:function(e,n,t,a){console.log("prop",t),this.handleFormEnter(e,n,t,a)}},mounted:function(){this.getData()}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo12":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],ref:"table",staticStyle:{height:"387px"},attrs:{data:e.data,columns:e.columns,"column-options":e.columnOptions,"has-operation":"","operation-buttons":e.operationButtons,"operation-width":120,"need-pagination":!1,border:""}})]],2)},n=[],t={name:"Demo",data:function(){var e=this;return{loading:!1,data:[],columns:[{label:"日期",prop:"date",form:{formType:"date-picker"}},{label:"人员信息",children:[{label:"姓名",prop:"name",form:{type:"input"}},{label:"性别",prop:"gender",form:{type:"select",itemType:"option",labelKey:"label",valueKey:"value",selectLabel:"label",dicData:[],bindObj:!0,independent:!0,filterable:!0,remote:!0,events:{focus:function(n,t){var a=t.row,o=t.vm,d=(t.$index,a.gender);e.$set(a,"gender",""),o.loading=!0,setTimeout((function(){var n=a.name?[{label:"男",value:0},{label:"女",value:1}]:[];e.$set(o,"options",n),e.$nextTick((function(){return e.$set(a,"gender",d)})),o.loading=!1}),1e3)},blur:function(n,t){t.row;var a=t.vm;e.$set(a,"options",[])}}}},{label:"地址",prop:"address",minWidth:250,form:{type:"input"}}]}],columnOptions:{editConfig:{trigger:"click",mode:"slot",editableColumns:["date","name","gender","address"]}},operationButtons:[{name:"新增",showable:function(n,t){return t===e.data.length-1},click:function(n,t,a){e.addRow()}},{name:"删除",click:function(n,t,a){e.data.splice(a,1)}}]}},methods:{getData:function(){var e=this;function n(e,n){return Math.floor(Math.random()*(n-e))+e}var t=new Array(5).fill(0).map((function(e,t){return{date:"2016-05-03 00:00:00",name:"李时珍",gender:{label:"男",value:0},address:"四川省武当山普陀区金沙江路 ".concat(n(100,9999)," 弄")}}));return new Promise((function(n){e.loading=!0,setTimeout((function(){e.$set(e,"data",t),e.$nextTick((function(){return e.openEdit()})),e.loading=!1}),2e3)}))},openEdit:function(e){var n=this.$refs.table;n.openEdit(e),(e||0===e)&&this.$nextTick((function(){return n.editFocus("date",e)}))},addRow:function(){this.data.push({date:"",name:"",gender:null,address:""});var e=this.data.length-1;this.openEdit(e)}},mounted:function(){this.getData()}};return Object(d["a"])({render:e,staticRenderFns:n},t)}(),"df-demo13":function(){var e=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[[t("df-x-table",{ref:"table",staticStyle:{height:"387px"},attrs:{"has-index":"",data:e.data,columns:e.columns,needPagination:!1,"column-options":e.columnOptions,"toolbar-list":e.toolbarList},scopedSlots:e._u([{key:"dateHeaderEditing",fn:function(n){return t("df-select",{attrs:{placeholder:"请选择"},on:{change:e.scrollToRowWithRowIndex,blur:function(n){return e.closeHeaderEdit("date")}},model:{value:e.headerData.date,callback:function(n){e.$set(e.headerData,"date",n)},expression:"headerData.date"}},e._l(e.optionsId,(function(e){return t("df-option",{key:e.value,attrs:{label:e.label,value:e.value}})})),1)}},{key:"nameHeaderEditing",fn:function(n){return t("df-input",{attrs:{placeholder:"输入行数并按下enter"},on:{change:function(n){return e.scrollToRowWithRowIndex(e.headerData.name-1)},blur:function(n){return e.closeHeaderEdit("name")}},model:{value:e.headerData.name,callback:function(n){e.$set(e.headerData,"name",e._n(n))},expression:"headerData.name"}})}}])})]],2)},n=[],t={name:"Demo",data:function(){var e=this;return{data:new Array(30).fill(0).map((function(e,n){return{id:n+1,date:"2016-05-03",name:"李时珍",gender:"女",address:"四川省武当山普陀区金沙江路 1518 弄"}})),columns:[{label:"日期",prop:"date"},{label:"姓名",prop:"name",minWidth:120},{label:"性别",prop:"gender"},{label:"地址",prop:"address",minWidth:250}],toolbarList:[{name:"开启全部表头编辑",click:function(){e.openHeaderEdit()}},{name:"关闭全部表头编辑",click:function(){e.closeHeaderEdit()}}],columnOptions:{headerEditConfig:{editableHeaders:["date","name"]}},headerData:{date:null,name:""},optionsId:[]}},methods:{scrollToRowWithRowIndex:function(e){var n=this.$refs.table.getRefTable();n.scrollToRowIndex(e)},openHeaderEdit:function(e){this.$refs.table.openHeaderEdit(e)},closeHeaderEdit:function(e){this.$refs.table.closeHeaderEdit(e)}},created:function(){this.optionsId=this.data.map((function(e,n){return{value:n,label:"跳转到".concat(e.id)}}))},mounted:function(){var e=this;this.$nextTick((function(){return e.openHeaderEdit()}))}};return Object(d["a"])({render:e,staticRenderFns:n},t)}()}}),i=r,l=t("2877"),s=Object(l["a"])(i,a,o,!1,null,null,null);n["default"]=s.exports}}]);
//# sourceMappingURL=chunk-2d0c498d.189901d7.js.map