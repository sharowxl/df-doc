(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e6483"],{"97a0":function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t._self._c;return e("section",{staticClass:"content df-doc"},[t._m(0),t._m(1),e("demo-block",[e("div",[e("p",[t._v("Transfer 的数据通过 "),e("code",[t._v("data")]),t._v(" 属性传入。数据需要是一个对象数组，每个对象有以下属性："),e("code",[t._v("key")]),t._v(" 为数据的唯一性标识，"),e("code",[t._v("label")]),t._v(" 为显示文本，"),e("code",[t._v("disabled")]),t._v(" 表示该项数据是否禁止转移。目标列表中的数据项会同步到绑定至 "),e("code",[t._v("v-model")]),t._v(" 的变量，值为数据项的 "),e("code",[t._v("key")]),t._v(" 所组成的数组。当然，如果希望在初始状态时目标列表不为空，可以像本例一样为 "),e("code",[t._v("v-model")]),t._v(" 绑定的变量赋予一个初始值。")])]),e("template",{slot:"source"},[e("df-demo0")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <df-transfer v-model="value" :data="data"></df-transfer>\n</template>\n\n<script>\n  export default {\n    data() {\n      const generateData = _ => {\n        const data = [];\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            key: i,\n            label: `备选项 ${ i }`,\n            disabled: i % 4 === 0\n          });\n        }\n        return data;\n      };\n      return {\n        data: generateData(),\n        value: [1, 4]\n      };\n    }\n  };\n<\/script>\n')])])])],2),t._m(2),e("p",[t._v("在数据很多的情况下，可以对数据进行搜索和过滤。")]),e("demo-block",[e("div",[e("p",[t._v("设置 "),e("code",[t._v("filterable")]),t._v(" 为 "),e("code",[t._v("true")]),t._v(" 即可开启搜索模式。默认情况下，若数据项的 "),e("code",[t._v("label")]),t._v(" 属性包含搜索关键字，则会在搜索结果中显示。你也可以使用 "),e("code",[t._v("filter-method")]),t._v(" 定义自己的搜索逻辑。"),e("code",[t._v("filter-method")]),t._v(" 接收一个方法，当搜索关键字变化时，会将当前的关键字和每个数据项传给该方法。若方法返回 "),e("code",[t._v("true")]),t._v("，则会在搜索结果中显示对应的数据项。")])]),e("template",{slot:"source"},[e("df-demo1")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n  <df-transfer\n    filterable\n    :filter-method=\"filterMethod\"\n    filter-placeholder=\"请输入城市拼音\"\n    v-model=\"value\"\n    :data=\"data\">\n  </df-transfer>\n</template>\n\n<script>\n  export default {\n    data() {\n      const generateData = _ => {\n        const data = [];\n        const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n        const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n        cities.forEach((city, index) => {\n          data.push({\n            label: city,\n            key: index,\n            pinyin: pinyin[index]\n          });\n        });\n        return data;\n      };\n      return {\n        data: generateData(),\n        value: [],\n        filterMethod(query, item) {\n          return item.pinyin.indexOf(query) > -1;\n        }\n      };\n    }\n  };\n<\/script>\n")])])])],2),t._m(3),e("p",[t._v("可以对列表标题文案、按钮文案、数据项的渲染函数、列表底部的勾选状态文案、列表底部的内容区等进行自定义。")]),e("demo-block",[e("div",[e("p",[t._v("可以使用 "),e("code",[t._v("titles")]),t._v("、"),e("code",[t._v("button-texts")]),t._v("、"),e("code",[t._v("render-content")]),t._v(" 和 "),e("code",[t._v("format")]),t._v(" 属性分别对列表标题文案、按钮文案、数据项的渲染函数和列表顶部的勾选状态文案进行自定义。数据项的渲染还可以使用 "),e("code",[t._v("scoped-slot")]),t._v(" 进行自定义。对于列表底部的内容区，提供了两个具名 slot："),e("code",[t._v("left-footer")]),t._v(" 和 "),e("code",[t._v("right-footer")]),t._v("。此外，如果希望某些数据项在初始化时就被勾选，可以使用 "),e("code",[t._v("left-default-checked")]),t._v(" 和 "),e("code",[t._v("right-default-checked")]),t._v(" 属性。最后，本例还展示了 "),e("code",[t._v("change")]),t._v(" 事件的用法。注意：由于 jsfiddle 不支持 JSX 语法，所以使用 "),e("code",[t._v("render-content")]),t._v(" 自定义数据项的例子在 jsfiddle 中无法运行。但是在实际的项目中，只要正确地配置了相关依赖，就可以正常运行。")])]),e("template",{slot:"source"},[e("df-demo2")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <div>\n    <p style="text-align: center; margin: 0 0 20px">使用 render-content 自定义数据项</p>\n    <div style="text-align: center">\n      <df-transfer\n        style="text-align: left; display: inline-block"\n        v-model="value"\n        filterable\n        :left-default-checked="[2, 3]"\n        :right-default-checked="[1]"\n        :render-content="renderFunc"\n        :titles="[\'Source\', \'Target\']"\n        :button-texts="[\'到左边\', \'到右边\']"\n        :format="{\n          noChecked: \'${total}\',\n          hasChecked: \'${checked}/${total}\'\n        }"\n        @change="handleChange"\n        :data="data">\n        <df-button class="transfer-footer" slot="left-footer" size="small">操作</df-button>\n        <df-button class="transfer-footer" slot="right-footer" size="small">操作</df-button>\n      </df-transfer>\n    </div>\n    <p style="text-align: center; margin: 50px 0 20px">使用 scoped-slot 自定义数据项</p>\n    <div style="text-align: center">\n      <df-transfer\n        style="text-align: left; display: inline-block"\n        v-model="value4"\n        filterable\n        :left-default-checked="[2, 3]"\n        :right-default-checked="[1]"\n        :titles="[\'Source\', \'Target\']"\n        :button-texts="[\'到左边\', \'到右边\']"\n        :format="{\n          noChecked: \'${total}\',\n          hasChecked: \'${checked}/${total}\'\n        }"\n        @change="handleChange"\n        :data="data">\n        <span slot-scope="{ option }">{{ option.key }} - {{ option.label }}</span>\n        <df-button class="transfer-footer" slot="left-footer" size="small">操作</df-button>\n        <df-button class="transfer-footer" slot="right-footer" size="small">操作</df-button>\n      </df-transfer>\n    </div>\n  </div>\n</template>\n\n<style>\n  .transfer-footer {\n    margin-left: 20px;\n    padding: 6px 5px;\n  }\n</style>\n\n<script>\n  export default {\n    data() {\n      const generateData = _ => {\n        const data = [];\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            key: i,\n            label: `备选项 ${ i }`,\n            disabled: i % 4 === 0\n          });\n        }\n        return data;\n      };\n      return {\n        data: generateData(),\n        value: [1],\n        value4: [1],\n        renderFunc(h, option) {\n          return <span>{ option.key } - { option.label }</span>;\n        }\n      };\n    },\n\n    methods: {\n      handleChange(value, direction, movedKeys) {\n        console.log(value, direction, movedKeys);\n      }\n    }\n  };\n<\/script>\n')])])])],2),t._m(4),t._m(5),e("demo-block",[e("div",[e("p",[t._v("本例中的数据源没有 "),e("code",[t._v("key")]),t._v(" 和 "),e("code",[t._v("label")]),t._v(" 字段，在功能上与它们相同的字段名为 "),e("code",[t._v("value")]),t._v(" 和 "),e("code",[t._v("desc")]),t._v("。因此可以使用"),e("code",[t._v("props")]),t._v(" 属性为 "),e("code",[t._v("key")]),t._v(" 和 "),e("code",[t._v("label")]),t._v(" 设置别名。")])]),e("template",{slot:"source"},[e("df-demo3")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n  <df-transfer\n    v-model="value"\n    :props="{\n      key: \'value\',\n      label: \'desc\'\n    }"\n    :data="data">\n  </df-transfer>\n</template>\n\n<script>\n  export default {\n    data() {\n      const generateData = _ => {\n        const data = [];\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            value: i,\n            desc: `备选项 ${ i }`,\n            disabled: i % 4 === 0\n          });\n        }\n        return data;\n      };\n      return {\n        data: generateData(),\n        value: []\n      };\n    }\n  };\n<\/script>\n')])])])],2),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15)],1)},r=[function(){var t=this,e=t._self._c;return e("h2",{attrs:{id:"transfer-chuan-suo-kuang"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transfer-chuan-suo-kuang"}},[t._v("¶")]),t._v(" Transfer 穿梭框")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"ji-chu-yong-fa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-yong-fa"}},[t._v("¶")]),t._v(" 基础用法")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"ke-sou-suo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ke-sou-suo"}},[t._v("¶")]),t._v(" 可搜索")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"ke-zi-ding-yi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ke-zi-ding-yi"}},[t._v("¶")]),t._v(" 可自定义")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"shu-ju-xiang-shu-xing-bie-ming"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shu-ju-xiang-shu-xing-bie-ming"}},[t._v("¶")]),t._v(" 数据项属性别名")])},function(){var t=this,e=t._self._c;return e("p",[t._v("默认情况下，Transfer 仅能识别数据项中的 "),e("code",[t._v("key")]),t._v("、"),e("code",[t._v("label")]),t._v(" 和 "),e("code",[t._v("disabled")]),t._v(" 字段。如果你的数据的字段名不同，可以使用 "),e("code",[t._v("props")]),t._v(" 属性为它们设置别名。")])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"attributes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[t._v("¶")]),t._v(" Attributes")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),e("th",[t._v("说明")]),e("th",[t._v("类型")]),e("th",[t._v("可选值")]),e("th",[t._v("默认值")])])]),e("tbody",[e("tr",[e("td",[t._v("value / v-model")]),e("td",[t._v("绑定值")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("data")]),e("td",[t._v("Transfer 的数据源")]),e("td",[t._v("array[{ key, label, disabled }]")]),e("td",[t._v("—")]),e("td",[t._v("[ ]")])]),e("tr",[e("td",[t._v("filterable")]),e("td",[t._v("是否可搜索")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("filter-placeholder")]),e("td",[t._v("搜索框占位符")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("请输入搜索内容")])]),e("tr",[e("td",[t._v("filter-method")]),e("td",[t._v("自定义搜索方法")]),e("td",[t._v("function")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("target-order")]),e("td",[t._v("右侧列表元素的排序策略：若为 "),e("code",[t._v("original")]),t._v("，则保持与数据源相同的顺序；若为 "),e("code",[t._v("push")]),t._v("，则新加入的元素排在最后；若为 "),e("code",[t._v("unshift")]),t._v("，则新加入的元素排在最前")]),e("td",[t._v("string")]),e("td",[t._v("original / push / unshift")]),e("td",[t._v("original")])]),e("tr",[e("td",[t._v("titles")]),e("td",[t._v("自定义列表标题")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("['列表 1', '列表 2']")])]),e("tr",[e("td",[t._v("button-texts")]),e("td",[t._v("自定义按钮文案")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("[ ]")])]),e("tr",[e("td",[t._v("render-content")]),e("td",[t._v("自定义数据项渲染函数")]),e("td",[t._v("function(h, option)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("format")]),e("td",[t._v("列表顶部勾选状态文案")]),e("td",[t._v("object{noChecked, hasChecked}")]),e("td",[t._v("—")]),e("td",[t._v("{ noChecked: '${checked}/${total}', hasChecked: '${checked}/${total}' }")])]),e("tr",[e("td",[t._v("props")]),e("td",[t._v("数据源的字段别名")]),e("td",[t._v("object{key, label, disabled}")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("left-default-checked")]),e("td",[t._v("初始状态下左侧列表的已勾选项的 key 数组")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("[ ]")])]),e("tr",[e("td",[t._v("right-default-checked")]),e("td",[t._v("初始状态下右侧列表的已勾选项的 key 数组")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("[ ]")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"slot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slot"}},[t._v("¶")]),t._v(" Slot")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),e("th",[t._v("说明")])])]),e("tbody",[e("tr",[e("td",[t._v("left-footer")]),e("td",[t._v("左侧列表底部的内容")])]),e("tr",[e("td",[t._v("right-footer")]),e("td",[t._v("右侧列表底部的内容")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"scoped-slot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scoped-slot"}},[t._v("¶")]),t._v(" Scoped Slot")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),e("th",[t._v("说明")])])]),e("tbody",[e("tr",[e("td",[t._v("—")]),e("td",[t._v("自定义数据项的内容，参数为 { option }")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("¶")]),t._v(" Methods")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("方法名")]),e("th",[t._v("说明")]),e("th",[t._v("参数")])])]),e("tbody",[e("tr",[e("td",[t._v("clearQuery")]),e("td",[t._v("清空某个面板的搜索关键词")]),e("td",[t._v("'left' / 'right'，指定需要清空的面板")])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("¶")]),t._v(" Events")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),e("th",[t._v("说明")]),e("th",[t._v("回调参数")])])]),e("tbody",[e("tr",[e("td",[t._v("change")]),e("td",[t._v("右侧列表元素变化时触发")]),e("td",[t._v("当前值、数据移动的方向（'left' / 'right'）、发生移动的数据 key 数组")])]),e("tr",[e("td",[t._v("left-check-change")]),e("td",[t._v("左侧列表元素被用户选中 / 取消选中时触发")]),e("td",[t._v("当前被选中的元素的 key 数组、选中状态发生变化的元素的 key 数组")])]),e("tr",[e("td",[t._v("right-check-change")]),e("td",[t._v("右侧列表元素被用户选中 / 取消选中时触发")]),e("td",[t._v("当前被选中的元素的 key 数组、选中状态发生变化的元素的 key 数组")])])])])}],d=n("5530"),l=(n("14d9"),n("4160"),n("d3b7"),n("c975"),{name:"component-doc",components:{"df-demo0":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-transfer",{attrs:{data:t.data},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}})]],2)},e=[],n={data:function(){var t=function(t){for(var e=[],n=1;n<=15;n++)e.push({key:n,label:"备选项 ".concat(n),disabled:n%4===0});return e};return{data:t(),value:[1,4]}}};return Object(d["a"])({render:t,staticRenderFns:e},n)}(),"df-demo1":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-transfer",{attrs:{filterable:"","filter-method":t.filterMethod,"filter-placeholder":"请输入城市拼音",data:t.data},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}})]],2)},e=[],n={data:function(){var t=function(t){var e=[],n=["上海","北京","广州","深圳","南京","西安","成都"],a=["shanghai","beijing","guangzhou","shenzhen","nanjing","xian","chengdu"];return n.forEach((function(t,n){e.push({label:t,key:n,pinyin:a[n]})})),e};return{data:t(),value:[],filterMethod:function(t,e){return e.pinyin.indexOf(t)>-1}}}};return Object(d["a"])({render:t,staticRenderFns:e},n)}(),"df-demo2":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("p",{staticStyle:{"text-align":"center",margin:"0 0 20px"}},[t._v("使用 render-content 自定义数据项")]),t._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("df-transfer",{staticStyle:{"text-align":"left",display:"inline-block"},attrs:{filterable:"","left-default-checked":[2,3],"right-default-checked":[1],"render-content":t.renderFunc,titles:["Source","Target"],"button-texts":["到左边","到右边"],format:{noChecked:"${total}",hasChecked:"${checked}/${total}"},data:t.data},on:{change:t.handleChange},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}},[n("df-button",{staticClass:"transfer-footer",attrs:{slot:"left-footer",size:"small"},slot:"left-footer"},[t._v("操作")]),t._v(" "),n("df-button",{staticClass:"transfer-footer",attrs:{slot:"right-footer",size:"small"},slot:"right-footer"},[t._v("操作")])],1)],1),t._v(" "),n("p",{staticStyle:{"text-align":"center",margin:"50px 0 20px"}},[t._v("使用 scoped-slot 自定义数据项")]),t._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("df-transfer",{staticStyle:{"text-align":"left",display:"inline-block"},attrs:{filterable:"","left-default-checked":[2,3],"right-default-checked":[1],titles:["Source","Target"],"button-texts":["到左边","到右边"],format:{noChecked:"${total}",hasChecked:"${checked}/${total}"},data:t.data},on:{change:t.handleChange},scopedSlots:t._u([{key:"default",fn:function(e){var a=e.option;return n("span",{},[t._v(t._s(a.key)+" - "+t._s(a.label))])}}]),model:{value:t.value4,callback:function(e){t.value4=e},expression:"value4"}},[t._v(" "),n("df-button",{staticClass:"transfer-footer",attrs:{slot:"left-footer",size:"small"},slot:"left-footer"},[t._v("操作")]),t._v(" "),n("df-button",{staticClass:"transfer-footer",attrs:{slot:"right-footer",size:"small"},slot:"right-footer"},[t._v("操作")])],1)],1)])]],2)},e=[],n={data:function(){this.$createElement;var t=function(t){for(var e=[],n=1;n<=15;n++)e.push({key:n,label:"备选项 ".concat(n),disabled:n%4===0});return e};return{data:t(),value:[1],value4:[1],renderFunc:function(t,e){return t("span",[e.key," - ",e.label])}}},methods:{handleChange:function(t,e,n){console.log(t,e,n)}}};return Object(d["a"])({render:t,staticRenderFns:e},n)}(),"df-demo3":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("df-transfer",{attrs:{props:{key:"value",label:"desc"},data:t.data},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}})]],2)},e=[],n={data:function(){var t=function(t){for(var e=[],n=1;n<=15;n++)e.push({value:n,desc:"备选项 ".concat(n),disabled:n%4===0});return e};return{data:t(),value:[]}}};return Object(d["a"])({render:t,staticRenderFns:e},n)}()}}),o=l,s=n("2877"),c=Object(s["a"])(o,a,r,!1,null,null,null);e["default"]=c.exports}}]);
//# sourceMappingURL=chunk-2d0e6483.a57b03c7.js.map