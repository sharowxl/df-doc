{"version":3,"sources":["webpack:///./src/docs-ui/data/tree.md","webpack:///src/docs-ui/data/tree.md","webpack:///./src/docs-ui/data/tree.md?0cef","webpack:///./src/docs-ui/data/tree.md?e4d7"],"names":["render","_vm","this","_c","_self","staticClass","_m","_v","slot","pre","attrs","staticRenderFns","name","components","_h","$createElement","data","defaultProps","on","handleNodeClick","democomponentExport","label","children","methods","console","log","_objectSpread","customIcon","node","expanded","isLeaf","iconType","iconName","props","loadNode","handleCheckChange","count","checked","indeterminate","resolve","hasChild","_this","level","Math","random","setTimeout","leaf","id","disabled","nodeDisabledFunc","ref","getCheckedNodes","getCheckedKeys","setCheckedNodes","setCheckedKeys","resetChecked","$refs","tree","renderContent","scopedSlots","_u","key","fn","_s","append","remove","_defineProperty","JSON","parse","stringify","newChild","$set","push","parent","index","findIndex","d","splice","h","_ref2","_this2","store","model","value","filterText","callback","$$v","expression","filterNode","watch","val","filter","indexOf","allowDrop","allowDrag","handleDragStart","handleDragEnter","handleDragLeave","handleDragOver","handleDragEnd","handleDrop","ev","draggingNode","dropNode","dropType","type","setOperations","hiddenOperations","loadingOperations","disabledOperations","operationClick","$event","stopPropagation","hideOperation","apply","arguments","showOperation","loadingOperation","unLoadingOperation","disableOperation","enableOperation","operationIndex","_len","length","Array","_key","component"],"mappings":"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","file":"js/chunk-2d0efccc.64d56aa9.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"content df-doc\"},[_vm._m(0),_c('p',[_vm._v(\"用清晰的层级结构展示信息，可展开或折叠。\")]),_vm._m(1),_c('p',[_vm._v(\"基础的树形结构展示。\")]),_c('demo-block',[_c('template',{slot:\"source\"},[_c('df-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree :data=\\\"data\\\" :props=\\\"defaultProps\\\" @node-click=\\\"handleNodeClick\\\"></df-tree>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          label: '一级 1',\\n          children: [{\\n            label: '二级 1-1',\\n            children: [{\\n              label: '三级 1-1-1'\\n            }]\\n          }]\\n        }, {\\n          label: '一级 2',\\n          children: [{\\n            label: '二级 2-1',\\n            children: [{\\n              label: '三级 2-1-1'\\n            }]\\n          }, {\\n            label: '二级 2-2',\\n            children: [{\\n              label: '三级 2-2-1'\\n            }]\\n          }]\\n        }, {\\n          label: '一级 3',\\n          children: [{\\n            label: '二级 3-1',\\n            children: [{\\n              label: '三级 3-1-1'\\n            }]\\n          }, {\\n            label: '二级 3-2',\\n            children: [{\\n              label: '三级 3-2-1'\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    },\\n    methods: {\\n      handleNodeClick(data) {\\n        console.log(data);\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(2),_c('p',[_vm._v(\"根据需要可以自由定义每个节点下的图标。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"声明属性\"),_c('code',[_vm._v(\"custom-icon\")]),_vm._v(\", 该属性是一个函数, 自带 4 个参数, 分别是 节点、节点数据、节点是否展开、节点是否是最终层节点, 根据这些状态判断要为此节点赋予何种图标, 在函数的最后\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"一个对象, 对象包含图标类型和图标名称, 目前我们 \"),_c('a',{attrs:{\"href\":\"#/component/icon\"}},[_vm._v(\"图标库\")]),_vm._v(\" 支持的图标类型有\"),_c('code',[_vm._v(\"icon\")]),_vm._v(\"型和\"),_c('code',[_vm._v(\"svg\")]),_vm._v(\"型, 如果\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"的是一个空值, 则会自动使用原本的默认图标。\")])]),_c('template',{slot:\"source\"},[_c('df-demo1')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree :data=\\\"data\\\" :custom-icon=\\\"customIcon\\\"></df-tree>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      data: [{\\n        label: '一级 1',\\n        children: [{\\n          label: '二级 1-1',\\n          children: [{\\n            label: '三级 1-1-1'\\n          }]\\n        }]\\n      }, {\\n        label: '一级 2',\\n        children: [{\\n          label: '二级 2-1',\\n          children: [{\\n            label: '三级 2-1-1'\\n          }]\\n        }, {\\n          label: '二级 2-2',\\n          children: [{\\n            label: '三级 2-2-1'\\n          }]\\n        }]\\n      }, {\\n        label: '一级 3',\\n        children: [{\\n          label: '二级 3-1',\\n          children: [{\\n            label: '三级 3-1-1'\\n          }]\\n        }, {\\n          label: '二级 3-2',\\n          children: [{\\n            label: '三级 3-2-1'\\n          }]\\n        }]\\n      }]\\n    }\\n  },\\n  methods: {\\n    customIcon (node, data, expanded, isLeaf) {\\n      // 如果节点的 label 是 '一级 3', 则不使用自定义图标, 此情况下返回一个 null, 组件就会自动使用默认图标\\n      if (data.label === '一级 3') return null\\n      // 如果是最终层节点, 则使用 icon 类型的图标 star\\n      if (isLeaf) return { iconType: 'icon', iconName: 'star' }\\n      // 如果节点是展开状态, 使用 svg 类型图标 folder-open\\n      if (expanded) return { iconType: 'svg', iconName: 'folder-open' }\\n      // 如果节点是收起状态, 使用 svg 类型图标 folder\\n      if (!expanded) return { iconType: 'svg', iconName: 'folder' }\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(3),_c('p',[_vm._v(\"适用于需要选择层级时使用。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"本例还展示了动态加载节点数据的方法。\")])]),_c('template',{slot:\"source\"},[_c('df-demo2')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :props=\\\"props\\\"\\n    :load=\\\"loadNode\\\"\\n    lazy\\n    show-checkbox\\n    @check-change=\\\"handleCheckChange\\\">\\n  </df-tree>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        props: {\\n          label: 'name',\\n          children: 'zones'\\n        },\\n        count: 1\\n      };\\n    },\\n    methods: {\\n      handleCheckChange(data, checked, indeterminate) {\\n        console.log(data, checked, indeterminate);\\n      },\\n      handleNodeClick(data) {\\n        console.log(data);\\n      },\\n      loadNode(node, resolve) {\\n        if (node.level === 0) {\\n          return resolve([{ name: 'region1' }, { name: 'region2' }]);\\n        }\\n        if (node.level > 3) return resolve([]);\\n\\n        var hasChild;\\n        if (node.data.name === 'region1') {\\n          hasChild = true;\\n        } else if (node.data.name === 'region2') {\\n          hasChild = false;\\n        } else {\\n          hasChild = Math.random() > 0.5;\\n        }\\n\\n        setTimeout(() => {\\n          var data;\\n          if (hasChild) {\\n            data = [{\\n              name: 'zone' + this.count++\\n            }, {\\n              name: 'zone' + this.count++\\n            }];\\n          } else {\\n            data = [];\\n          }\\n\\n          resolve(data);\\n        }, 500);\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(4),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"由于在点击节点时才进行该层数据的获取，默认情况下 Tree 无法预知某个节点是否为叶子节点，所以会为每个节点添加一个下拉按钮，如果节点没有下层数据，则点击后下拉按钮会消失。同时，你也可以提前告知 Tree 某个节点是否为叶子节点，从而避免在叶子节点前渲染下拉按钮。\")])]),_c('template',{slot:\"source\"},[_c('df-demo3')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :props=\\\"props\\\"\\n    :load=\\\"loadNode\\\"\\n    lazy\\n    show-checkbox>\\n  </df-tree>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        props: {\\n          label: 'name',\\n          children: 'zones',\\n          isLeaf: 'leaf'\\n        },\\n      };\\n    },\\n    methods: {\\n      loadNode(node, resolve) {\\n        if (node.level === 0) {\\n          return resolve([{ name: 'region' }]);\\n        }\\n        if (node.level > 1) return resolve([]);\\n\\n        setTimeout(() => {\\n          const data = [{\\n            name: 'leaf',\\n            leaf: true\\n          }, {\\n            name: 'zone'\\n          }];\\n\\n          resolve(data);\\n        }, 500);\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(5),_c('p',[_vm._v(\"可将 Tree 的某些节点设置为默认展开或默认选中\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"分别通过\"),_c('code',[_vm._v(\"default-expanded-keys\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"default-checked-keys\")]),_vm._v(\"设置默认展开和默认选中的节点。需要注意的是，此时必须设置\"),_c('code',[_vm._v(\"node-key\")]),_vm._v(\"，其值为节点数据中的一个字段名，该字段在整棵树中是唯一的。\")])]),_c('template',{slot:\"source\"},[_c('df-demo4')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :data=\\\"data\\\"\\n    show-checkbox\\n    node-key=\\\"id\\\"\\n    :default-expanded-keys=\\\"[2, 3]\\\"\\n    :default-checked-keys=\\\"[5]\\\"\\n    :props=\\\"defaultProps\\\">\\n  </df-tree>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          id: 1,\\n          label: '一级 1',\\n          children: [{\\n            id: 4,\\n            label: '二级 1-1',\\n            children: [{\\n              id: 9,\\n              label: '三级 1-1-1'\\n            }, {\\n              id: 10,\\n              label: '三级 1-1-2'\\n            }]\\n          }]\\n        }, {\\n          id: 2,\\n          label: '一级 2',\\n          children: [{\\n            id: 5,\\n            label: '二级 2-1'\\n          }, {\\n            id: 6,\\n            label: '二级 2-2'\\n          }]\\n        }, {\\n          id: 3,\\n          label: '一级 3',\\n          children: [{\\n            id: 7,\\n            label: '二级 3-1'\\n          }, {\\n            id: 8,\\n            label: '二级 3-2'\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(6),_c('p',[_vm._v(\"可将 Tree 的某些节点设置为禁用状态\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"通过\"),_c('code',[_vm._v(\"disabled\")]),_vm._v(\"设置禁用状态。\")])]),_c('template',{slot:\"source\"},[_c('df-demo5')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :data=\\\"data\\\"\\n    show-checkbox\\n    node-key=\\\"id\\\"\\n    :default-expanded-keys=\\\"[2, 3]\\\"\\n    :default-checked-keys=\\\"[5]\\\">\\n  </df-tree>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          id: 1,\\n          label: '一级 2',\\n          children: [{\\n            id: 3,\\n            label: '二级 2-1',\\n            children: [{\\n              id: 4,\\n              label: '三级 3-1-1'\\n            }, {\\n              id: 5,\\n              label: '三级 3-1-2',\\n              disabled: true\\n            }]\\n          }, {\\n            id: 2,\\n            label: '二级 2-2',\\n            disabled: true,\\n            children: [{\\n              id: 6,\\n              label: '三级 3-2-1'\\n            }, {\\n              id: 7,\\n              label: '三级 3-2-2',\\n              disabled: true\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(7),_c('p',[_vm._v(\"可以通过回调函数的形式设置某些节点设置为禁用状态\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"给 tree 传递函数\"),_c('code',[_vm._v(\"node-disabled-func\")]),_vm._v(\", 该函数自带两个参数, 节点的 node 和 data, 通过对节点数据的判断, 返回是否禁用, 与节点数据中的\"),_c('code',[_vm._v(\"disabled\")]),_vm._v(\"同时生效。\")])]),_c('template',{slot:\"source\"},[_c('df-demo6')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :data=\\\"data\\\"\\n    show-checkbox\\n    node-key=\\\"id\\\"\\n    :default-expanded-keys=\\\"[2, 3]\\\"\\n    :default-checked-keys=\\\"[5]\\\"\\n    :node-disabled-func=\\\"nodeDisabledFunc\\\">\\n  </df-tree>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      data: [{\\n        id: 1,\\n        label: '一级 2',\\n        children: [{\\n          id: 3,\\n          label: '二级 2-1',\\n          children: [{\\n            id: 4,\\n            label: '三级 3-1-1'\\n          }, {\\n            id: 5,\\n            label: '三级 3-1-2',\\n            disabled: true\\n          }]\\n        }, {\\n          id: 2,\\n          label: '二级 2-2',\\n          disabled: true,\\n          children: [{\\n            id: 6,\\n            label: '三级 3-2-1'\\n          }, {\\n            id: 7,\\n            label: '三级 3-2-2',\\n            disabled: true\\n          }]\\n        }]\\n      }],\\n      defaultProps: {\\n        children: 'children',\\n        label: 'label'\\n      }\\n    }\\n  },\\n  methods: {\\n    nodeDisabledFunc (node, data) {\\n      return data.label === '一级 2' || data.label === '二级 2-1'\\n    }\\n  }\\n}\\n</script>\\n\")])])])],2),_vm._m(8),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"本例展示如何获取和设置选中节点。获取和设置各有两种方式：通过 node 或通过 key。如果需要通过 key 来获取或设置，则必须设置\"),_c('code',[_vm._v(\"node-key\")]),_vm._v(\"。\")])]),_c('template',{slot:\"source\"},[_c('df-demo7')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :data=\\\"data\\\"\\n    show-checkbox\\n    default-expand-all\\n    node-key=\\\"id\\\"\\n    ref=\\\"tree\\\"\\n    highlight-current\\n    :props=\\\"defaultProps\\\">\\n  </df-tree>\\n</template>\\n\\n<div class=\\\"buttons\\\">\\n  <df-button @click=\\\"getCheckedNodes\\\">通过 node 获取</df-button>\\n  <df-button @click=\\\"getCheckedKeys\\\">通过 key 获取</df-button>\\n  <df-button @click=\\\"setCheckedNodes\\\">通过 node 设置</df-button>\\n  <df-button @click=\\\"setCheckedKeys\\\">通过 key 设置</df-button>\\n  <df-button @click=\\\"resetChecked\\\">清空</df-button>\\n</div>\\n\\n<script>\\n  export default {\\n    methods: {\\n      getCheckedNodes() {\\n        console.log(this.$refs.tree.getCheckedNodes());\\n      },\\n      getCheckedKeys() {\\n        console.log(this.$refs.tree.getCheckedKeys());\\n      },\\n      setCheckedNodes() {\\n        this.$refs.tree.setCheckedNodes([{\\n          id: 5,\\n          label: '二级 2-1'\\n        }, {\\n          id: 9,\\n          label: '三级 1-1-1'\\n        }]);\\n      },\\n      setCheckedKeys() {\\n        this.$refs.tree.setCheckedKeys([3]);\\n      },\\n      resetChecked() {\\n        this.$refs.tree.setCheckedKeys([]);\\n      }\\n    },\\n\\n    data() {\\n      return {\\n        data: [{\\n          id: 1,\\n          label: '一级 1',\\n          children: [{\\n            id: 4,\\n            label: '二级 1-1',\\n            children: [{\\n              id: 9,\\n              label: '三级 1-1-1'\\n            }, {\\n              id: 10,\\n              label: '三级 1-1-2'\\n            }]\\n          }]\\n        }, {\\n          id: 2,\\n          label: '一级 2',\\n          children: [{\\n            id: 5,\\n            label: '二级 2-1'\\n          }, {\\n            id: 6,\\n            label: '二级 2-2'\\n          }]\\n        }, {\\n          id: 3,\\n          label: '一级 3',\\n          children: [{\\n            id: 7,\\n            label: '二级 3-1'\\n          }, {\\n            id: 8,\\n            label: '二级 3-2'\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(9),_c('p',[_vm._v(\"节点的内容支持自定义，可以在节点区添加按钮或图标等内容\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"可以通过两种方法进行树节点内容的自定义：\"),_c('code',[_vm._v(\"render-content\")]),_vm._v(\"和 scoped slot。使用\"),_c('code',[_vm._v(\"render-content\")]),_vm._v(\"指定渲染函数，该函数返回需要的节点区内容即可。渲染函数的用法请参考 Vue 文档。使用 scoped slot 会传入两个参数\"),_c('code',[_vm._v(\"node\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"，分别表示当前节点的 Node 对象和当前节点的数据。注意：由于 jsfiddle 不支持 JSX 语法，所以\"),_c('code',[_vm._v(\"render-content\")]),_vm._v(\"示例在 jsfiddle 中无法运行。但是在实际的项目中，只要正确地配置了相关依赖，就可以正常运行。\")])]),_c('template',{slot:\"source\"},[_c('df-demo8')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 render-content</p>\\n      <df-tree\\n        :data=\\\"data\\\"\\n        show-checkbox\\n        node-key=\\\"id\\\"\\n        default-expand-all\\n        :expand-on-click-node=\\\"false\\\"\\n        :render-content=\\\"renderContent\\\">\\n      </df-tree>\\n    </div>\\n    <div class=\\\"block\\\">\\n      <p>使用 scoped slot</p>\\n      <df-tree\\n        :data=\\\"data\\\"\\n        show-checkbox\\n        node-key=\\\"id\\\"\\n        default-expand-all\\n        :expand-on-click-node=\\\"false\\\">\\n        <span class=\\\"custom-tree-node\\\" slot-scope=\\\"{ node, data }\\\">\\n          <span>{{ node.label }}</span>\\n          <span>\\n            <df-button\\n              type=\\\"text\\\"\\n              size=\\\"mini\\\"\\n              @click=\\\"() => append(data)\\\">\\n              Append\\n            </df-button>\\n            <df-button\\n              type=\\\"text\\\"\\n              size=\\\"mini\\\"\\n              @click=\\\"() => remove(node, data)\\\">\\n              Delete\\n            </df-button>\\n          </span>\\n        </span>\\n      </df-tree>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\n  let id = 1000;\\n\\n  export default {\\n    data() {\\n      const data = [{\\n        id: 1,\\n        label: '一级 1',\\n        children: [{\\n          id: 4,\\n          label: '二级 1-1',\\n          children: [{\\n            id: 9,\\n            label: '三级 1-1-1'\\n          }, {\\n            id: 10,\\n            label: '三级 1-1-2'\\n          }]\\n        }]\\n      }, {\\n        id: 2,\\n        label: '一级 2',\\n        children: [{\\n          id: 5,\\n          label: '二级 2-1'\\n        }, {\\n          id: 6,\\n          label: '二级 2-2'\\n        }]\\n      }, {\\n        id: 3,\\n        label: '一级 3',\\n        children: [{\\n          id: 7,\\n          label: '二级 3-1'\\n        }, {\\n          id: 8,\\n          label: '二级 3-2'\\n        }]\\n      }];\\n      return {\\n        data: JSON.parse(JSON.stringify(data)),\\n        data: JSON.parse(JSON.stringify(data))\\n      }\\n    },\\n\\n    methods: {\\n      append(data) {\\n        const newChild = { id: id++, label: 'testtest', children: [] };\\n        if (!data.children) {\\n          this.$set(data, 'children', []);\\n        }\\n        data.children.push(newChild);\\n      },\\n\\n      remove(node, data) {\\n        const parent = node.parent;\\n        const children = parent.data.children || parent.data;\\n        const index = children.findIndex(d => d.id === data.id);\\n        children.splice(index, 1);\\n      },\\n\\n      renderContent(h, { node, data, store }) {\\n        return (\\n          <span class=\\\"custom-tree-node\\\">\\n            <span>{node.label}</span>\\n            <span>\\n              <df-button size=\\\"mini\\\" type=\\\"text\\\" on-click={ () => this.append(data) }>Append</df-button>\\n              <df-button size=\\\"mini\\\" type=\\\"text\\\" on-click={ () => this.remove(node, data) }>Delete</df-button>\\n            </span>\\n          </span>);\\n      }\\n    }\\n  };\\n</script>\\n\\n<style>\\n  .custom-tree-node {\\n    flex: 1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    font-size: 14px;\\n    padding-right: 8px;\\n  }\\n</style>\\n\")])])])],2),_vm._m(10),_c('p',[_vm._v(\"通过关键字过滤树节点\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"在需要对节点进行过滤时，调用 Tree 实例的\"),_c('code',[_vm._v(\"filter\")]),_vm._v(\"方法，参数为关键字。需要注意的是，此时需要设置\"),_c('code',[_vm._v(\"filter-node-method\")]),_vm._v(\"，值为过滤函数。\")])]),_c('template',{slot:\"source\"},[_c('df-demo9')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-input\\n      placeholder=\\\"输入关键字进行过滤\\\"\\n      v-model=\\\"filterText\\\">\\n    </df-input>\\n\\n    <df-tree\\n      class=\\\"filter-tree\\\"\\n      :data=\\\"data\\\"\\n      :props=\\\"defaultProps\\\"\\n      default-expand-all\\n      :filter-node-method=\\\"filterNode\\\"\\n      ref=\\\"tree\\\">\\n    </df-tree>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    watch: {\\n      filterText(val) {\\n        this.$refs.tree.filter(val);\\n      }\\n    },\\n\\n    methods: {\\n      filterNode(value, data) {\\n        if (!value) return true;\\n        return data.label.indexOf(value) !== -1;\\n      }\\n    },\\n\\n    data() {\\n      return {\\n        filterText: '',\\n        data: [{\\n          id: 1,\\n          label: '一级 1',\\n          children: [{\\n            id: 4,\\n            label: '二级 1-1',\\n            children: [{\\n              id: 9,\\n              label: '三级 1-1-1'\\n            }, {\\n              id: 10,\\n              label: '三级 1-1-2'\\n            }]\\n          }]\\n        }, {\\n          id: 2,\\n          label: '一级 2',\\n          children: [{\\n            id: 5,\\n            label: '二级 2-1'\\n          }, {\\n            id: 6,\\n            label: '二级 2-2'\\n          }]\\n        }, {\\n          id: 3,\\n          label: '一级 3',\\n          children: [{\\n            id: 7,\\n            label: '二级 3-1'\\n          }, {\\n            id: 8,\\n            label: '二级 3-2'\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(11),_c('p',[_vm._v(\"对于同一级的节点，每次只能展开一个\")]),_c('demo-block',[_c('template',{slot:\"source\"},[_c('df-demo10')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :data=\\\"data\\\"\\n    :props=\\\"defaultProps\\\"\\n    accordion\\n    @node-click=\\\"handleNodeClick\\\">\\n  </df-tree>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          label: '一级 1',\\n          children: [{\\n            label: '二级 1-1',\\n            children: [{\\n              label: '三级 1-1-1'\\n            }]\\n          }]\\n        }, {\\n          label: '一级 2',\\n          children: [{\\n            label: '二级 2-1',\\n            children: [{\\n              label: '三级 2-1-1'\\n            }]\\n          }, {\\n            label: '二级 2-2',\\n            children: [{\\n              label: '三级 2-2-1'\\n            }]\\n          }]\\n        }, {\\n          label: '一级 3',\\n          children: [{\\n            label: '二级 3-1',\\n            children: [{\\n              label: '三级 3-1-1'\\n            }]\\n          }, {\\n            label: '二级 3-2',\\n            children: [{\\n              label: '三级 3-2-1'\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    },\\n    methods: {\\n      handleNodeClick(data) {\\n        console.log(data);\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(12),_c('p',[_vm._v(\"通过 draggable 属性可让节点变为可拖拽。\")]),_c('demo-block',[_c('template',{slot:\"source\"},[_c('df-demo11')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <df-tree\\n    :data=\\\"data\\\"\\n    node-key=\\\"id\\\"\\n    default-expand-all\\n    @node-drag-start=\\\"handleDragStart\\\"\\n    @node-drag-enter=\\\"handleDragEnter\\\"\\n    @node-drag-leave=\\\"handleDragLeave\\\"\\n    @node-drag-over=\\\"handleDragOver\\\"\\n    @node-drag-end=\\\"handleDragEnd\\\"\\n    @node-drop=\\\"handleDrop\\\"\\n    draggable\\n    :allow-drop=\\\"allowDrop\\\"\\n    :allow-drag=\\\"allowDrag\\\">\\n  </df-tree>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          id: 1,\\n          label: '一级 1',\\n          children: [{\\n            id: 4,\\n            label: '二级 1-1',\\n            children: [{\\n              id: 9,\\n              label: '三级 1-1-1'\\n            }, {\\n              id: 10,\\n              label: '三级 1-1-2'\\n            }]\\n          }]\\n        }, {\\n          id: 2,\\n          label: '一级 2',\\n          children: [{\\n            id: 5,\\n            label: '二级 2-1'\\n          }, {\\n            id: 6,\\n            label: '二级 2-2'\\n          }]\\n        }, {\\n          id: 3,\\n          label: '一级 3',\\n          children: [{\\n            id: 7,\\n            label: '二级 3-1'\\n          }, {\\n            id: 8,\\n            label: '二级 3-2',\\n            children: [{\\n             id: 11,\\n              label: '三级 3-2-1'\\n            }, {\\n              id: 12,\\n              label: '三级 3-2-2'\\n            }, {\\n              id: 13,\\n              label: '三级 3-2-3'\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    },\\n    methods: {\\n      handleDragStart(node, ev) {\\n        console.log('drag start', node);\\n      },\\n      handleDragEnter(draggingNode, dropNode, ev) {\\n        console.log('tree drag enter: ', dropNode.label);\\n      },\\n      handleDragLeave(draggingNode, dropNode, ev) {\\n        console.log('tree drag leave: ', dropNode.label);\\n      },\\n      handleDragOver(draggingNode, dropNode, ev) {\\n        console.log('tree drag over: ', dropNode.label);\\n      },\\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\\n      },\\n      handleDrop(draggingNode, dropNode, dropType, ev) {\\n        console.log('tree drop: ', dropNode.label, dropType);\\n      },\\n      allowDrop(draggingNode, dropNode, type) {\\n        if (dropNode.data.label === '二级 3-1') {\\n          return type !== 'inner';\\n        } else {\\n          return true;\\n        }\\n      },\\n      allowDrag(draggingNode) {\\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\\n      }\\n    }\\n  };\\n</script>\\n\")])])])],2),_vm._m(13),_c('p',[_vm._v(\"配置某个节点处的更多操作按钮组。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"传入属性\"),_c('code',[_vm._v(\"need-operations\")]),_vm._v(\"以开启树节点更多操作，传入\"),_c('code',[_vm._v(\"set-operations\")]),_vm._v(\"方法以配置某一节点处的按钮组，此属性是一个函数，参数是节点对象，通过业务判断，返回该节点的按钮组即可，若安徽的按钮组为空，那么此节点的操作按钮将被隐藏。当某一按钮被点击时，会外派事件\"),_c('code',[_vm._v(\"operation-click\")]),_vm._v(\"，携带被点击处的信息。属性\"),_c('code',[_vm._v(\"hide-on-click\")]),_vm._v(\"表示点击按钮后是否自动隐藏弹出框。支持传入\"),_c('code',[_vm._v(\"hidden-operations\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"loading-operations\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"disabled-operations\")]),_vm._v(\"设置某些按钮的隐藏、禁用或加载，需要注意的是\"),_c('code',[_vm._v(\"hidden-operations\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"loading-operations\")]),_vm._v(\"或\"),_c('code',[_vm._v(\"disabled-operations\")]),_vm._v(\"必须通过 Vue 指定的 \"),_c('a',{attrs:{\"href\":\"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B\"}},[_vm._v(\"数组更新检测\")]),_vm._v(\" 方法来改变值，否则将不能监听其变化。\")])]),_c('template',{slot:\"source\"},[_c('df-demo12')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <df-tree\\n      :data=\\\"data\\\"\\n      :props=\\\"defaultProps\\\"\\n      @node-click=\\\"handleNodeClick\\\"\\n      need-operations\\n      :set-operations=\\\"setOperations\\\"\\n      @operation-click=\\\"operationClick\\\"\\n      :hidden-operations=\\\"hiddenOperations\\\"\\n      :loading-operations=\\\"loadingOperations\\\"\\n      :disabled-operations=\\\"disabledOperations\\\"\\n    ></df-tree>\\n    <br>\\n    <df-button @click.stop=\\\"hideOperation\\\">隐藏第一个节点的第一个操作</df-button>\\n    <df-button @click.stop=\\\"showOperation\\\">显示第一个节点的第一个操作</df-button>\\n    <br><br>\\n    <df-button @click.stop=\\\"loadingOperation\\\">设置第二个节点的操作组为 loading</df-button>\\n    <df-button @click.stop=\\\"unLoadingOperation\\\">清除所有操作的 loading</df-button>\\n    <br><br>\\n    <df-button @click.stop=\\\"disableOperation\\\">设置第三个节点第一个操作为 disabled</df-button>\\n    <df-button @click.stop=\\\"enableOperation\\\">清除第三个节点第一个操作的 disabled</df-button>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data () {\\n    return {\\n      data: [{\\n        id: 1,\\n        label: '一级 1',\\n        children: [{\\n          id: 11,\\n          label: '二级 1-1',\\n          children: [{\\n            id: 111,\\n            label: '三级 1-1-1'\\n          }, {\\n            id: 112,\\n            label: '三级 1-1-2'\\n          }]\\n        }]\\n      }, {\\n        id: 2,\\n        label: '一级 2',\\n        children: [{\\n          id: 21,\\n          label: '二级 2-1'\\n        }, {\\n          id: 22,\\n          label: '二级 2-2'\\n        }]\\n      }, {\\n        id: 3,\\n        label: '一级 3',\\n        children: [{\\n          id: 31,\\n          label: '二级 3-1'\\n        }, {\\n          id: 32,\\n          label: '二级 3-2'\\n        }]\\n      }],\\n      defaultProps: {\\n        children: 'children',\\n        label: 'label'\\n      },\\n      hiddenOperations: [],\\n      loadingOperations: [],\\n      disabledOperations: [{operationIndex: 2, id: 1}]\\n    }\\n  },\\n  methods: {\\n    handleNodeClick (data) {\\n      console.log(data)\\n    },\\n    setOperations (node) {\\n      if (node.data.id === 1) return ['订单', '方法', '刚刚']\\n      else return ['请求', '哇哇', '嗯嗯']\\n    },\\n    operationClick (...data) {\\n      console.log(data)\\n    },\\n    hideOperation () {\\n      this.hiddenOperations.push({operationIndex: 0, id: 1})\\n    },\\n    showOperation () {\\n      this.hiddenOperations = []\\n    },\\n    loadingOperation () {\\n      this.loadingOperations.push({operationIndex: 0, id: 2}, {operationIndex: 1, id: 2}, {operationIndex: 2, id: 2})\\n    },\\n    unLoadingOperation () {\\n      this.loadingOperations = []\\n    },\\n    disableOperation () {\\n      this.disabledOperations.push({operationIndex: 0, id: 3})\\n    },\\n    enableOperation () {\\n      this.disabledOperations = []\\n    }\\n  }\\n}\\n</script>\\n\\n\\n\")])])])],2),_vm._m(14),_vm._m(15),_vm._m(16),_vm._m(17),_vm._m(18),_vm._m(19),_vm._m(20),_vm._m(21),_vm._m(22),_vm._m(23),_vm._m(24)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('h2',{attrs:{\"id\":\"tree-shu-xing-kong-jian\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#tree-shu-xing-kong-jian\"}},[_vm._v(\"¶\")]),_vm._v(\" Tree 树形控件\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"ji-chu-yong-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ji-chu-yong-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" 基础用法\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zi-ding-yi-tu-biao\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zi-ding-yi-tu-biao\"}},[_vm._v(\"¶\")]),_vm._v(\" 自定义图标\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"ke-xuan-ze\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ke-xuan-ze\"}},[_vm._v(\"¶\")]),_vm._v(\" 可选择\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"lan-jia-zai-zi-ding-yi-ye-zi-jie-dian\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#lan-jia-zai-zi-ding-yi-ye-zi-jie-dian\"}},[_vm._v(\"¶\")]),_vm._v(\" 懒加载自定义叶子节点\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"mo-ren-zhan-kai-he-mo-ren-xuan-zhong\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mo-ren-zhan-kai-he-mo-ren-xuan-zhong\"}},[_vm._v(\"¶\")]),_vm._v(\" 默认展开和默认选中\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"jin-yong-zhuang-tai\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jin-yong-zhuang-tai\"}},[_vm._v(\"¶\")]),_vm._v(\" 禁用状态\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"jin-yong-zhuang-tai-tong-guo-hui-diao-han-shu-dong-tai-she-zhi-jie-dian-de-jin-yong\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jin-yong-zhuang-tai-tong-guo-hui-diao-han-shu-dong-tai-she-zhi-jie-dian-de-jin-yong\"}},[_vm._v(\"¶\")]),_vm._v(\" 禁用状态（通过回调函数动态设置节点的禁用）\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"shu-jie-dian-de-xuan-ze\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shu-jie-dian-de-xuan-ze\"}},[_vm._v(\"¶\")]),_vm._v(\" 树节点的选择\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zi-ding-yi-jie-dian-nei-rong\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zi-ding-yi-jie-dian-nei-rong\"}},[_vm._v(\"¶\")]),_vm._v(\" 自定义节点内容\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"jie-dian-guo-lu\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jie-dian-guo-lu\"}},[_vm._v(\"¶\")]),_vm._v(\" 节点过滤\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"shou-feng-qin-mo-shi\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#shou-feng-qin-mo-shi\"}},[_vm._v(\"¶\")]),_vm._v(\" 手风琴模式\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"ke-tuo-zhuai-jie-dian\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ke-tuo-zhuai-jie-dian\"}},[_vm._v(\"¶\")]),_vm._v(\" 可拖拽节点\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"jie-dian-geng-duo-cao-zuo\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jie-dian-geng-duo-cao-zuo\"}},[_vm._v(\"¶\")]),_vm._v(\" 节点更多操作\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" Attributes\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"data\")]),_c('td',[_vm._v(\"展示数据\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"empty-text\")]),_c('td',[_vm._v(\"内容为空的时候展示的文本\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"node-key\")]),_c('td',[_vm._v(\"每个树节点用来作为唯一标识的属性，整棵树应该是唯一的\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"props\")]),_c('td',[_vm._v(\"配置选项，具体看下表\")]),_c('td',[_vm._v(\"object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"render-after-expand\")]),_c('td',[_vm._v(\"是否在第一次展开某个树节点后才渲染其子节点\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"load\")]),_c('td',[_vm._v(\"加载子树数据的方法，仅当 lazy 属性为true 时生效\")]),_c('td',[_vm._v(\"function(node, resolve)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"render-content\")]),_c('td',[_vm._v(\"树节点的内容区的渲染 Function\")]),_c('td',[_vm._v(\"Function(h, { node, data, store }\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"highlight-current\")]),_c('td',[_vm._v(\"是否高亮当前选中节点，默认值是 false。\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"default-expand-all\")]),_c('td',[_vm._v(\"是否默认展开所有节点\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"expand-on-click-node\")]),_c('td',[_vm._v(\"是否在点击节点的时候展开或者收缩节点， 默认值为 true，如果为 false，则只有点箭头图标的时候才会展开或者收缩节点。\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"check-on-click-node\")]),_c('td',[_vm._v(\"是否在点击节点的时候选中节点，默认值为 false，即只有在点击复选框时才会选中节点。\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"auto-expand-parent\")]),_c('td',[_vm._v(\"展开子节点的时候是否自动展开父节点\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"default-expanded-keys\")]),_c('td',[_vm._v(\"默认展开的节点的 key 的数组\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"show-checkbox\")]),_c('td',[_vm._v(\"节点是否可被选择\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"check-strictly\")]),_c('td',[_vm._v(\"在显示复选框的情况下，是否严格的遵循父子不互相关联的做法，默认为 false\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"default-checked-keys\")]),_c('td',[_vm._v(\"默认勾选的节点的 key 的数组\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"current-node-key\")]),_c('td',[_vm._v(\"当前选中的节点\")]),_c('td',[_vm._v(\"string, number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"filter-node-method\")]),_c('td',[_vm._v(\"对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏\")]),_c('td',[_vm._v(\"Function(value, data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"accordion\")]),_c('td',[_vm._v(\"是否每次只打开一个同级树节点展开\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"indent\")]),_c('td',[_vm._v(\"相邻级节点间的水平缩进，单位为像素\")]),_c('td',[_vm._v(\"number\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"16\")])]),_c('tr',[_c('td',[_vm._v(\"icon-class\")]),_c('td',[_vm._v(\"自定义树节点的图标\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"-\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"lazy\")]),_c('td',[_vm._v(\"是否懒加载子节点，需与 load 方法结合使用\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"draggable\")]),_c('td',[_vm._v(\"是否开启拖拽节点功能\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"allow-drag\")]),_c('td',[_vm._v(\"判断节点能否被拖拽\")]),_c('td',[_vm._v(\"Function(node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"allow-drop\")]),_c('td',[_vm._v(\"拖拽时判定目标节点能否被放置。\"),_c('code',[_vm._v(\"type\")]),_vm._v(\" 参数有三种情况：'prev'、'inner' 和 'next'，分别表示放置在目标节点前、插入至目标节点和放置在目标节点后\")]),_c('td',[_vm._v(\"Function(draggingNode, dropNode, type)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"need-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 是否需要配置节点更多操作按钮组\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"set-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 动态配置节点更多操作按钮组的名称\")]),_c('td',[_vm._v(\"Function(node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"hidden-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置节点更多操作按钮组的隐藏\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"loading-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置节点更多操作按钮组的 loading 状态\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"disabled-operations\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 设置节点更多操作按钮组的 disabled 状态\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"hide-on-click\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 是否在弹出节点更多操作按钮组后隐藏弹出框\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"stop-on-click-operation\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 是否在点击更多操作三个点时阻止点击事件的向上冒泡\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"show-tree-icon\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 是否显示树形控件的图标\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"node-disabled-func\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 通过回调函数的形式控制某些节点的禁用状态\")]),_c('td',[_vm._v(\"function\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"custom-icon\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 通过回调函数的形式控制节点的图标展示, 函数自带 4 个参数, 分别是 节点、节点数据、节点是否展开、节点是否是最终层节点\")]),_c('td',[_vm._v(\"function\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"props\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#props\"}},[_vm._v(\"¶\")]),_vm._v(\" props\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"label\")]),_c('td',[_vm._v(\"指定节点标签为节点对象的某个属性值\")]),_c('td',[_vm._v(\"string, function(data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"children\")]),_c('td',[_vm._v(\"指定子树为节点对象的某个属性值\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"disabled\")]),_c('td',[_vm._v(\"指定节点选择框是否禁用为节点对象的某个属性值\")]),_c('td',[_vm._v(\"boolean, function(data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"isLeaf\")]),_c('td',[_vm._v(\"指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\")]),_c('td',[_vm._v(\"boolean, function(data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"fang-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#fang-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" 方法\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_c('code',[_vm._v(\"Tree\")]),_vm._v(\" 内部使用了 Node 类型的对象来包装用户传入的数据，用来保存目前节点的状态。 \"),_c('code',[_vm._v(\"Tree\")]),_vm._v(\" 拥有如下方法：\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"方法名\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"filter\")]),_c('td',[_vm._v(\"对树节点进行筛选操作\")]),_c('td',[_vm._v(\"接收一个任意类型的参数，该参数会在 filter-node-method 中作为第一个参数\")])]),_c('tr',[_c('td',[_vm._v(\"updateKeyChildren\")]),_c('td',[_vm._v(\"通过 keys 设置节点子元素，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(key, data) 接收两个参数，1. 节点 key 2. 节点数据的数组\")])]),_c('tr',[_c('td',[_vm._v(\"getCheckedNodes\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前被选中的节点所组成的数组\")]),_c('td',[_vm._v(\"(leafOnly, includeHalfChecked) 接收两个 boolean 类型的参数，1. 是否只是叶子节点，默认值为 \"),_c('code',[_vm._v(\"false\")]),_vm._v(\" 2. 是否包含半选节点，默认值为 \"),_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"setCheckedNodes\")]),_c('td',[_vm._v(\"设置目前勾选的节点，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(nodes) 接收勾选节点数据的数组\")])]),_c('tr',[_c('td',[_vm._v(\"getCheckedKeys\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前被选中的节点的 key 所组成的数组\")]),_c('td',[_vm._v(\"(leafOnly) 接收一个 boolean 类型的参数，若为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\" 则仅返回被选中的叶子节点的 keys，默认值为 \"),_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"setCheckedKeys\")]),_c('td',[_vm._v(\"通过 keys 设置目前勾选的节点，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(keys, leafOnly) 接收两个参数，1. 勾选节点的 key 的数组 2. boolean 类型的参数，若为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\" 则仅设置叶子节点的选中状态，默认值为 \"),_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"setChecked\")]),_c('td',[_vm._v(\"通过 key / data 设置某个节点的勾选状态，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(key/data, checked, deep) 接收三个参数，1. 勾选节点的 key 或者 data 2. boolean 类型，节点是否选中 3. boolean 类型，是否设置子节点 ，默认为 false\")])]),_c('tr',[_c('td',[_vm._v(\"getHalfCheckedNodes\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前半选中的节点所组成的数组\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"getHalfCheckedKeys\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前半选中的节点的 key 所组成的数组\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"getCurrentKey\")]),_c('td',[_vm._v(\"获取当前被选中节点的 key，使用此方法必须设置 node-key 属性，若没有节点被选中则返回 null\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"getCurrentNode\")]),_c('td',[_vm._v(\"获取当前被选中节点的 data，若没有节点被选中则返回 null\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"setCurrentKey\")]),_c('td',[_vm._v(\"通过 key 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(key) 待被选节点的 key，若为 null 则取消当前高亮的节点\")])]),_c('tr',[_c('td',[_vm._v(\"setCurrentNode\")]),_c('td',[_vm._v(\"通过 node 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(node) 待被选节点的 node\")])]),_c('tr',[_c('td',[_vm._v(\"getNode\")]),_c('td',[_vm._v(\"根据 data 或者 key 拿到 Tree 组件中的 node\")]),_c('td',[_vm._v(\"(data) 要获得 node 的 key 或者 data\")])]),_c('tr',[_c('td',[_vm._v(\"remove\")]),_c('td',[_vm._v(\"删除 Tree 中的一个节点，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(data) 要删除的节点的 data 或者 node\")])]),_c('tr',[_c('td',[_vm._v(\"append\")]),_c('td',[_vm._v(\"为 Tree 中的一个节点追加一个子节点\")]),_c('td',[_vm._v(\"(data, parentNode) 接收两个参数，1. 要追加的子节点的 data 2. 子节点的 parent 的 data、key 或者 node\")])]),_c('tr',[_c('td',[_vm._v(\"insertBefore\")]),_c('td',[_vm._v(\"为 Tree 的一个节点的前面增加一个节点\")]),_c('td',[_vm._v(\"(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的后一个节点的 data、key 或者 node\")])]),_c('tr',[_c('td',[_vm._v(\"insertAfter\")]),_c('td',[_vm._v(\"为 Tree 的一个节点的后面增加一个节点\")]),_c('td',[_vm._v(\"(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的前一个节点的 data、key 或者 node\")])]),_c('tr',[_c('td',[_vm._v(\"setNodeExpandStatus\")]),_c('td',[_vm._v(\"设置某个节点的展开状态\")]),_c('td',[_vm._v(\"(nodeKey, expandStatus) 接收两个参数，1. 节点的 key 2. 节点的展开状态，true 为展开，false 为收起\")])]),_c('tr',[_c('td',[_vm._v(\"setAllExpandStatus\")]),_c('td',[_vm._v(\"设置全部节点的展开状态\")]),_c('td',[_vm._v(\"(expandStatus) 接收一个参数，全部节点的展开状态，true 为展开，false 为收起\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"events\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#events\"}},[_vm._v(\"¶\")]),_vm._v(\" Events\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"事件名称\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"回调参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"node-click\")]),_c('td',[_vm._v(\"节点被点击时的回调\")]),_c('td',[_vm._v(\"共三个参数，依次为：传递给 \"),_c('code',[_vm._v(\"data\")]),_vm._v(\" 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身。\")])]),_c('tr',[_c('td',[_vm._v(\"node-contextmenu\")]),_c('td',[_vm._v(\"当某一节点被鼠标右键点击时会触发该事件\")]),_c('td',[_vm._v(\"共四个参数，依次为：event、传递给 \"),_c('code',[_vm._v(\"data\")]),_vm._v(\" 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身。\")])]),_c('tr',[_c('td',[_vm._v(\"check-change\")]),_c('td',[_vm._v(\"节点选中状态发生变化时的回调\")]),_c('td',[_vm._v(\"共三个参数，依次为：传递给 \"),_c('code',[_vm._v(\"data\")]),_vm._v(\" 属性的数组中该节点所对应的对象、节点本身是否被选中、节点的子树中是否有被选中的节点\")])]),_c('tr',[_c('td',[_vm._v(\"check\")]),_c('td',[_vm._v(\"当复选框被点击的时候触发\")]),_c('td',[_vm._v(\"共两个参数，依次为：传递给 \"),_c('code',[_vm._v(\"data\")]),_vm._v(\" 属性的数组中该节点所对应的对象、树目前的选中状态对象，包含 checkedNodes、checkedKeys、halfCheckedNodes、halfCheckedKeys 四个属性\")])]),_c('tr',[_c('td',[_vm._v(\"current-change\")]),_c('td',[_vm._v(\"当前选中节点变化时触发的事件\")]),_c('td',[_vm._v(\"共两个参数，依次为：当前节点的数据，当前节点的 Node 对象\")])]),_c('tr',[_c('td',[_vm._v(\"node-expand\")]),_c('td',[_vm._v(\"节点被展开时触发的事件\")]),_c('td',[_vm._v(\"共三个参数，依次为：传递给 \"),_c('code',[_vm._v(\"data\")]),_vm._v(\" 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身\")])]),_c('tr',[_c('td',[_vm._v(\"node-collapse\")]),_c('td',[_vm._v(\"节点被关闭时触发的事件\")]),_c('td',[_vm._v(\"共三个参数，依次为：传递给 \"),_c('code',[_vm._v(\"data\")]),_vm._v(\" 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身\")])]),_c('tr',[_c('td',[_vm._v(\"node-drag-start\")]),_c('td',[_vm._v(\"节点开始拖拽时触发的事件\")]),_c('td',[_vm._v(\"共两个参数，依次为：被拖拽节点对应的 Node、event\")])]),_c('tr',[_c('td',[_vm._v(\"node-drag-enter\")]),_c('td',[_vm._v(\"拖拽进入其他节点时触发的事件\")]),_c('td',[_vm._v(\"共三个参数，依次为：被拖拽节点对应的 Node、所进入节点对应的 Node、event\")])]),_c('tr',[_c('td',[_vm._v(\"node-drag-leave\")]),_c('td',[_vm._v(\"拖拽离开某个节点时触发的事件\")]),_c('td',[_vm._v(\"共三个参数，依次为：被拖拽节点对应的 Node、所离开节点对应的 Node、event\")])]),_c('tr',[_c('td',[_vm._v(\"node-drag-over\")]),_c('td',[_vm._v(\"在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）\")]),_c('td',[_vm._v(\"共三个参数，依次为：被拖拽节点对应的 Node、当前进入节点对应的 Node、event\")])]),_c('tr',[_c('td',[_vm._v(\"node-drag-end\")]),_c('td',[_vm._v(\"拖拽结束时（可能未成功）触发的事件\")]),_c('td',[_vm._v(\"共四个参数，依次为：被拖拽节点对应的 Node、结束拖拽时最后进入的节点（可能为空）、被拖拽节点的放置位置（before、after、inner）、event\")])]),_c('tr',[_c('td',[_vm._v(\"node-drop\")]),_c('td',[_vm._v(\"拖拽成功完成时触发的事件\")]),_c('td',[_vm._v(\"共四个参数，依次为：被拖拽节点对应的 Node、结束拖拽时最后进入的节点、被拖拽节点的放置位置（before、after、inner）、event\")])]),_c('tr',[_c('td',[_vm._v(\"operation-click\")]),_c('td',[_vm._v(\"/\"),_c('em',[_vm._v(\"新增\")]),_vm._v(\"/ 使用节点更多操作按钮组时，触发任一操作后触发（参数：操作处的节点、操作名称、操作在操作组中的下标）\")]),_c('td',[_vm._v(\"node, operation, operationIndex\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"scoped-slot\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#scoped-slot\"}},[_vm._v(\"¶\")]),_vm._v(\" Scoped Slot\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"name\")]),_c('th',[_vm._v(\"说明\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"自定义树节点的内容，参数为 { node, data }\")])])])])\n}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content df-doc\">\n        <h2 id=\"tree-shu-xing-kong-jian\"><a class=\"header-anchor\" href=\"#tree-shu-xing-kong-jian\">¶</a> Tree 树形控件</h2>\n<p>用清晰的层级结构展示信息，可展开或折叠。</p>\n<h3 id=\"ji-chu-yong-fa\"><a class=\"header-anchor\" href=\"#ji-chu-yong-fa\">¶</a> 基础用法</h3>\n<p>基础的树形结构展示。</p>\n<demo-block>\n        \n        <template slot=\"source\"><df-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree :data=&quot;data&quot; :props=&quot;defaultProps&quot; @node-click=&quot;handleNodeClick&quot;&gt;&lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        data: [{\n          label: '一级 1',\n          children: [{\n            label: '二级 1-1',\n            children: [{\n              label: '三级 1-1-1'\n            }]\n          }]\n        }, {\n          label: '一级 2',\n          children: [{\n            label: '二级 2-1',\n            children: [{\n              label: '三级 2-1-1'\n            }]\n          }, {\n            label: '二级 2-2',\n            children: [{\n              label: '三级 2-2-1'\n            }]\n          }]\n        }, {\n          label: '一级 3',\n          children: [{\n            label: '二级 3-1',\n            children: [{\n              label: '三级 3-1-1'\n            }]\n          }, {\n            label: '二级 3-2',\n            children: [{\n              label: '三级 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleNodeClick(data) {\n        console.log(data);\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zi-ding-yi-tu-biao\"><a class=\"header-anchor\" href=\"#zi-ding-yi-tu-biao\">¶</a> 自定义图标</h3>\n<p>根据需要可以自由定义每个节点下的图标。</p>\n<demo-block>\n        <div><p>声明属性<code>custom-icon</code>, 该属性是一个函数, 自带 4 个参数, 分别是 节点、节点数据、节点是否展开、节点是否是最终层节点, 根据这些状态判断要为此节点赋予何种图标, 在函数的最后<code>return</code>一个对象, 对象包含图标类型和图标名称, 目前我们 <a href=\"#/component/icon\">图标库</a> 支持的图标类型有<code>icon</code>型和<code>svg</code>型, 如果<code>return</code>的是一个空值, 则会自动使用原本的默认图标。</p>\n</div>\n        <template slot=\"source\"><df-demo1 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree :data=&quot;data&quot; :custom-icon=&quot;customIcon&quot;&gt;&lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      data: [{\n        label: '一级 1',\n        children: [{\n          label: '二级 1-1',\n          children: [{\n            label: '三级 1-1-1'\n          }]\n        }]\n      }, {\n        label: '一级 2',\n        children: [{\n          label: '二级 2-1',\n          children: [{\n            label: '三级 2-1-1'\n          }]\n        }, {\n          label: '二级 2-2',\n          children: [{\n            label: '三级 2-2-1'\n          }]\n        }]\n      }, {\n        label: '一级 3',\n        children: [{\n          label: '二级 3-1',\n          children: [{\n            label: '三级 3-1-1'\n          }]\n        }, {\n          label: '二级 3-2',\n          children: [{\n            label: '三级 3-2-1'\n          }]\n        }]\n      }]\n    }\n  },\n  methods: {\n    customIcon (node, data, expanded, isLeaf) {\n      // 如果节点的 label 是 '一级 3', 则不使用自定义图标, 此情况下返回一个 null, 组件就会自动使用默认图标\n      if (data.label === '一级 3') return null\n      // 如果是最终层节点, 则使用 icon 类型的图标 star\n      if (isLeaf) return { iconType: 'icon', iconName: 'star' }\n      // 如果节点是展开状态, 使用 svg 类型图标 folder-open\n      if (expanded) return { iconType: 'svg', iconName: 'folder-open' }\n      // 如果节点是收起状态, 使用 svg 类型图标 folder\n      if (!expanded) return { iconType: 'svg', iconName: 'folder' }\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"ke-xuan-ze\"><a class=\"header-anchor\" href=\"#ke-xuan-ze\">¶</a> 可选择</h3>\n<p>适用于需要选择层级时使用。</p>\n<demo-block>\n        <div><p>本例还展示了动态加载节点数据的方法。</p>\n</div>\n        <template slot=\"source\"><df-demo2 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :props=&quot;props&quot;\n    :load=&quot;loadNode&quot;\n    lazy\n    show-checkbox\n    @check-change=&quot;handleCheckChange&quot;&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        props: {\n          label: 'name',\n          children: 'zones'\n        },\n        count: 1\n      };\n    },\n    methods: {\n      handleCheckChange(data, checked, indeterminate) {\n        console.log(data, checked, indeterminate);\n      },\n      handleNodeClick(data) {\n        console.log(data);\n      },\n      loadNode(node, resolve) {\n        if (node.level === 0) {\n          return resolve([{ name: 'region1' }, { name: 'region2' }]);\n        }\n        if (node.level &gt; 3) return resolve([]);\n\n        var hasChild;\n        if (node.data.name === 'region1') {\n          hasChild = true;\n        } else if (node.data.name === 'region2') {\n          hasChild = false;\n        } else {\n          hasChild = Math.random() &gt; 0.5;\n        }\n\n        setTimeout(() =&gt; {\n          var data;\n          if (hasChild) {\n            data = [{\n              name: 'zone' + this.count++\n            }, {\n              name: 'zone' + this.count++\n            }];\n          } else {\n            data = [];\n          }\n\n          resolve(data);\n        }, 500);\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"lan-jia-zai-zi-ding-yi-ye-zi-jie-dian\"><a class=\"header-anchor\" href=\"#lan-jia-zai-zi-ding-yi-ye-zi-jie-dian\">¶</a> 懒加载自定义叶子节点</h3>\n<demo-block>\n        <div><p>由于在点击节点时才进行该层数据的获取，默认情况下 Tree 无法预知某个节点是否为叶子节点，所以会为每个节点添加一个下拉按钮，如果节点没有下层数据，则点击后下拉按钮会消失。同时，你也可以提前告知 Tree 某个节点是否为叶子节点，从而避免在叶子节点前渲染下拉按钮。</p>\n</div>\n        <template slot=\"source\"><df-demo3 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :props=&quot;props&quot;\n    :load=&quot;loadNode&quot;\n    lazy\n    show-checkbox&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        props: {\n          label: 'name',\n          children: 'zones',\n          isLeaf: 'leaf'\n        },\n      };\n    },\n    methods: {\n      loadNode(node, resolve) {\n        if (node.level === 0) {\n          return resolve([{ name: 'region' }]);\n        }\n        if (node.level &gt; 1) return resolve([]);\n\n        setTimeout(() =&gt; {\n          const data = [{\n            name: 'leaf',\n            leaf: true\n          }, {\n            name: 'zone'\n          }];\n\n          resolve(data);\n        }, 500);\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"mo-ren-zhan-kai-he-mo-ren-xuan-zhong\"><a class=\"header-anchor\" href=\"#mo-ren-zhan-kai-he-mo-ren-xuan-zhong\">¶</a> 默认展开和默认选中</h3>\n<p>可将 Tree 的某些节点设置为默认展开或默认选中</p>\n<demo-block>\n        <div><p>分别通过<code>default-expanded-keys</code>和<code>default-checked-keys</code>设置默认展开和默认选中的节点。需要注意的是，此时必须设置<code>node-key</code>，其值为节点数据中的一个字段名，该字段在整棵树中是唯一的。</p>\n</div>\n        <template slot=\"source\"><df-demo4 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :data=&quot;data&quot;\n    show-checkbox\n    node-key=&quot;id&quot;\n    :default-expanded-keys=&quot;[2, 3]&quot;\n    :default-checked-keys=&quot;[5]&quot;\n    :props=&quot;defaultProps&quot;&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"jin-yong-zhuang-tai\"><a class=\"header-anchor\" href=\"#jin-yong-zhuang-tai\">¶</a> 禁用状态</h3>\n<p>可将 Tree 的某些节点设置为禁用状态</p>\n<demo-block>\n        <div><p>通过<code>disabled</code>设置禁用状态。</p>\n</div>\n        <template slot=\"source\"><df-demo5 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :data=&quot;data&quot;\n    show-checkbox\n    node-key=&quot;id&quot;\n    :default-expanded-keys=&quot;[2, 3]&quot;\n    :default-checked-keys=&quot;[5]&quot;&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 2',\n          children: [{\n            id: 3,\n            label: '二级 2-1',\n            children: [{\n              id: 4,\n              label: '三级 3-1-1'\n            }, {\n              id: 5,\n              label: '三级 3-1-2',\n              disabled: true\n            }]\n          }, {\n            id: 2,\n            label: '二级 2-2',\n            disabled: true,\n            children: [{\n              id: 6,\n              label: '三级 3-2-1'\n            }, {\n              id: 7,\n              label: '三级 3-2-2',\n              disabled: true\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"jin-yong-zhuang-tai-tong-guo-hui-diao-han-shu-dong-tai-she-zhi-jie-dian-de-jin-yong\"><a class=\"header-anchor\" href=\"#jin-yong-zhuang-tai-tong-guo-hui-diao-han-shu-dong-tai-she-zhi-jie-dian-de-jin-yong\">¶</a> 禁用状态（通过回调函数动态设置节点的禁用）</h3>\n<p>可以通过回调函数的形式设置某些节点设置为禁用状态</p>\n<demo-block>\n        <div><p>给 tree 传递函数<code>node-disabled-func</code>, 该函数自带两个参数, 节点的 node 和 data, 通过对节点数据的判断, 返回是否禁用, 与节点数据中的<code>disabled</code>同时生效。</p>\n</div>\n        <template slot=\"source\"><df-demo6 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :data=&quot;data&quot;\n    show-checkbox\n    node-key=&quot;id&quot;\n    :default-expanded-keys=&quot;[2, 3]&quot;\n    :default-checked-keys=&quot;[5]&quot;\n    :node-disabled-func=&quot;nodeDisabledFunc&quot;&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      data: [{\n        id: 1,\n        label: '一级 2',\n        children: [{\n          id: 3,\n          label: '二级 2-1',\n          children: [{\n            id: 4,\n            label: '三级 3-1-1'\n          }, {\n            id: 5,\n            label: '三级 3-1-2',\n            disabled: true\n          }]\n        }, {\n          id: 2,\n          label: '二级 2-2',\n          disabled: true,\n          children: [{\n            id: 6,\n            label: '三级 3-2-1'\n          }, {\n            id: 7,\n            label: '三级 3-2-2',\n            disabled: true\n          }]\n        }]\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      }\n    }\n  },\n  methods: {\n    nodeDisabledFunc (node, data) {\n      return data.label === '一级 2' || data.label === '二级 2-1'\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shu-jie-dian-de-xuan-ze\"><a class=\"header-anchor\" href=\"#shu-jie-dian-de-xuan-ze\">¶</a> 树节点的选择</h3>\n<demo-block>\n        <div><p>本例展示如何获取和设置选中节点。获取和设置各有两种方式：通过 node 或通过 key。如果需要通过 key 来获取或设置，则必须设置<code>node-key</code>。</p>\n</div>\n        <template slot=\"source\"><df-demo7 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :data=&quot;data&quot;\n    show-checkbox\n    default-expand-all\n    node-key=&quot;id&quot;\n    ref=&quot;tree&quot;\n    highlight-current\n    :props=&quot;defaultProps&quot;&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;div class=&quot;buttons&quot;&gt;\n  &lt;df-button @click=&quot;getCheckedNodes&quot;&gt;通过 node 获取&lt;/df-button&gt;\n  &lt;df-button @click=&quot;getCheckedKeys&quot;&gt;通过 key 获取&lt;/df-button&gt;\n  &lt;df-button @click=&quot;setCheckedNodes&quot;&gt;通过 node 设置&lt;/df-button&gt;\n  &lt;df-button @click=&quot;setCheckedKeys&quot;&gt;通过 key 设置&lt;/df-button&gt;\n  &lt;df-button @click=&quot;resetChecked&quot;&gt;清空&lt;/df-button&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n  export default {\n    methods: {\n      getCheckedNodes() {\n        console.log(this.$refs.tree.getCheckedNodes());\n      },\n      getCheckedKeys() {\n        console.log(this.$refs.tree.getCheckedKeys());\n      },\n      setCheckedNodes() {\n        this.$refs.tree.setCheckedNodes([{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 9,\n          label: '三级 1-1-1'\n        }]);\n      },\n      setCheckedKeys() {\n        this.$refs.tree.setCheckedKeys([3]);\n      },\n      resetChecked() {\n        this.$refs.tree.setCheckedKeys([]);\n      }\n    },\n\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"zi-ding-yi-jie-dian-nei-rong\"><a class=\"header-anchor\" href=\"#zi-ding-yi-jie-dian-nei-rong\">¶</a> 自定义节点内容</h3>\n<p>节点的内容支持自定义，可以在节点区添加按钮或图标等内容</p>\n<demo-block>\n        <div><p>可以通过两种方法进行树节点内容的自定义：<code>render-content</code>和 scoped slot。使用<code>render-content</code>指定渲染函数，该函数返回需要的节点区内容即可。渲染函数的用法请参考 Vue 文档。使用 scoped slot 会传入两个参数<code>node</code>和<code>data</code>，分别表示当前节点的 Node 对象和当前节点的数据。注意：由于 jsfiddle 不支持 JSX 语法，所以<code>render-content</code>示例在 jsfiddle 中无法运行。但是在实际的项目中，只要正确地配置了相关依赖，就可以正常运行。</p>\n</div>\n        <template slot=\"source\"><df-demo8 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;custom-tree-container&quot;&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 render-content&lt;/p&gt;\n      &lt;df-tree\n        :data=&quot;data&quot;\n        show-checkbox\n        node-key=&quot;id&quot;\n        default-expand-all\n        :expand-on-click-node=&quot;false&quot;\n        :render-content=&quot;renderContent&quot;&gt;\n      &lt;/df-tree&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 scoped slot&lt;/p&gt;\n      &lt;df-tree\n        :data=&quot;data&quot;\n        show-checkbox\n        node-key=&quot;id&quot;\n        default-expand-all\n        :expand-on-click-node=&quot;false&quot;&gt;\n        &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;{ node, data }&quot;&gt;\n          &lt;span&gt;{{ node.label }}&lt;/span&gt;\n          &lt;span&gt;\n            &lt;df-button\n              type=&quot;text&quot;\n              size=&quot;mini&quot;\n              @click=&quot;() =&gt; append(data)&quot;&gt;\n              Append\n            &lt;/df-button&gt;\n            &lt;df-button\n              type=&quot;text&quot;\n              size=&quot;mini&quot;\n              @click=&quot;() =&gt; remove(node, data)&quot;&gt;\n              Delete\n            &lt;/df-button&gt;\n          &lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/df-tree&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  let id = 1000;\n\n  export default {\n    data() {\n      const data = [{\n        id: 1,\n        label: '一级 1',\n        children: [{\n          id: 4,\n          label: '二级 1-1',\n          children: [{\n            id: 9,\n            label: '三级 1-1-1'\n          }, {\n            id: 10,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 6,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 7,\n          label: '二级 3-1'\n        }, {\n          id: 8,\n          label: '二级 3-2'\n        }]\n      }];\n      return {\n        data: JSON.parse(JSON.stringify(data)),\n        data: JSON.parse(JSON.stringify(data))\n      }\n    },\n\n    methods: {\n      append(data) {\n        const newChild = { id: id++, label: 'testtest', children: [] };\n        if (!data.children) {\n          this.$set(data, 'children', []);\n        }\n        data.children.push(newChild);\n      },\n\n      remove(node, data) {\n        const parent = node.parent;\n        const children = parent.data.children || parent.data;\n        const index = children.findIndex(d =&gt; d.id === data.id);\n        children.splice(index, 1);\n      },\n\n      renderContent(h, { node, data, store }) {\n        return (\n          &lt;span class=&quot;custom-tree-node&quot;&gt;\n            &lt;span&gt;{node.label}&lt;/span&gt;\n            &lt;span&gt;\n              &lt;df-button size=&quot;mini&quot; type=&quot;text&quot; on-click={ () =&gt; this.append(data) }&gt;Append&lt;/df-button&gt;\n              &lt;df-button size=&quot;mini&quot; type=&quot;text&quot; on-click={ () =&gt; this.remove(node, data) }&gt;Delete&lt;/df-button&gt;\n            &lt;/span&gt;\n          &lt;/span&gt;);\n      }\n    }\n  };\n&lt;/script&gt;\n\n&lt;style&gt;\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n&lt;/style&gt;\n</code></pre></template></demo-block><h3 id=\"jie-dian-guo-lu\"><a class=\"header-anchor\" href=\"#jie-dian-guo-lu\">¶</a> 节点过滤</h3>\n<p>通过关键字过滤树节点</p>\n<demo-block>\n        <div><p>在需要对节点进行过滤时，调用 Tree 实例的<code>filter</code>方法，参数为关键字。需要注意的是，此时需要设置<code>filter-node-method</code>，值为过滤函数。</p>\n</div>\n        <template slot=\"source\"><df-demo9 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-input\n      placeholder=&quot;输入关键字进行过滤&quot;\n      v-model=&quot;filterText&quot;&gt;\n    &lt;/df-input&gt;\n\n    &lt;df-tree\n      class=&quot;filter-tree&quot;\n      :data=&quot;data&quot;\n      :props=&quot;defaultProps&quot;\n      default-expand-all\n      :filter-node-method=&quot;filterNode&quot;\n      ref=&quot;tree&quot;&gt;\n    &lt;/df-tree&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    watch: {\n      filterText(val) {\n        this.$refs.tree.filter(val);\n      }\n    },\n\n    methods: {\n      filterNode(value, data) {\n        if (!value) return true;\n        return data.label.indexOf(value) !== -1;\n      }\n    },\n\n    data() {\n      return {\n        filterText: '',\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"shou-feng-qin-mo-shi\"><a class=\"header-anchor\" href=\"#shou-feng-qin-mo-shi\">¶</a> 手风琴模式</h3>\n<p>对于同一级的节点，每次只能展开一个</p>\n<demo-block>\n        \n        <template slot=\"source\"><df-demo10 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :data=&quot;data&quot;\n    :props=&quot;defaultProps&quot;\n    accordion\n    @node-click=&quot;handleNodeClick&quot;&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        data: [{\n          label: '一级 1',\n          children: [{\n            label: '二级 1-1',\n            children: [{\n              label: '三级 1-1-1'\n            }]\n          }]\n        }, {\n          label: '一级 2',\n          children: [{\n            label: '二级 2-1',\n            children: [{\n              label: '三级 2-1-1'\n            }]\n          }, {\n            label: '二级 2-2',\n            children: [{\n              label: '三级 2-2-1'\n            }]\n          }]\n        }, {\n          label: '一级 3',\n          children: [{\n            label: '二级 3-1',\n            children: [{\n              label: '三级 3-1-1'\n            }]\n          }, {\n            label: '二级 3-2',\n            children: [{\n              label: '三级 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleNodeClick(data) {\n        console.log(data);\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"ke-tuo-zhuai-jie-dian\"><a class=\"header-anchor\" href=\"#ke-tuo-zhuai-jie-dian\">¶</a> 可拖拽节点</h3>\n<p>通过 draggable 属性可让节点变为可拖拽。</p>\n<demo-block>\n        \n        <template slot=\"source\"><df-demo11 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;df-tree\n    :data=&quot;data&quot;\n    node-key=&quot;id&quot;\n    default-expand-all\n    @node-drag-start=&quot;handleDragStart&quot;\n    @node-drag-enter=&quot;handleDragEnter&quot;\n    @node-drag-leave=&quot;handleDragLeave&quot;\n    @node-drag-over=&quot;handleDragOver&quot;\n    @node-drag-end=&quot;handleDragEnd&quot;\n    @node-drop=&quot;handleDrop&quot;\n    draggable\n    :allow-drop=&quot;allowDrop&quot;\n    :allow-drag=&quot;allowDrag&quot;&gt;\n  &lt;/df-tree&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2',\n            children: [{\n             id: 11,\n              label: '三级 3-2-1'\n            }, {\n              id: 12,\n              label: '三级 3-2-2'\n            }, {\n              id: 13,\n              label: '三级 3-2-3'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleDragStart(node, ev) {\n        console.log('drag start', node);\n      },\n      handleDragEnter(draggingNode, dropNode, ev) {\n        console.log('tree drag enter: ', dropNode.label);\n      },\n      handleDragLeave(draggingNode, dropNode, ev) {\n        console.log('tree drag leave: ', dropNode.label);\n      },\n      handleDragOver(draggingNode, dropNode, ev) {\n        console.log('tree drag over: ', dropNode.label);\n      },\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drag end: ', dropNode &amp;&amp; dropNode.label, dropType);\n      },\n      handleDrop(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drop: ', dropNode.label, dropType);\n      },\n      allowDrop(draggingNode, dropNode, type) {\n        if (dropNode.data.label === '二级 3-1') {\n          return type !== 'inner';\n        } else {\n          return true;\n        }\n      },\n      allowDrag(draggingNode) {\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\n      }\n    }\n  };\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"jie-dian-geng-duo-cao-zuo\"><a class=\"header-anchor\" href=\"#jie-dian-geng-duo-cao-zuo\">¶</a> 节点更多操作</h3>\n<p>配置某个节点处的更多操作按钮组。</p>\n<demo-block>\n        <div><p>传入属性<code>need-operations</code>以开启树节点更多操作，传入<code>set-operations</code>方法以配置某一节点处的按钮组，此属性是一个函数，参数是节点对象，通过业务判断，返回该节点的按钮组即可，若安徽的按钮组为空，那么此节点的操作按钮将被隐藏。当某一按钮被点击时，会外派事件<code>operation-click</code>，携带被点击处的信息。属性<code>hide-on-click</code>表示点击按钮后是否自动隐藏弹出框。支持传入<code>hidden-operations</code>、<code>loading-operations</code>或<code>disabled-operations</code>设置某些按钮的隐藏、禁用或加载，需要注意的是<code>hidden-operations</code>、<code>loading-operations</code>或<code>disabled-operations</code>必须通过 Vue 指定的 <a href=\"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B\">数组更新检测</a> 方法来改变值，否则将不能监听其变化。</p>\n</div>\n        <template slot=\"source\"><df-demo12 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;df-tree\n      :data=&quot;data&quot;\n      :props=&quot;defaultProps&quot;\n      @node-click=&quot;handleNodeClick&quot;\n      need-operations\n      :set-operations=&quot;setOperations&quot;\n      @operation-click=&quot;operationClick&quot;\n      :hidden-operations=&quot;hiddenOperations&quot;\n      :loading-operations=&quot;loadingOperations&quot;\n      :disabled-operations=&quot;disabledOperations&quot;\n    &gt;&lt;/df-tree&gt;\n    &lt;br&gt;\n    &lt;df-button @click.stop=&quot;hideOperation&quot;&gt;隐藏第一个节点的第一个操作&lt;/df-button&gt;\n    &lt;df-button @click.stop=&quot;showOperation&quot;&gt;显示第一个节点的第一个操作&lt;/df-button&gt;\n    &lt;br&gt;&lt;br&gt;\n    &lt;df-button @click.stop=&quot;loadingOperation&quot;&gt;设置第二个节点的操作组为 loading&lt;/df-button&gt;\n    &lt;df-button @click.stop=&quot;unLoadingOperation&quot;&gt;清除所有操作的 loading&lt;/df-button&gt;\n    &lt;br&gt;&lt;br&gt;\n    &lt;df-button @click.stop=&quot;disableOperation&quot;&gt;设置第三个节点第一个操作为 disabled&lt;/df-button&gt;\n    &lt;df-button @click.stop=&quot;enableOperation&quot;&gt;清除第三个节点第一个操作的 disabled&lt;/df-button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      data: [{\n        id: 1,\n        label: '一级 1',\n        children: [{\n          id: 11,\n          label: '二级 1-1',\n          children: [{\n            id: 111,\n            label: '三级 1-1-1'\n          }, {\n            id: 112,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 21,\n          label: '二级 2-1'\n        }, {\n          id: 22,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 31,\n          label: '二级 3-1'\n        }, {\n          id: 32,\n          label: '二级 3-2'\n        }]\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      hiddenOperations: [],\n      loadingOperations: [],\n      disabledOperations: [{operationIndex: 2, id: 1}]\n    }\n  },\n  methods: {\n    handleNodeClick (data) {\n      console.log(data)\n    },\n    setOperations (node) {\n      if (node.data.id === 1) return ['订单', '方法', '刚刚']\n      else return ['请求', '哇哇', '嗯嗯']\n    },\n    operationClick (...data) {\n      console.log(data)\n    },\n    hideOperation () {\n      this.hiddenOperations.push({operationIndex: 0, id: 1})\n    },\n    showOperation () {\n      this.hiddenOperations = []\n    },\n    loadingOperation () {\n      this.loadingOperations.push({operationIndex: 0, id: 2}, {operationIndex: 1, id: 2}, {operationIndex: 2, id: 2})\n    },\n    unLoadingOperation () {\n      this.loadingOperations = []\n    },\n    disableOperation () {\n      this.disabledOperations.push({operationIndex: 0, id: 3})\n    },\n    enableOperation () {\n      this.disabledOperations = []\n    }\n  }\n}\n&lt;/script&gt;\n\n\n</code></pre></template></demo-block><h3 id=\"attributes\"><a class=\"header-anchor\" href=\"#attributes\">¶</a> Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>展示数据</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>empty-text</td>\n<td>内容为空的时候展示的文本</td>\n<td>String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>node-key</td>\n<td>每个树节点用来作为唯一标识的属性，整棵树应该是唯一的</td>\n<td>String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>props</td>\n<td>配置选项，具体看下表</td>\n<td>object</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>render-after-expand</td>\n<td>是否在第一次展开某个树节点后才渲染其子节点</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>load</td>\n<td>加载子树数据的方法，仅当 lazy 属性为true 时生效</td>\n<td>function(node, resolve)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>render-content</td>\n<td>树节点的内容区的渲染 Function</td>\n<td>Function(h, { node, data, store }</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>highlight-current</td>\n<td>是否高亮当前选中节点，默认值是 false。</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>default-expand-all</td>\n<td>是否默认展开所有节点</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>expand-on-click-node</td>\n<td>是否在点击节点的时候展开或者收缩节点， 默认值为 true，如果为 false，则只有点箭头图标的时候才会展开或者收缩节点。</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>check-on-click-node</td>\n<td>是否在点击节点的时候选中节点，默认值为 false，即只有在点击复选框时才会选中节点。</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>auto-expand-parent</td>\n<td>展开子节点的时候是否自动展开父节点</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>default-expanded-keys</td>\n<td>默认展开的节点的 key 的数组</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>show-checkbox</td>\n<td>节点是否可被选择</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>check-strictly</td>\n<td>在显示复选框的情况下，是否严格的遵循父子不互相关联的做法，默认为 false</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>default-checked-keys</td>\n<td>默认勾选的节点的 key 的数组</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>current-node-key</td>\n<td>当前选中的节点</td>\n<td>string, number</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>filter-node-method</td>\n<td>对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏</td>\n<td>Function(value, data, node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>accordion</td>\n<td>是否每次只打开一个同级树节点展开</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>indent</td>\n<td>相邻级节点间的水平缩进，单位为像素</td>\n<td>number</td>\n<td>—</td>\n<td>16</td>\n</tr>\n<tr>\n<td>icon-class</td>\n<td>自定义树节点的图标</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>lazy</td>\n<td>是否懒加载子节点，需与 load 方法结合使用</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>draggable</td>\n<td>是否开启拖拽节点功能</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>allow-drag</td>\n<td>判断节点能否被拖拽</td>\n<td>Function(node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>allow-drop</td>\n<td>拖拽时判定目标节点能否被放置。<code>type</code> 参数有三种情况：'prev'、'inner' 和 'next'，分别表示放置在目标节点前、插入至目标节点和放置在目标节点后</td>\n<td>Function(draggingNode, dropNode, type)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>need-operations</td>\n<td>/<em>新增</em>/  是否需要配置节点更多操作按钮组</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>set-operations</td>\n<td>/<em>新增</em>/ 动态配置节点更多操作按钮组的名称</td>\n<td>Function(node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>hidden-operations</td>\n<td>/<em>新增</em>/ 设置节点更多操作按钮组的隐藏</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>loading-operations</td>\n<td>/<em>新增</em>/ 设置节点更多操作按钮组的 loading 状态</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>disabled-operations</td>\n<td>/<em>新增</em>/ 设置节点更多操作按钮组的 disabled 状态</td>\n<td>Array</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>hide-on-click</td>\n<td>/<em>新增</em>/ 是否在弹出节点更多操作按钮组后隐藏弹出框</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>stop-on-click-operation</td>\n<td>/<em>新增</em>/ 是否在点击更多操作三个点时阻止点击事件的向上冒泡</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>show-tree-icon</td>\n<td>/<em>新增</em>/ 是否显示树形控件的图标</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>node-disabled-func</td>\n<td>/<em>新增</em>/ 通过回调函数的形式控制某些节点的禁用状态</td>\n<td>function</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>custom-icon</td>\n<td>/<em>新增</em>/ 通过回调函数的形式控制节点的图标展示, 函数自带 4 个参数, 分别是 节点、节点数据、节点是否展开、节点是否是最终层节点</td>\n<td>function</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"props\"><a class=\"header-anchor\" href=\"#props\">¶</a> props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>label</td>\n<td>指定节点标签为节点对象的某个属性值</td>\n<td>string, function(data, node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>children</td>\n<td>指定子树为节点对象的某个属性值</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>指定节点选择框是否禁用为节点对象的某个属性值</td>\n<td>boolean, function(data, node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>isLeaf</td>\n<td>指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效</td>\n<td>boolean, function(data, node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fang-fa\"><a class=\"header-anchor\" href=\"#fang-fa\">¶</a> 方法</h3>\n<p><code>Tree</code> 内部使用了 Node 类型的对象来包装用户传入的数据，用来保存目前节点的状态。\n<code>Tree</code> 拥有如下方法：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filter</td>\n<td>对树节点进行筛选操作</td>\n<td>接收一个任意类型的参数，该参数会在 filter-node-method 中作为第一个参数</td>\n</tr>\n<tr>\n<td>updateKeyChildren</td>\n<td>通过 keys 设置节点子元素，使用此方法必须设置 node-key 属性</td>\n<td>(key, data) 接收两个参数，1. 节点 key 2. 节点数据的数组</td>\n</tr>\n<tr>\n<td>getCheckedNodes</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前被选中的节点所组成的数组</td>\n<td>(leafOnly, includeHalfChecked) 接收两个 boolean 类型的参数，1. 是否只是叶子节点，默认值为 <code>false</code> 2. 是否包含半选节点，默认值为 <code>false</code></td>\n</tr>\n<tr>\n<td>setCheckedNodes</td>\n<td>设置目前勾选的节点，使用此方法必须设置 node-key 属性</td>\n<td>(nodes) 接收勾选节点数据的数组</td>\n</tr>\n<tr>\n<td>getCheckedKeys</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前被选中的节点的 key 所组成的数组</td>\n<td>(leafOnly) 接收一个 boolean 类型的参数，若为 <code>true</code> 则仅返回被选中的叶子节点的 keys，默认值为 <code>false</code></td>\n</tr>\n<tr>\n<td>setCheckedKeys</td>\n<td>通过 keys 设置目前勾选的节点，使用此方法必须设置 node-key 属性</td>\n<td>(keys, leafOnly) 接收两个参数，1. 勾选节点的 key 的数组 2. boolean 类型的参数，若为 <code>true</code> 则仅设置叶子节点的选中状态，默认值为 <code>false</code></td>\n</tr>\n<tr>\n<td>setChecked</td>\n<td>通过 key / data 设置某个节点的勾选状态，使用此方法必须设置 node-key 属性</td>\n<td>(key/data, checked, deep) 接收三个参数，1. 勾选节点的 key 或者 data 2. boolean 类型，节点是否选中  3. boolean 类型，是否设置子节点 ，默认为 false</td>\n</tr>\n<tr>\n<td>getHalfCheckedNodes</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前半选中的节点所组成的数组</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getHalfCheckedKeys</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前半选中的节点的 key 所组成的数组</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getCurrentKey</td>\n<td>获取当前被选中节点的 key，使用此方法必须设置 node-key 属性，若没有节点被选中则返回 null</td>\n<td>—</td>\n</tr>\n<tr>\n<td>getCurrentNode</td>\n<td>获取当前被选中节点的 data，若没有节点被选中则返回 null</td>\n<td>—</td>\n</tr>\n<tr>\n<td>setCurrentKey</td>\n<td>通过 key 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性</td>\n<td>(key) 待被选节点的 key，若为 null 则取消当前高亮的节点</td>\n</tr>\n<tr>\n<td>setCurrentNode</td>\n<td>通过 node 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性</td>\n<td>(node) 待被选节点的 node</td>\n</tr>\n<tr>\n<td>getNode</td>\n<td>根据 data 或者 key 拿到 Tree 组件中的 node</td>\n<td>(data) 要获得 node 的 key 或者 data</td>\n</tr>\n<tr>\n<td>remove</td>\n<td>删除 Tree 中的一个节点，使用此方法必须设置 node-key 属性</td>\n<td>(data) 要删除的节点的 data 或者 node</td>\n</tr>\n<tr>\n<td>append</td>\n<td>为 Tree 中的一个节点追加一个子节点</td>\n<td>(data, parentNode) 接收两个参数，1. 要追加的子节点的 data 2. 子节点的 parent 的 data、key 或者 node</td>\n</tr>\n<tr>\n<td>insertBefore</td>\n<td>为 Tree 的一个节点的前面增加一个节点</td>\n<td>(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的后一个节点的 data、key 或者 node</td>\n</tr>\n<tr>\n<td>insertAfter</td>\n<td>为 Tree 的一个节点的后面增加一个节点</td>\n<td>(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的前一个节点的 data、key 或者 node</td>\n</tr>\n<tr>\n<td>setNodeExpandStatus</td>\n<td>设置某个节点的展开状态</td>\n<td>(nodeKey, expandStatus) 接收两个参数，1. 节点的 key 2. 节点的展开状态，true 为展开，false 为收起</td>\n</tr>\n<tr>\n<td>setAllExpandStatus</td>\n<td>设置全部节点的展开状态</td>\n<td>(expandStatus) 接收一个参数，全部节点的展开状态，true 为展开，false 为收起</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"events\"><a class=\"header-anchor\" href=\"#events\">¶</a> Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>node-click</td>\n<td>节点被点击时的回调</td>\n<td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身。</td>\n</tr>\n<tr>\n<td>node-contextmenu</td>\n<td>当某一节点被鼠标右键点击时会触发该事件</td>\n<td>共四个参数，依次为：event、传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身。</td>\n</tr>\n<tr>\n<td>check-change</td>\n<td>节点选中状态发生变化时的回调</td>\n<td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点本身是否被选中、节点的子树中是否有被选中的节点</td>\n</tr>\n<tr>\n<td>check</td>\n<td>当复选框被点击的时候触发</td>\n<td>共两个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、树目前的选中状态对象，包含 checkedNodes、checkedKeys、halfCheckedNodes、halfCheckedKeys 四个属性</td>\n</tr>\n<tr>\n<td>current-change</td>\n<td>当前选中节点变化时触发的事件</td>\n<td>共两个参数，依次为：当前节点的数据，当前节点的 Node 对象</td>\n</tr>\n<tr>\n<td>node-expand</td>\n<td>节点被展开时触发的事件</td>\n<td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身</td>\n</tr>\n<tr>\n<td>node-collapse</td>\n<td>节点被关闭时触发的事件</td>\n<td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身</td>\n</tr>\n<tr>\n<td>node-drag-start</td>\n<td>节点开始拖拽时触发的事件</td>\n<td>共两个参数，依次为：被拖拽节点对应的 Node、event</td>\n</tr>\n<tr>\n<td>node-drag-enter</td>\n<td>拖拽进入其他节点时触发的事件</td>\n<td>共三个参数，依次为：被拖拽节点对应的 Node、所进入节点对应的 Node、event</td>\n</tr>\n<tr>\n<td>node-drag-leave</td>\n<td>拖拽离开某个节点时触发的事件</td>\n<td>共三个参数，依次为：被拖拽节点对应的 Node、所离开节点对应的 Node、event</td>\n</tr>\n<tr>\n<td>node-drag-over</td>\n<td>在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）</td>\n<td>共三个参数，依次为：被拖拽节点对应的 Node、当前进入节点对应的 Node、event</td>\n</tr>\n<tr>\n<td>node-drag-end</td>\n<td>拖拽结束时（可能未成功）触发的事件</td>\n<td>共四个参数，依次为：被拖拽节点对应的 Node、结束拖拽时最后进入的节点（可能为空）、被拖拽节点的放置位置（before、after、inner）、event</td>\n</tr>\n<tr>\n<td>node-drop</td>\n<td>拖拽成功完成时触发的事件</td>\n<td>共四个参数，依次为：被拖拽节点对应的 Node、结束拖拽时最后进入的节点、被拖拽节点的放置位置（before、after、inner）、event</td>\n</tr>\n<tr>\n<td>operation-click</td>\n<td>/<em>新增</em>/ 使用节点更多操作按钮组时，触发任一操作后触发（参数：操作处的节点、操作名称、操作在操作组中的下标）</td>\n<td>node, operation, operationIndex</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"scoped-slot\"><a class=\"header-anchor\" href=\"#scoped-slot\">¶</a> Scoped Slot</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>—</td>\n<td>自定义树节点的内容，参数为 { node, data }</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"df-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"data\":_vm.data,\"props\":_vm.defaultProps},on:{\"node-click\":_vm.handleNodeClick}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        data: [{\n          label: '一级 1',\n          children: [{\n            label: '二级 1-1',\n            children: [{\n              label: '三级 1-1-1'\n            }]\n          }]\n        }, {\n          label: '一级 2',\n          children: [{\n            label: '二级 2-1',\n            children: [{\n              label: '三级 2-1-1'\n            }]\n          }, {\n            label: '二级 2-2',\n            children: [{\n              label: '三级 2-2-1'\n            }]\n          }]\n        }, {\n          label: '一级 3',\n          children: [{\n            label: '二级 3-1',\n            children: [{\n              label: '三级 3-1-1'\n            }]\n          }, {\n            label: '二级 3-2',\n            children: [{\n              label: '三级 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleNodeClick(data) {\n        console.log(data);\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo1\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"data\":_vm.data,\"custom-icon\":_vm.customIcon}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      data: [{\n        label: '一级 1',\n        children: [{\n          label: '二级 1-1',\n          children: [{\n            label: '三级 1-1-1'\n          }]\n        }]\n      }, {\n        label: '一级 2',\n        children: [{\n          label: '二级 2-1',\n          children: [{\n            label: '三级 2-1-1'\n          }]\n        }, {\n          label: '二级 2-2',\n          children: [{\n            label: '三级 2-2-1'\n          }]\n        }]\n      }, {\n        label: '一级 3',\n        children: [{\n          label: '二级 3-1',\n          children: [{\n            label: '三级 3-1-1'\n          }]\n        }, {\n          label: '二级 3-2',\n          children: [{\n            label: '三级 3-2-1'\n          }]\n        }]\n      }]\n    }\n  },\n  methods: {\n    customIcon (node, data, expanded, isLeaf) {\n      // 如果节点的 label 是 '一级 3', 则不使用自定义图标, 此情况下返回一个 null, 组件就会自动使用默认图标\n      if (data.label === '一级 3') return null\n      // 如果是最终层节点, 则使用 icon 类型的图标 star\n      if (isLeaf) return { iconType: 'icon', iconName: 'star' }\n      // 如果节点是展开状态, 使用 svg 类型图标 folder-open\n      if (expanded) return { iconType: 'svg', iconName: 'folder-open' }\n      // 如果节点是收起状态, 使用 svg 类型图标 folder\n      if (!expanded) return { iconType: 'svg', iconName: 'folder' }\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo2\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"props\":_vm.props,\"load\":_vm.loadNode,\"lazy\":\"\",\"show-checkbox\":\"\"},on:{\"check-change\":_vm.handleCheckChange}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        props: {\n          label: 'name',\n          children: 'zones'\n        },\n        count: 1\n      };\n    },\n    methods: {\n      handleCheckChange(data, checked, indeterminate) {\n        console.log(data, checked, indeterminate);\n      },\n      handleNodeClick(data) {\n        console.log(data);\n      },\n      loadNode(node, resolve) {\n        if (node.level === 0) {\n          return resolve([{ name: 'region1' }, { name: 'region2' }]);\n        }\n        if (node.level > 3) return resolve([]);\n\n        var hasChild;\n        if (node.data.name === 'region1') {\n          hasChild = true;\n        } else if (node.data.name === 'region2') {\n          hasChild = false;\n        } else {\n          hasChild = Math.random() > 0.5;\n        }\n\n        setTimeout(() => {\n          var data;\n          if (hasChild) {\n            data = [{\n              name: 'zone' + this.count++\n            }, {\n              name: 'zone' + this.count++\n            }];\n          } else {\n            data = [];\n          }\n\n          resolve(data);\n        }, 500);\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo3\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"props\":_vm.props,\"load\":_vm.loadNode,\"lazy\":\"\",\"show-checkbox\":\"\"}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        props: {\n          label: 'name',\n          children: 'zones',\n          isLeaf: 'leaf'\n        },\n      };\n    },\n    methods: {\n      loadNode(node, resolve) {\n        if (node.level === 0) {\n          return resolve([{ name: 'region' }]);\n        }\n        if (node.level > 1) return resolve([]);\n\n        setTimeout(() => {\n          const data = [{\n            name: 'leaf',\n            leaf: true\n          }, {\n            name: 'zone'\n          }];\n\n          resolve(data);\n        }, 500);\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo4\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"data\":_vm.data,\"show-checkbox\":\"\",\"node-key\":\"id\",\"default-expanded-keys\":[2, 3],\"default-checked-keys\":[5],\"props\":_vm.defaultProps}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo5\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"data\":_vm.data,\"show-checkbox\":\"\",\"node-key\":\"id\",\"default-expanded-keys\":[2, 3],\"default-checked-keys\":[5]}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 2',\n          children: [{\n            id: 3,\n            label: '二级 2-1',\n            children: [{\n              id: 4,\n              label: '三级 3-1-1'\n            }, {\n              id: 5,\n              label: '三级 3-1-2',\n              disabled: true\n            }]\n          }, {\n            id: 2,\n            label: '二级 2-2',\n            disabled: true,\n            children: [{\n              id: 6,\n              label: '三级 3-2-1'\n            }, {\n              id: 7,\n              label: '三级 3-2-2',\n              disabled: true\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo6\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"data\":_vm.data,\"show-checkbox\":\"\",\"node-key\":\"id\",\"default-expanded-keys\":[2, 3],\"default-checked-keys\":[5],\"node-disabled-func\":_vm.nodeDisabledFunc}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      data: [{\n        id: 1,\n        label: '一级 2',\n        children: [{\n          id: 3,\n          label: '二级 2-1',\n          children: [{\n            id: 4,\n            label: '三级 3-1-1'\n          }, {\n            id: 5,\n            label: '三级 3-1-2',\n            disabled: true\n          }]\n        }, {\n          id: 2,\n          label: '二级 2-2',\n          disabled: true,\n          children: [{\n            id: 6,\n            label: '三级 3-2-1'\n          }, {\n            id: 7,\n            label: '三级 3-2-2',\n            disabled: true\n          }]\n        }]\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      }\n    }\n  },\n  methods: {\n    nodeDisabledFunc (node, data) {\n      return data.label === '一级 2' || data.label === '二级 2-1'\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo7\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{ref:\"tree\",attrs:{\"data\":_vm.data,\"show-checkbox\":\"\",\"default-expand-all\":\"\",\"node-key\":\"id\",\"highlight-current\":\"\",\"props\":_vm.defaultProps}})],_vm._v(\" \"),_c('div',{staticClass:\"buttons\"},[_c('df-button',{on:{\"click\":_vm.getCheckedNodes}},[_vm._v(\"通过 node 获取\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.getCheckedKeys}},[_vm._v(\"通过 key 获取\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.setCheckedNodes}},[_vm._v(\"通过 node 设置\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.setCheckedKeys}},[_vm._v(\"通过 key 设置\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":_vm.resetChecked}},[_vm._v(\"清空\")])],1)],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    methods: {\n      getCheckedNodes() {\n        console.log(this.$refs.tree.getCheckedNodes());\n      },\n      getCheckedKeys() {\n        console.log(this.$refs.tree.getCheckedKeys());\n      },\n      setCheckedNodes() {\n        this.$refs.tree.setCheckedNodes([{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 9,\n          label: '三级 1-1-1'\n        }]);\n      },\n      setCheckedKeys() {\n        this.$refs.tree.setCheckedKeys([3]);\n      },\n      resetChecked() {\n        this.$refs.tree.setCheckedKeys([]);\n      }\n    },\n\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo8\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 render-content\")]),_vm._v(\" \"),_c('df-tree',{attrs:{\"data\":_vm.data,\"show-checkbox\":\"\",\"node-key\":\"id\",\"default-expand-all\":\"\",\"expand-on-click-node\":false,\"render-content\":_vm.renderContent}})],1),_vm._v(\" \"),_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 scoped slot\")]),_vm._v(\" \"),_c('df-tree',{attrs:{\"data\":_vm.data,\"show-checkbox\":\"\",\"node-key\":\"id\",\"default-expand-all\":\"\",\"expand-on-click-node\":false},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar data = ref.data;\nreturn _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[_vm._v(_vm._s(node.label))]),_vm._v(\" \"),_c('span',[_c('df-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function () { return _vm.append(data); }}},[_vm._v(\"\\n              Append\\n            \")]),_vm._v(\" \"),_c('df-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function () { return _vm.remove(node, data); }}},[_vm._v(\"\\n              Delete\\n            \")])],1)])}}])})],1)])]],2)}\nvar staticRenderFns = []\n\n  \n    let id = 1000;\n\n  const democomponentExport = {\n    data() {\n      const data = [{\n        id: 1,\n        label: '一级 1',\n        children: [{\n          id: 4,\n          label: '二级 1-1',\n          children: [{\n            id: 9,\n            label: '三级 1-1-1'\n          }, {\n            id: 10,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 6,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 7,\n          label: '二级 3-1'\n        }, {\n          id: 8,\n          label: '二级 3-2'\n        }]\n      }];\n      return {\n        data: JSON.parse(JSON.stringify(data)),\n        data: JSON.parse(JSON.stringify(data))\n      }\n    },\n\n    methods: {\n      append(data) {\n        const newChild = { id: id++, label: 'testtest', children: [] };\n        if (!data.children) {\n          this.$set(data, 'children', []);\n        }\n        data.children.push(newChild);\n      },\n\n      remove(node, data) {\n        const parent = node.parent;\n        const children = parent.data.children || parent.data;\n        const index = children.findIndex(d => d.id === data.id);\n        children.splice(index, 1);\n      },\n\n      renderContent(h, { node, data, store }) {\n        return (\n          <span class=\"custom-tree-node\">\n            <span>{node.label}</span>\n            <span>\n              <df-button size=\"mini\" type=\"text\" on-click={ () => this.append(data) }>Append</df-button>\n              <df-button size=\"mini\" type=\"text\" on-click={ () => this.remove(node, data) }>Delete</df-button>\n            </span>\n          </span>);\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo9\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-input',{attrs:{\"placeholder\":\"输入关键字进行过滤\"},model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}}),_vm._v(\" \"),_c('df-tree',{ref:\"tree\",staticClass:\"filter-tree\",attrs:{\"data\":_vm.data,\"props\":_vm.defaultProps,\"default-expand-all\":\"\",\"filter-node-method\":_vm.filterNode}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    watch: {\n      filterText(val) {\n        this.$refs.tree.filter(val);\n      }\n    },\n\n    methods: {\n      filterNode(value, data) {\n        if (!value) return true;\n        return data.label.indexOf(value) !== -1;\n      }\n    },\n\n    data() {\n      return {\n        filterText: '',\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2'\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo10\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"data\":_vm.data,\"props\":_vm.defaultProps,\"accordion\":\"\"},on:{\"node-click\":_vm.handleNodeClick}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        data: [{\n          label: '一级 1',\n          children: [{\n            label: '二级 1-1',\n            children: [{\n              label: '三级 1-1-1'\n            }]\n          }]\n        }, {\n          label: '一级 2',\n          children: [{\n            label: '二级 2-1',\n            children: [{\n              label: '三级 2-1-1'\n            }]\n          }, {\n            label: '二级 2-2',\n            children: [{\n              label: '三级 2-2-1'\n            }]\n          }]\n        }, {\n          label: '一级 3',\n          children: [{\n            label: '二级 3-1',\n            children: [{\n              label: '三级 3-1-1'\n            }]\n          }, {\n            label: '二级 3-2',\n            children: [{\n              label: '三级 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleNodeClick(data) {\n        console.log(data);\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo11\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('df-tree',{attrs:{\"data\":_vm.data,\"node-key\":\"id\",\"default-expand-all\":\"\",\"draggable\":\"\",\"allow-drop\":_vm.allowDrop,\"allow-drag\":_vm.allowDrag},on:{\"node-drag-start\":_vm.handleDragStart,\"node-drag-enter\":_vm.handleDragEnter,\"node-drag-leave\":_vm.handleDragLeave,\"node-drag-over\":_vm.handleDragOver,\"node-drag-end\":_vm.handleDragEnd,\"node-drop\":_vm.handleDrop}})]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data() {\n      return {\n        data: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2',\n            children: [{\n             id: 11,\n              label: '三级 3-2-1'\n            }, {\n              id: 12,\n              label: '三级 3-2-2'\n            }, {\n              id: 13,\n              label: '三级 3-2-3'\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }\n      };\n    },\n    methods: {\n      handleDragStart(node, ev) {\n        console.log('drag start', node);\n      },\n      handleDragEnter(draggingNode, dropNode, ev) {\n        console.log('tree drag enter: ', dropNode.label);\n      },\n      handleDragLeave(draggingNode, dropNode, ev) {\n        console.log('tree drag leave: ', dropNode.label);\n      },\n      handleDragOver(draggingNode, dropNode, ev) {\n        console.log('tree drag over: ', dropNode.label);\n      },\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\n      },\n      handleDrop(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drop: ', dropNode.label, dropType);\n      },\n      allowDrop(draggingNode, dropNode, type) {\n        if (dropNode.data.label === '二级 3-1') {\n          return type !== 'inner';\n        } else {\n          return true;\n        }\n      },\n      allowDrag(draggingNode) {\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\n      }\n    }\n  };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo12\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('df-tree',{attrs:{\"data\":_vm.data,\"props\":_vm.defaultProps,\"need-operations\":\"\",\"set-operations\":_vm.setOperations,\"hidden-operations\":_vm.hiddenOperations,\"loading-operations\":_vm.loadingOperations,\"disabled-operations\":_vm.disabledOperations},on:{\"node-click\":_vm.handleNodeClick,\"operation-click\":_vm.operationClick}}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.hideOperation.apply(null, arguments)}}},[_vm._v(\"隐藏第一个节点的第一个操作\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.showOperation.apply(null, arguments)}}},[_vm._v(\"显示第一个节点的第一个操作\")]),_vm._v(\" \"),_c('br'),_c('br'),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.loadingOperation.apply(null, arguments)}}},[_vm._v(\"设置第二个节点的操作组为 loading\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.unLoadingOperation.apply(null, arguments)}}},[_vm._v(\"清除所有操作的 loading\")]),_vm._v(\" \"),_c('br'),_c('br'),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.disableOperation.apply(null, arguments)}}},[_vm._v(\"设置第三个节点第一个操作为 disabled\")]),_vm._v(\" \"),_c('df-button',{on:{\"click\":function($event){$event.stopPropagation();return _vm.enableOperation.apply(null, arguments)}}},[_vm._v(\"清除第三个节点第一个操作的 disabled\")])],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data () {\n    return {\n      data: [{\n        id: 1,\n        label: '一级 1',\n        children: [{\n          id: 11,\n          label: '二级 1-1',\n          children: [{\n            id: 111,\n            label: '三级 1-1-1'\n          }, {\n            id: 112,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 21,\n          label: '二级 2-1'\n        }, {\n          id: 22,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 31,\n          label: '二级 3-1'\n        }, {\n          id: 32,\n          label: '二级 3-2'\n        }]\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      hiddenOperations: [],\n      loadingOperations: [],\n      disabledOperations: [{operationIndex: 2, id: 1}]\n    }\n  },\n  methods: {\n    handleNodeClick (data) {\n      console.log(data)\n    },\n    setOperations (node) {\n      if (node.data.id === 1) return ['订单', '方法', '刚刚']\n      else return ['请求', '哇哇', '嗯嗯']\n    },\n    operationClick (...data) {\n      console.log(data)\n    },\n    hideOperation () {\n      this.hiddenOperations.push({operationIndex: 0, id: 1})\n    },\n    showOperation () {\n      this.hiddenOperations = []\n    },\n    loadingOperation () {\n      this.loadingOperations.push({operationIndex: 0, id: 2}, {operationIndex: 1, id: 2}, {operationIndex: 2, id: 2})\n    },\n    unLoadingOperation () {\n      this.loadingOperations = []\n    },\n    disableOperation () {\n      this.disabledOperations.push({operationIndex: 0, id: 3})\n    },\n    enableOperation () {\n      this.disabledOperations = []\n    }\n  }\n}\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js!../../../docs/md-loader/index.js!../../../node_modules/eslint-loader/index.js??ref--14-0!./tree.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js!../../../docs/md-loader/index.js!../../../node_modules/eslint-loader/index.js??ref--14-0!./tree.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree.md?vue&type=template&id=268e71a4&\"\nimport script from \"./tree.md?vue&type=script&lang=js&\"\nexport * from \"./tree.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}