{"version":3,"sources":["webpack:///./src/docs-ui/form/treeSelect.md","webpack:///src/docs-ui/form/treeSelect.md","webpack:///./src/docs-ui/form/treeSelect.md?9d24","webpack:///./src/docs-ui/form/treeSelect.md?8267"],"names":["render","_vm","this","_c","_self","staticClass","_m","_v","slot","pre","attrs","staticRenderFns","name","components","_h","$createElement","ref","value","data","multiple","valueType","filterNode","democomponentExport","id","label","children","JSON","parse","stringify","defaultExpand","methods","indexOf","_objectSpread","component"],"mappings":"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","file":"js/chunk-2d225c6f.65ed42ad.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"content df-doc\"},[_vm._m(0),_c('p',[_vm._v(\"用清晰的层级结构展示下拉选信息，可展开或折叠。\")]),_vm._m(1),_c('p',[_vm._v(\"输入框聚焦时按 ↓ 键可跳入树结构, 在树结构内可使用上下切换聚焦项, 使用左右可展开和收起, 使用空格选中, 使用 enter 来确认。\")]),_c('p',[_vm._v(\"输入框聚焦时按 enter 键, 如果当前已有选中的树节点, 则收起下拉树, 如果当前没有已选中的树节点, 则默认选中第一个节点。\")]),_c('p',[_vm._v(\"按 esc 键收起下拉树。\")]),_vm._m(2),_c('p',[_vm._v(\"基础的下拉选树形结构展示。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"基础的单选下拉树，传入\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"用于下拉树的结构数据渲染。使用\"),_c('code',[_vm._v(\"filterNodeMethod\")]),_vm._v(\"设置输入框输入的文字的实时搜索匹配规则。\")])]),_c('template',{slot:\"source\"},[_c('df-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 tree-select</p>\\n      <df-tree-select\\n        :value=\\\"value\\\"\\n        :data=\\\"data\\\"\\n        :multiple=\\\"multiple\\\"\\n        :valueType=\\\"valueType\\\"\\n        :filterNodeMethod=\\\"filterNode\\\"\\n        ref=\\\"treeSelect\\\"\\n      >\\n      </df-tree-select>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    const data = [{\\n      id: 1,\\n      label: '一级 1',\\n      children: [{\\n        id: 4,\\n        label: '二级 1-1',\\n        children: [{\\n          id: 9,\\n          label: '三级 1-1-1'\\n        }, {\\n          id: 10,\\n          label: '三级 1-1-2'\\n        }]\\n      }]\\n    }, {\\n      id: 2,\\n      label: '一级 2',\\n      children: [{\\n        id: 5,\\n        label: '二级 2-1'\\n      }, {\\n        id: 6,\\n        label: '二级 2-2'\\n      }]\\n    }, {\\n      id: 3,\\n      label: '一级 3',\\n      children: [{\\n        id: 7,\\n        label: '二级 3-1'\\n      }, {\\n        id: 8,\\n        label: '二级 3-2'\\n      }]\\n    }];\\n    return {\\n      value: '',\\n      data: JSON.parse(JSON.stringify(data)),\\n      multiple: false,\\n      defaultExpand: false,\\n      valueType: 'id'\\n    }\\n  },\\n\\n  methods: {\\n    filterNode(value, data) {\\n      if (!value) return true;\\n      return data.label.indexOf(value) !== -1;\\n    }\\n  }\\n\\n};\\n</script>\\n\\n\")])])])],2),_vm._m(3),_c('p',[_vm._v(\"下拉树支持多选。\")]),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"将\"),_c('code',[_vm._v(\"multiple\")]),_vm._v(\"配置为\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"，即可开启多选。\")])]),_c('template',{slot:\"source\"},[_c('df-demo1')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 tree-select</p>\\n      <df-tree-select\\n        :value=\\\"value\\\"\\n        :data=\\\"data\\\"\\n        :multiple=\\\"multiple\\\"\\n        :valueType=\\\"valueType\\\"\\n        :filterNodeMethod=\\\"filterNode\\\"\\n        ref=\\\"treeSelect\\\"\\n      >\\n      </df-tree-select>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    const data = [{\\n      id: 1,\\n      label: '一级 1',\\n      children: [{\\n        id: 4,\\n        label: '二级 1-1',\\n        children: [{\\n          id: 9,\\n          label: '三级 1-1-1'\\n        }, {\\n          id: 10,\\n          label: '三级 1-1-2'\\n        }]\\n      }]\\n    }, {\\n      id: 2,\\n      label: '一级 2',\\n      children: [{\\n        id: 5,\\n        label: '二级 2-1'\\n      }, {\\n        id: 6,\\n        label: '二级 2-2'\\n      }]\\n    }, {\\n      id: 3,\\n      label: '一级 3',\\n      children: [{\\n        id: 7,\\n        label: '二级 3-1'\\n      }, {\\n        id: 8,\\n        label: '二级 3-2'\\n      }]\\n    }];\\n    return {\\n      value: '',\\n      data: JSON.parse(JSON.stringify(data)),\\n      multiple: true,\\n      defaultExpand: false,\\n      valueType: 'id'\\n    }\\n  },\\n\\n  methods: {\\n    filterNode(value, data) {\\n      if (!value) return true;\\n      return data.label.indexOf(value) !== -1;\\n    }\\n  }\\n\\n};\\n</script>\\n\\n\")])])])],2),_vm._m(4),_vm._m(5),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"单选模式下，如果\"),_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"id\")]),_vm._v(\"，则\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"需要配置为\"),_c('code',[_vm._v(\"String\")]),_vm._v(\"类型或者让\"),_c('code',[_vm._v(\"Number\")]),_vm._v(\"类型，对应\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"中的某一项的\"),_c('code',[_vm._v(\"id\")]),_vm._v(\"。\")])]),_c('template',{slot:\"source\"},[_c('df-demo2')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 tree-select</p>\\n      <df-tree-select\\n        :value=\\\"value\\\"\\n        :data=\\\"data\\\"\\n        :multiple=\\\"multiple\\\"\\n        :valueType=\\\"valueType\\\"\\n        :filterNodeMethod=\\\"filterNode\\\"\\n        ref=\\\"treeSelect\\\"\\n      >\\n      </df-tree-select>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    const data = [{\\n      id: 1,\\n      label: '一级 1',\\n      children: [{\\n        id: 4,\\n        label: '二级 1-1',\\n        children: [{\\n          id: 9,\\n          label: '三级 1-1-1'\\n        }, {\\n          id: 10,\\n          label: '三级 1-1-2'\\n        }]\\n      }]\\n    }, {\\n      id: 2,\\n      label: '一级 2',\\n      children: [{\\n        id: 5,\\n        label: '二级 2-1'\\n      }, {\\n        id: 6,\\n        label: '二级 2-2'\\n      }]\\n    }, {\\n      id: 3,\\n      label: '一级 3',\\n      children: [{\\n        id: 7,\\n        label: '二级 3-1'\\n      }, {\\n        id: 8,\\n        label: '二级 3-2'\\n      }]\\n    }];\\n    return {\\n      value: 2,\\n      valueType: 'id',\\n      data: JSON.parse(JSON.stringify(data)),\\n      multiple: false,\\n      defaultExpand: false\\n    }\\n  },\\n\\n  methods: {\\n    filterNode(value, data) {\\n      if (!value) return true;\\n      return data.label.indexOf(value) !== -1;\\n    }\\n  }\\n\\n};\\n</script>\\n\\n\")])])])],2),_vm._m(6),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"单选模式下，如果\"),_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"，则\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"需要配置为\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"中的某一项。\")])]),_c('template',{slot:\"source\"},[_c('df-demo3')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 tree-select</p>\\n      <df-tree-select\\n        :value=\\\"value\\\"\\n        :data=\\\"data\\\"\\n        :multiple=\\\"multiple\\\"\\n        :valueType=\\\"valueType\\\"\\n        :filterNodeMethod=\\\"filterNode\\\"\\n        ref=\\\"treeSelect\\\"\\n      >\\n      </df-tree-select>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    const data = [{\\n      id: 1,\\n      label: '一级 1',\\n      children: [{\\n        id: 4,\\n        label: '二级 1-1',\\n        children: [{\\n          id: 9,\\n          label: '三级 1-1-1'\\n        }, {\\n          id: 10,\\n          label: '三级 1-1-2'\\n        }]\\n      }]\\n    }, {\\n      id: 2,\\n      label: '一级 2',\\n      children: [{\\n        id: 5,\\n        label: '二级 2-1'\\n      }, {\\n        id: 6,\\n        label: '二级 2-2'\\n      }]\\n    }, {\\n      id: 3,\\n      label: '一级 3',\\n      children: [{\\n        id: 7,\\n        label: '二级 3-1'\\n      }, {\\n        id: 8,\\n        label: '二级 3-2'\\n      }]\\n    }];\\n    return {\\n      value: {\\n        id: 2,\\n        label: '一级 2'\\n      },\\n      valueType: 'data',\\n      data: JSON.parse(JSON.stringify(data)),\\n      multiple: false,\\n      defaultExpand: false\\n    }\\n  },\\n\\n  methods: {\\n    filterNode(value, data) {\\n      if (!value) return true;\\n      return data.label.indexOf(value) !== -1;\\n    }\\n  }\\n\\n};\\n</script>\\n\\n\")])])])],2),_vm._m(7),_vm._m(8),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"多选模式下，\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"必须是数组类型，如果\"),_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"id\")]),_vm._v(\"，则\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"中的项需要配置为\"),_c('code',[_vm._v(\"String\")]),_vm._v(\"类型或者让\"),_c('code',[_vm._v(\"Number\")]),_vm._v(\"类型，对应\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"中的\"),_c('code',[_vm._v(\"id\")]),_vm._v(\"。\")])]),_c('template',{slot:\"source\"},[_c('df-demo4')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 tree-select</p>\\n      <df-tree-select\\n        :value=\\\"value\\\"\\n        :data=\\\"data\\\"\\n        :multiple=\\\"multiple\\\"\\n        :valueType=\\\"valueType\\\"\\n        :filterNodeMethod=\\\"filterNode\\\"\\n        ref=\\\"treeSelect\\\"\\n      >\\n      </df-tree-select>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    const data = [{\\n      id: 1,\\n      label: '一级 1',\\n      children: [{\\n        id: 4,\\n        label: '二级 1-1',\\n        children: [{\\n          id: 9,\\n          label: '三级 1-1-1'\\n        }, {\\n          id: 10,\\n          label: '三级 1-1-2'\\n        }]\\n      }]\\n    }, {\\n      id: 2,\\n      label: '一级 2',\\n      children: [{\\n        id: 5,\\n        label: '二级 2-1'\\n      }, {\\n        id: 6,\\n        label: '二级 2-2'\\n      }]\\n    }, {\\n      id: 3,\\n      label: '一级 3',\\n      children: [{\\n        id: 7,\\n        label: '二级 3-1'\\n      }, {\\n        id: 8,\\n        label: '二级 3-2'\\n      }]\\n    }];\\n    return {\\n      value: [10, 7],\\n      valueType: 'id',\\n      data: JSON.parse(JSON.stringify(data)),\\n      multiple: true,\\n      defaultExpand: false\\n    }\\n  },\\n\\n  methods: {\\n    filterNode(value, data) {\\n      if (!value) return true;\\n      return data.label.indexOf(value) !== -1;\\n    }\\n  }\\n\\n};\\n</script>\\n\\n\")])])])],2),_vm._m(9),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"多选模式下，\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"必须是数组类型，\"),_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"时，则\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"中的项需要配置为\"),_c('code',[_vm._v(\"data\")]),_vm._v(\"中的某些项。\")])]),_c('template',{slot:\"source\"},[_c('df-demo5')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 tree-select</p>\\n      <df-tree-select\\n        :value=\\\"value\\\"\\n        :data=\\\"data\\\"\\n        :multiple=\\\"multiple\\\"\\n        :valueType=\\\"valueType\\\"\\n        :filterNodeMethod=\\\"filterNode\\\"\\n        ref=\\\"treeSelect\\\"\\n      >\\n      </df-tree-select>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    const data = [{\\n      id: 1,\\n      label: '一级 1',\\n      children: [{\\n        id: 4,\\n        label: '二级 1-1',\\n        children: [{\\n          id: 9,\\n          label: '三级 1-1-1'\\n        }, {\\n          id: 10,\\n          label: '三级 1-1-2'\\n        }]\\n      }]\\n    }, {\\n      id: 2,\\n      label: '一级 2',\\n      children: [{\\n        id: 5,\\n        label: '二级 2-1'\\n      }, {\\n        id: 6,\\n        label: '二级 2-2'\\n      }]\\n    }, {\\n      id: 3,\\n      label: '一级 3',\\n      children: [{\\n        id: 7,\\n        label: '二级 3-1'\\n      }, {\\n        id: 8,\\n        label: '二级 3-2'\\n      }]\\n    }];\\n    return {\\n      value: [{\\n        id: 10,\\n        label: '三级 1-1-2'\\n      }, {\\n        id: 7,\\n        label: '二级 3-1'\\n      }],\\n      valueType: 'data',\\n      data: JSON.parse(JSON.stringify(data)),\\n      multiple: true,\\n      defaultExpand: false\\n    }\\n  },\\n\\n  methods: {\\n    filterNode(value, data) {\\n      if (!value) return true;\\n      return data.label.indexOf(value) !== -1;\\n    }\\n  }\\n\\n};\\n</script>\\n\\n\")])])])],2),_vm._m(10),_vm._m(11),_vm._m(12),_vm._m(13),_vm._m(14),_vm._m(15),_vm._m(16),_vm._m(17),_vm._m(18),_vm._m(19),_vm._m(20),_vm._m(21)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('h2',{attrs:{\"id\":\"treeselect-shu-xing-xia-la-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#treeselect-shu-xing-xia-la-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" TreeSelect 树形下拉选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"zhi-chi-jian-pan-cao-zuo\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#zhi-chi-jian-pan-cao-zuo\"}},[_vm._v(\"¶\")]),_vm._v(\" 支持键盘操作\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"ji-chu-yong-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ji-chu-yong-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" 基础用法\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"duo-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#duo-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 多选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"mo-ren-xuan-ze-dan-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mo-ren-xuan-ze-dan-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 默认选择·单选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"使用\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"valueType\")]),_vm._v(\"来设置单选情况下的选择下拉树的默认选择项。\"),_c('br'),_c('em',[_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"id\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_c('em',[_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"data\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"mo-ren-xuan-ze-duo-xuan\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mo-ren-xuan-ze-duo-xuan\"}},[_vm._v(\"¶\")]),_vm._v(\" 默认选择·多选\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"使用\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"valueType\")]),_vm._v(\"来设置多选情况下的选择下拉树的默认选择项。\"),_c('br'),_c('em',[_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"id\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_c('em',[_c('code',[_vm._v(\"valueType\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"data\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"attributes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#attributes\"}},[_vm._v(\"¶\")]),_vm._v(\" Attributes\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"data\")]),_c('td',[_vm._v(\"tree 数据源\")]),_c('td',[_vm._v(\"array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"value\")]),_c('td',[_vm._v(\"默认勾选中的节点的值\")]),_c('td',[_vm._v(\"string/number/object/array\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"value-type\")]),_c('td',[_vm._v(\"value 的类型，设置为 id 时 value 的值需要设置为选中节点的 id，设置为 data 时 value 的值需要设置为选中节点的 data\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"multiple\")]),_c('td',[_vm._v(\"是否开启多选，开启多选时，value 必须配置为数组，数组里的每一项的类型依旧遵循 valueType 的规则\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"check-strictly\")]),_c('td',[_vm._v(\"在显示复选框的情况下，是否严格的遵循父子不互相关联的做法，默认为 false，默认开启父子关联\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"default-expand\")]),_c('td',[_vm._v(\"tree是否默认展开\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"expand-on-click-node\")]),_c('td',[_vm._v(\"是否在点击节点的时候展开或者收缩节点，在 tree-select 组件中，应该永远将该项设为 false，只有点箭头图标的时候才会展开或者收缩节点。\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"true\")])]),_c('tr',[_c('td',[_vm._v(\"tree-props\")]),_c('td',[_vm._v(\"同df-tree\")]),_c('td',[_vm._v(\"object\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"{id: 'id', label: 'label', children: 'children', disabled: 'disabled', isLeaf: 'isLeaf'}\")])]),_c('tr',[_c('td',[_vm._v(\"filter-node-method\")]),_c('td',[_vm._v(\"对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏\")]),_c('td',[_vm._v(\"Function(value, data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"click-outside-to-submit\")]),_c('td',[_vm._v(\"点击弹出层的外部时，是否要直接确定操作\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"node-disabled-func\")]),_c('td',[_vm._v(\"通过回调函数的形式控制某些节点的禁用状态\")]),_c('td',[_vm._v(\"function\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"disabled\")]),_c('td',[_vm._v(\"控制组件的禁用状态\")]),_c('td',[_vm._v(\"boolean\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"false\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"props\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#props\"}},[_vm._v(\"¶\")]),_vm._v(\" props\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"可选值\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"label\")]),_c('td',[_vm._v(\"指定节点标签为节点对象的某个属性值\")]),_c('td',[_vm._v(\"string, function(data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"children\")]),_c('td',[_vm._v(\"指定子树为节点对象的某个属性值\")]),_c('td',[_vm._v(\"string\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"disabled\")]),_c('td',[_vm._v(\"指定节点选择框是否禁用为节点对象的某个属性值\")]),_c('td',[_vm._v(\"boolean, function(data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"isLeaf\")]),_c('td',[_vm._v(\"指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\")]),_c('td',[_vm._v(\"boolean, function(data, node)\")]),_c('td',[_vm._v(\"—\")]),_c('td',[_vm._v(\"—\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"events\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#events\"}},[_vm._v(\"¶\")]),_vm._v(\" Events\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"事件名称\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"回调参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"change\")]),_c('td',[_vm._v(\"选中值发生变化时触发\")]),_c('td',[_vm._v(\"目前的选中值（和 Attributes 中的 value 数据类型一致，根据 valueType 的类型进行判断）\")])]),_c('tr',[_c('td',[_vm._v(\"clear\")]),_c('td',[_vm._v(\"可清空的模式下用户点击清空按钮时触发\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"blur\")]),_c('td',[_vm._v(\"当 input 失去焦点时触发\")]),_c('td',[_vm._v(\"(event: Event)\")])]),_c('tr',[_c('td',[_vm._v(\"focus\")]),_c('td',[_vm._v(\"当 input 获得焦点时触发\")]),_c('td',[_vm._v(\"(event: Event)\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"tree-de-fang-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#tree-de-fang-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" Tree 的方法\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_c('code',[_vm._v(\"Tree\")]),_vm._v(\" 内部使用了 Node 类型的对象来包装用户传入的数据，用来保存目前节点的状态。\"),_c('code',[_vm._v(\"Tree\")]),_vm._v(\" 组件是 \"),_c('code',[_vm._v(\"Select-Tree\")]),_vm._v(\" 组件的子组件，若要获取 \"),_c('code',[_vm._v(\"Tree\")]),_vm._v(\" 组件，通过这种方式即可：this.$refs[SelectTreeName].getRefTree()。\"),_c('br'),_c('code',[_vm._v(\"Tree\")]),_vm._v(\" 拥有如下方法：\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"方法名\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"filter\")]),_c('td',[_vm._v(\"对树节点进行筛选操作\")]),_c('td',[_vm._v(\"接收一个任意类型的参数，该参数会在 filter-node-method 中作为第一个参数\")])]),_c('tr',[_c('td',[_vm._v(\"updateKeyChildren\")]),_c('td',[_vm._v(\"通过 keys 设置节点子元素，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(key, data) 接收两个参数，1. 节点 key 2. 节点数据的数组\")])]),_c('tr',[_c('td',[_vm._v(\"getCheckedNodes\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前被选中的节点所组成的数组\")]),_c('td',[_vm._v(\"(leafOnly, includeHalfChecked) 接收两个 boolean 类型的参数，1. 是否只是叶子节点，默认值为 \"),_c('code',[_vm._v(\"false\")]),_vm._v(\" 2. 是否包含半选节点，默认值为 \"),_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"setCheckedNodes\")]),_c('td',[_vm._v(\"设置目前勾选的节点，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(nodes) 接收勾选节点数据的数组\")])]),_c('tr',[_c('td',[_vm._v(\"getCheckedKeys\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前被选中的节点的 key 所组成的数组\")]),_c('td',[_vm._v(\"(leafOnly) 接收一个 boolean 类型的参数，若为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\" 则仅返回被选中的叶子节点的 keys，默认值为 \"),_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"setCheckedKeys\")]),_c('td',[_vm._v(\"通过 keys 设置目前勾选的节点，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(keys, leafOnly) 接收两个参数，1. 勾选节点的 key 的数组 2. boolean 类型的参数，若为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\" 则仅设置叶子节点的选中状态，默认值为 \"),_c('code',[_vm._v(\"false\")])])]),_c('tr',[_c('td',[_vm._v(\"setChecked\")]),_c('td',[_vm._v(\"通过 key / data 设置某个节点的勾选状态，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(key/data, checked, deep) 接收三个参数，1. 勾选节点的 key 或者 data 2. boolean 类型，节点是否选中 3. boolean 类型，是否设置子节点 ，默认为 false\")])]),_c('tr',[_c('td',[_vm._v(\"getHalfCheckedNodes\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前半选中的节点所组成的数组\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"getHalfCheckedKeys\")]),_c('td',[_vm._v(\"若节点可被选择（即 \"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"true\")]),_vm._v(\"），则返回目前半选中的节点的 key 所组成的数组\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"getCurrentKey\")]),_c('td',[_vm._v(\"获取当前被选中节点的 key，使用此方法必须设置 node-key 属性，若没有节点被选中则返回 null\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"getCurrentNode\")]),_c('td',[_vm._v(\"获取当前被选中节点的 data，若没有节点被选中则返回 null\")]),_c('td',[_vm._v(\"—\")])]),_c('tr',[_c('td',[_vm._v(\"setCurrentKey\")]),_c('td',[_vm._v(\"通过 key 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(key) 待被选节点的 key，若为 null 则取消当前高亮的节点\")])]),_c('tr',[_c('td',[_vm._v(\"setCurrentNode\")]),_c('td',[_vm._v(\"通过 node 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(node) 待被选节点的 node\")])]),_c('tr',[_c('td',[_vm._v(\"getNode\")]),_c('td',[_vm._v(\"根据 data 或者 key 拿到 Tree 组件中的 node\")]),_c('td',[_vm._v(\"(data) 要获得 node 的 key 或者 data\")])]),_c('tr',[_c('td',[_vm._v(\"remove\")]),_c('td',[_vm._v(\"删除 Tree 中的一个节点，使用此方法必须设置 node-key 属性\")]),_c('td',[_vm._v(\"(data) 要删除的节点的 data 或者 node\")])]),_c('tr',[_c('td',[_vm._v(\"append\")]),_c('td',[_vm._v(\"为 Tree 中的一个节点追加一个子节点\")]),_c('td',[_vm._v(\"(data, parentNode) 接收两个参数，1. 要追加的子节点的 data 2. 子节点的 parent 的 data、key 或者 node\")])]),_c('tr',[_c('td',[_vm._v(\"insertBefore\")]),_c('td',[_vm._v(\"为 Tree 的一个节点的前面增加一个节点\")]),_c('td',[_vm._v(\"(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的后一个节点的 data、key 或者 node\")])]),_c('tr',[_c('td',[_vm._v(\"insertAfter\")]),_c('td',[_vm._v(\"为 Tree 的一个节点的后面增加一个节点\")]),_c('td',[_vm._v(\"(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的前一个节点的 data、key 或者 node\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"select-de-fang-fa\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#select-de-fang-fa\"}},[_vm._v(\"¶\")]),_vm._v(\" Select 的方法\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_c('code',[_vm._v(\"Select\")]),_vm._v(\" 组件是 \"),_c('code',[_vm._v(\"Select-Tree\")]),_vm._v(\" 组件的子组件，若要获取 \"),_c('code',[_vm._v(\"Select\")]),_vm._v(\" 组件，通过这种方式即可：this.$refs[SelectTreeName].getRefSelect()。\"),_c('br'),_c('code',[_vm._v(\"Select\")]),_vm._v(\" 拥有如下方法：\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"方法名\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"focus\")]),_c('td',[_vm._v(\"使 input 获取焦点\")]),_c('td',[_vm._v(\"-\")])]),_c('tr',[_c('td',[_vm._v(\"blur\")]),_c('td',[_vm._v(\"使 input 失去焦点，并隐藏下拉框\")]),_c('td',[_vm._v(\"-\")])])])])\n}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content df-doc\">\n        <h2 id=\"treeselect-shu-xing-xia-la-xuan\"><a class=\"header-anchor\" href=\"#treeselect-shu-xing-xia-la-xuan\">¶</a> TreeSelect 树形下拉选</h2>\n<p>用清晰的层级结构展示下拉选信息，可展开或折叠。</p>\n<h3 id=\"zhi-chi-jian-pan-cao-zuo\"><a class=\"header-anchor\" href=\"#zhi-chi-jian-pan-cao-zuo\">¶</a> 支持键盘操作</h3>\n<p>输入框聚焦时按 ↓ 键可跳入树结构, 在树结构内可使用上下切换聚焦项, 使用左右可展开和收起, 使用空格选中, 使用 enter 来确认。</p>\n<p>输入框聚焦时按 enter 键, 如果当前已有选中的树节点, 则收起下拉树, 如果当前没有已选中的树节点, 则默认选中第一个节点。</p>\n<p>按 esc 键收起下拉树。</p>\n<h3 id=\"ji-chu-yong-fa\"><a class=\"header-anchor\" href=\"#ji-chu-yong-fa\">¶</a> 基础用法</h3>\n<p>基础的下拉选树形结构展示。</p>\n<demo-block>\n        <div><p>基础的单选下拉树，传入<code>data</code>用于下拉树的结构数据渲染。使用<code>filterNodeMethod</code>设置输入框输入的文字的实时搜索匹配规则。</p>\n</div>\n        <template slot=\"source\"><df-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;custom-tree-container&quot;&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 tree-select&lt;/p&gt;\n      &lt;df-tree-select\n        :value=&quot;value&quot;\n        :data=&quot;data&quot;\n        :multiple=&quot;multiple&quot;\n        :valueType=&quot;valueType&quot;\n        :filterNodeMethod=&quot;filterNode&quot;\n        ref=&quot;treeSelect&quot;\n      &gt;\n      &lt;/df-tree-select&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: '',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: false,\n      defaultExpand: false,\n      valueType: 'id'\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n&lt;/script&gt;\n\n</code></pre></template></demo-block><h3 id=\"duo-xuan\"><a class=\"header-anchor\" href=\"#duo-xuan\">¶</a> 多选</h3>\n<p>下拉树支持多选。</p>\n<demo-block>\n        <div><p>将<code>multiple</code>配置为<code>true</code>，即可开启多选。</p>\n</div>\n        <template slot=\"source\"><df-demo1 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;custom-tree-container&quot;&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 tree-select&lt;/p&gt;\n      &lt;df-tree-select\n        :value=&quot;value&quot;\n        :data=&quot;data&quot;\n        :multiple=&quot;multiple&quot;\n        :valueType=&quot;valueType&quot;\n        :filterNodeMethod=&quot;filterNode&quot;\n        ref=&quot;treeSelect&quot;\n      &gt;\n      &lt;/df-tree-select&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: '',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: true,\n      defaultExpand: false,\n      valueType: 'id'\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n&lt;/script&gt;\n\n</code></pre></template></demo-block><h3 id=\"mo-ren-xuan-ze-dan-xuan\"><a class=\"header-anchor\" href=\"#mo-ren-xuan-ze-dan-xuan\">¶</a> 默认选择·单选</h3>\n<p>使用<code>value</code>和<code>valueType</code>来设置单选情况下的选择下拉树的默认选择项。<br>\n<em><code>valueType</code>为<code>id</code></em></p>\n<demo-block>\n        <div><p>单选模式下，如果<code>valueType</code>为<code>id</code>，则<code>value</code>需要配置为<code>String</code>类型或者让<code>Number</code>类型，对应<code>data</code>中的某一项的<code>id</code>。</p>\n</div>\n        <template slot=\"source\"><df-demo2 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;custom-tree-container&quot;&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 tree-select&lt;/p&gt;\n      &lt;df-tree-select\n        :value=&quot;value&quot;\n        :data=&quot;data&quot;\n        :multiple=&quot;multiple&quot;\n        :valueType=&quot;valueType&quot;\n        :filterNodeMethod=&quot;filterNode&quot;\n        ref=&quot;treeSelect&quot;\n      &gt;\n      &lt;/df-tree-select&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: 2,\n      valueType: 'id',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: false,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n&lt;/script&gt;\n\n</code></pre></template></demo-block><p><em><code>valueType</code>为<code>data</code></em></p>\n<demo-block>\n        <div><p>单选模式下，如果<code>valueType</code>为<code>data</code>，则<code>value</code>需要配置为<code>data</code>中的某一项。</p>\n</div>\n        <template slot=\"source\"><df-demo3 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;custom-tree-container&quot;&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 tree-select&lt;/p&gt;\n      &lt;df-tree-select\n        :value=&quot;value&quot;\n        :data=&quot;data&quot;\n        :multiple=&quot;multiple&quot;\n        :valueType=&quot;valueType&quot;\n        :filterNodeMethod=&quot;filterNode&quot;\n        ref=&quot;treeSelect&quot;\n      &gt;\n      &lt;/df-tree-select&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: {\n        id: 2,\n        label: '一级 2'\n      },\n      valueType: 'data',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: false,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n&lt;/script&gt;\n\n</code></pre></template></demo-block><h3 id=\"mo-ren-xuan-ze-duo-xuan\"><a class=\"header-anchor\" href=\"#mo-ren-xuan-ze-duo-xuan\">¶</a> 默认选择·多选</h3>\n<p>使用<code>value</code>和<code>valueType</code>来设置多选情况下的选择下拉树的默认选择项。<br>\n<em><code>valueType</code>为<code>id</code></em></p>\n<demo-block>\n        <div><p>多选模式下，<code>value</code>必须是数组类型，如果<code>valueType</code>为<code>id</code>，则<code>value</code>中的项需要配置为<code>String</code>类型或者让<code>Number</code>类型，对应<code>data</code>中的<code>id</code>。</p>\n</div>\n        <template slot=\"source\"><df-demo4 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;custom-tree-container&quot;&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 tree-select&lt;/p&gt;\n      &lt;df-tree-select\n        :value=&quot;value&quot;\n        :data=&quot;data&quot;\n        :multiple=&quot;multiple&quot;\n        :valueType=&quot;valueType&quot;\n        :filterNodeMethod=&quot;filterNode&quot;\n        ref=&quot;treeSelect&quot;\n      &gt;\n      &lt;/df-tree-select&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: [10, 7],\n      valueType: 'id',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: true,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n&lt;/script&gt;\n\n</code></pre></template></demo-block><p><em><code>valueType</code>为<code>data</code></em></p>\n<demo-block>\n        <div><p>多选模式下，<code>value</code>必须是数组类型，<code>valueType</code>为<code>data</code>时，则<code>value</code>中的项需要配置为<code>data</code>中的某些项。</p>\n</div>\n        <template slot=\"source\"><df-demo5 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div class=&quot;custom-tree-container&quot;&gt;\n    &lt;div class=&quot;block&quot;&gt;\n      &lt;p&gt;使用 tree-select&lt;/p&gt;\n      &lt;df-tree-select\n        :value=&quot;value&quot;\n        :data=&quot;data&quot;\n        :multiple=&quot;multiple&quot;\n        :valueType=&quot;valueType&quot;\n        :filterNodeMethod=&quot;filterNode&quot;\n        ref=&quot;treeSelect&quot;\n      &gt;\n      &lt;/df-tree-select&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: [{\n        id: 10,\n        label: '三级 1-1-2'\n      }, {\n        id: 7,\n        label: '二级 3-1'\n      }],\n      valueType: 'data',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: true,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n&lt;/script&gt;\n\n</code></pre></template></demo-block><h3 id=\"attributes\"><a class=\"header-anchor\" href=\"#attributes\">¶</a> Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>tree 数据源</td>\n<td>array</td>\n<td>—</td>\n<td>-</td>\n</tr>\n<tr>\n<td>value</td>\n<td>默认勾选中的节点的值</td>\n<td>string/number/object/array</td>\n<td>—</td>\n<td>-</td>\n</tr>\n<tr>\n<td>value-type</td>\n<td>value 的类型，设置为 id 时 value 的值需要设置为选中节点的 id，设置为 data 时 value 的值需要设置为选中节点的 data</td>\n<td>string</td>\n<td>—</td>\n<td>-</td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>是否开启多选，开启多选时，value 必须配置为数组，数组里的每一项的类型依旧遵循 valueType 的规则</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>check-strictly</td>\n<td>在显示复选框的情况下，是否严格的遵循父子不互相关联的做法，默认为 false，默认开启父子关联</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>default-expand</td>\n<td>tree是否默认展开</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>expand-on-click-node</td>\n<td>是否在点击节点的时候展开或者收缩节点，在 tree-select 组件中，应该永远将该项设为 false，只有点箭头图标的时候才会展开或者收缩节点。</td>\n<td>boolean</td>\n<td>—</td>\n<td>true</td>\n</tr>\n<tr>\n<td>tree-props</td>\n<td>同df-tree</td>\n<td>object</td>\n<td>—</td>\n<td>{id: 'id', label: 'label', children: 'children', disabled: 'disabled', isLeaf: 'isLeaf'}</td>\n</tr>\n<tr>\n<td>filter-node-method</td>\n<td>对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏</td>\n<td>Function(value, data, node)</td>\n<td>—</td>\n<td>-</td>\n</tr>\n<tr>\n<td>click-outside-to-submit</td>\n<td>点击弹出层的外部时，是否要直接确定操作</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n<tr>\n<td>node-disabled-func</td>\n<td>通过回调函数的形式控制某些节点的禁用状态</td>\n<td>function</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>控制组件的禁用状态</td>\n<td>boolean</td>\n<td>—</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"props\"><a class=\"header-anchor\" href=\"#props\">¶</a> props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>label</td>\n<td>指定节点标签为节点对象的某个属性值</td>\n<td>string, function(data, node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>children</td>\n<td>指定子树为节点对象的某个属性值</td>\n<td>string</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>指定节点选择框是否禁用为节点对象的某个属性值</td>\n<td>boolean, function(data, node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>isLeaf</td>\n<td>指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效</td>\n<td>boolean, function(data, node)</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"events\"><a class=\"header-anchor\" href=\"#events\">¶</a> Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>change</td>\n<td>选中值发生变化时触发</td>\n<td>目前的选中值（和 Attributes 中的 value 数据类型一致，根据 valueType 的类型进行判断）</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>可清空的模式下用户点击清空按钮时触发</td>\n<td>—</td>\n</tr>\n<tr>\n<td>blur</td>\n<td>当 input 失去焦点时触发</td>\n<td>(event: Event)</td>\n</tr>\n<tr>\n<td>focus</td>\n<td>当 input 获得焦点时触发</td>\n<td>(event: Event)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tree-de-fang-fa\"><a class=\"header-anchor\" href=\"#tree-de-fang-fa\">¶</a> Tree 的方法</h3>\n<p><code>Tree</code> 内部使用了 Node 类型的对象来包装用户传入的数据，用来保存目前节点的状态。<code>Tree</code> 组件是 <code>Select-Tree</code> 组件的子组件，若要获取 <code>Tree</code> 组件，通过这种方式即可：this.$refs[SelectTreeName].getRefTree()。<br>\n<code>Tree</code> 拥有如下方法：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filter</td>\n<td>对树节点进行筛选操作</td>\n<td>接收一个任意类型的参数，该参数会在 filter-node-method 中作为第一个参数</td>\n</tr>\n<tr>\n<td>updateKeyChildren</td>\n<td>通过 keys 设置节点子元素，使用此方法必须设置 node-key 属性</td>\n<td>(key, data) 接收两个参数，1. 节点 key 2. 节点数据的数组</td>\n</tr>\n<tr>\n<td>getCheckedNodes</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前被选中的节点所组成的数组</td>\n<td>(leafOnly, includeHalfChecked) 接收两个 boolean 类型的参数，1. 是否只是叶子节点，默认值为 <code>false</code> 2. 是否包含半选节点，默认值为 <code>false</code></td>\n</tr>\n<tr>\n<td>setCheckedNodes</td>\n<td>设置目前勾选的节点，使用此方法必须设置 node-key 属性</td>\n<td>(nodes) 接收勾选节点数据的数组</td>\n</tr>\n<tr>\n<td>getCheckedKeys</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前被选中的节点的 key 所组成的数组</td>\n<td>(leafOnly) 接收一个 boolean 类型的参数，若为 <code>true</code> 则仅返回被选中的叶子节点的 keys，默认值为 <code>false</code></td>\n</tr>\n<tr>\n<td>setCheckedKeys</td>\n<td>通过 keys 设置目前勾选的节点，使用此方法必须设置 node-key 属性</td>\n<td>(keys, leafOnly) 接收两个参数，1. 勾选节点的 key 的数组 2. boolean 类型的参数，若为 <code>true</code> 则仅设置叶子节点的选中状态，默认值为 <code>false</code></td>\n</tr>\n<tr>\n<td>setChecked</td>\n<td>通过 key / data 设置某个节点的勾选状态，使用此方法必须设置 node-key 属性</td>\n<td>(key/data, checked, deep) 接收三个参数，1. 勾选节点的 key 或者 data 2. boolean 类型，节点是否选中  3. boolean 类型，是否设置子节点 ，默认为 false</td>\n</tr>\n<tr>\n<td>getHalfCheckedNodes</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前半选中的节点所组成的数组</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getHalfCheckedKeys</td>\n<td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前半选中的节点的 key 所组成的数组</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getCurrentKey</td>\n<td>获取当前被选中节点的 key，使用此方法必须设置 node-key 属性，若没有节点被选中则返回 null</td>\n<td>—</td>\n</tr>\n<tr>\n<td>getCurrentNode</td>\n<td>获取当前被选中节点的 data，若没有节点被选中则返回 null</td>\n<td>—</td>\n</tr>\n<tr>\n<td>setCurrentKey</td>\n<td>通过 key 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性</td>\n<td>(key) 待被选节点的 key，若为 null 则取消当前高亮的节点</td>\n</tr>\n<tr>\n<td>setCurrentNode</td>\n<td>通过 node 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性</td>\n<td>(node) 待被选节点的 node</td>\n</tr>\n<tr>\n<td>getNode</td>\n<td>根据 data 或者 key 拿到 Tree 组件中的 node</td>\n<td>(data) 要获得 node 的 key 或者 data</td>\n</tr>\n<tr>\n<td>remove</td>\n<td>删除 Tree 中的一个节点，使用此方法必须设置 node-key 属性</td>\n<td>(data) 要删除的节点的 data 或者 node</td>\n</tr>\n<tr>\n<td>append</td>\n<td>为 Tree 中的一个节点追加一个子节点</td>\n<td>(data, parentNode) 接收两个参数，1. 要追加的子节点的 data 2. 子节点的 parent 的 data、key 或者 node</td>\n</tr>\n<tr>\n<td>insertBefore</td>\n<td>为 Tree 的一个节点的前面增加一个节点</td>\n<td>(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的后一个节点的 data、key 或者 node</td>\n</tr>\n<tr>\n<td>insertAfter</td>\n<td>为 Tree 的一个节点的后面增加一个节点</td>\n<td>(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的前一个节点的 data、key 或者 node</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"select-de-fang-fa\"><a class=\"header-anchor\" href=\"#select-de-fang-fa\">¶</a> Select 的方法</h3>\n<p><code>Select</code> 组件是 <code>Select-Tree</code> 组件的子组件，若要获取 <code>Select</code> 组件，通过这种方式即可：this.$refs[SelectTreeName].getRefSelect()。<br>\n<code>Select</code> 拥有如下方法：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>focus</td>\n<td>使 input 获取焦点</td>\n<td>-</td>\n</tr>\n<tr>\n<td>blur</td>\n<td>使 input 失去焦点，并隐藏下拉框</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"df-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 tree-select\")]),_vm._v(\" \"),_c('df-tree-select',{ref:\"treeSelect\",attrs:{\"value\":_vm.value,\"data\":_vm.data,\"multiple\":_vm.multiple,\"valueType\":_vm.valueType,\"filterNodeMethod\":_vm.filterNode}})],1)])]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: '',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: false,\n      defaultExpand: false,\n      valueType: 'id'\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo1\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 tree-select\")]),_vm._v(\" \"),_c('df-tree-select',{ref:\"treeSelect\",attrs:{\"value\":_vm.value,\"data\":_vm.data,\"multiple\":_vm.multiple,\"valueType\":_vm.valueType,\"filterNodeMethod\":_vm.filterNode}})],1)])]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: '',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: true,\n      defaultExpand: false,\n      valueType: 'id'\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo2\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 tree-select\")]),_vm._v(\" \"),_c('df-tree-select',{ref:\"treeSelect\",attrs:{\"value\":_vm.value,\"data\":_vm.data,\"multiple\":_vm.multiple,\"valueType\":_vm.valueType,\"filterNodeMethod\":_vm.filterNode}})],1)])]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: 2,\n      valueType: 'id',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: false,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo3\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 tree-select\")]),_vm._v(\" \"),_c('df-tree-select',{ref:\"treeSelect\",attrs:{\"value\":_vm.value,\"data\":_vm.data,\"multiple\":_vm.multiple,\"valueType\":_vm.valueType,\"filterNodeMethod\":_vm.filterNode}})],1)])]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: {\n        id: 2,\n        label: '一级 2'\n      },\n      valueType: 'data',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: false,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo4\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 tree-select\")]),_vm._v(\" \"),_c('df-tree-select',{ref:\"treeSelect\",attrs:{\"value\":_vm.value,\"data\":_vm.data,\"multiple\":_vm.multiple,\"valueType\":_vm.valueType,\"filterNodeMethod\":_vm.filterNode}})],1)])]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: [10, 7],\n      valueType: 'id',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: true,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"df-demo5\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('p',[_vm._v(\"使用 tree-select\")]),_vm._v(\" \"),_c('df-tree-select',{ref:\"treeSelect\",attrs:{\"value\":_vm.value,\"data\":_vm.data,\"multiple\":_vm.multiple,\"valueType\":_vm.valueType,\"filterNodeMethod\":_vm.filterNode}})],1)])]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n  data() {\n    const data = [{\n      id: 1,\n      label: '一级 1',\n      children: [{\n        id: 4,\n        label: '二级 1-1',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      value: [{\n        id: 10,\n        label: '三级 1-1-2'\n      }, {\n        id: 7,\n        label: '二级 3-1'\n      }],\n      valueType: 'data',\n      data: JSON.parse(JSON.stringify(data)),\n      multiple: true,\n      defaultExpand: false\n    }\n  },\n\n  methods: {\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    }\n  }\n\n};\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js!../../../docs/md-loader/index.js!../../../node_modules/eslint-loader/index.js??ref--14-0!./treeSelect.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js!../../../docs/md-loader/index.js!../../../node_modules/eslint-loader/index.js??ref--14-0!./treeSelect.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./treeSelect.md?vue&type=template&id=b4cdd4a8&\"\nimport script from \"./treeSelect.md?vue&type=script&lang=js&\"\nexport * from \"./treeSelect.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}